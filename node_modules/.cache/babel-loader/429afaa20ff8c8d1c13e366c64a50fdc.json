{"ast":null,"code":"var _jsxFileName = \"/Users/Nanis/Flatiron/code/mod5/synth-builder/synth-builder/src/components/XYPad.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport '../index.css';\nimport * as d3 from 'd3-delaunay';\nimport { changeOSCFreq, turnOnLFO, changeLFOType, changeLFOFreq, toggleOSC1chorusBypass, changeOSC1chorusDepth, changeOSC1chorusRate, toggleOSC1filterBypass, changeOSC1filterDepth, changeOSC1filterRate, toggleOSC1filter2Bypass, changeOSC1filter2Depth, changeOSC1filter2Rate, toggleOSC1tremoloBypass, changeOSC1tremoloIntensity, changeOSC1tremoloRate, toggleOSC1bitcrusherBypass, changeOSC1bitcrusherBits, changeOSC1bitcrusherBufferSize, toggleOSC1moogFilterBypass, changeOSC1moogFilterCutoff, changeOSC1moogFilterBufferSize, changeOSC1moogFilterResonance, toggleOSC1moogFilter2Bypass, changeOSC1moogFilter2Cutoff, changeOSC1moogFilter2BufferSize, changeOSC1moogFilter2Resonance, toggleOSC1reverbBypass, changeOSC1reverbLevel, toggleOSC1pannerBypass, changeOSC1pannerPan, toggleOSC1phaserBypass, changeOSC1phaserRate, changeOSC1phaserDepth, changeOSC1phaserFeedback, toggleOSC1overdriveBypass, changeOSC1overdriveDrive, changeOSC1overdriveGain ///OSC2/////////////////// \n, changeOSC2Freq, turnOnLFO2, changeLFO2Type, changeLFO2Freq, toggleOSC2chorusBypass, changeOSC2chorusDepth, changeOSC2chorusRate, toggleOSC2filterBypass, changeOSC2filterDepth, changeOSC2filterRate, toggleOSC2filter2Bypass, changeOSC2filter2Depth, changeOSC2filter2Rate, toggleOSC2tremoloBypass, changeOSC2tremoloIntensity, changeOSC2tremoloRate, toggleOSC2bitcrusherBypass, changeOSC2bitcrusherBits, changeOSC2bitcrusherBufferSize, toggleOSC2moogFilterBypass, changeOSC2moogFilterCutoff, changeOSC2moogFilterBufferSize, changeOSC2moogFilterResonance, toggleOSC2moogFilter2Bypass, changeOSC2moogFilter2Cutoff, changeOSC2moogFilter2BufferSize, changeOSC2moogFilter2Resonance, toggleOSC2reverbBypass, changeOSC2reverbLevel, toggleOSC2pannerBypass, changeOSC2pannerPan, toggleOSC2phaserBypass, changeOSC2phaserRate, changeOSC2phaserDepth, changeOSC2phaserFeedback, toggleOSC2overdriveBypass, changeOSC2overdriveDrive, changeOSC2overdriveGain ///OSC3/////////////////// \n, changeOSC3Freq, turnOnLFO3, changeLFO3Type, changeLFO3Freq, toggleOSC3chorusBypass, changeOSC3chorusDepth, changeOSC3chorusRate, toggleOSC3filterBypass, changeOSC3filterDepth, changeOSC3filterRate, toggleOSC3filter2Bypass, changeOSC3filter2Depth, changeOSC3filter2Rate, toggleOSC3tremoloBypass, changeOSC3tremoloIntensity, changeOSC3tremoloRate, toggleOSC3bitcrusherBypass, changeOSC3bitcrusherBits, changeOSC3bitcrusherBufferSize, toggleOSC3moogFilterBypass, changeOSC3moogFilterCutoff, changeOSC3moogFilterBufferSize, changeOSC3moogFilterResonance, toggleOSC3moogFilter2Bypass, changeOSC3moogFilter2Cutoff, changeOSC3moogFilter2BufferSize, changeOSC3moogFilter2Resonance, toggleOSC3reverbBypass, changeOSC3reverbLevel, toggleOSC3pannerBypass, changeOSC3pannerPan, toggleOSC3phaserBypass, changeOSC3phaserRate, changeOSC3phaserDepth, changeOSC3phaserFeedback, toggleOSC3overdriveBypass, changeOSC3overdriveDrive, changeOSC3overdriveGain ///OSC4/////////////////// \n, changeOSC4Freq, turnOnLFO4, changeLFO4Type, changeLFO4Freq, toggleOSC4chorusBypass, changeOSC4chorusDepth, changeOSC4chorusRate, toggleOSC4filterBypass, changeOSC4filterDepth, changeOSC4filterRate, toggleOSC4filter2Bypass, changeOSC4filter2Depth, changeOSC4filter2Rate, toggleOSC4tremoloBypass, changeOSC4tremoloIntensity, changeOSC4tremoloRate, toggleOSC4bitcrusherBypass, changeOSC4bitcrusherBits, changeOSC4bitcrusherBufferSize, toggleOSC4moogFilterBypass, changeOSC4moogFilterCutoff, changeOSC4moogFilterBufferSize, changeOSC4moogFilterResonance, toggleOSC4moogFilter2Bypass, changeOSC4moogFilter2Cutoff, changeOSC4moogFilter2BufferSize, changeOSC4moogFilter2Resonance, toggleOSC4reverbBypass, changeOSC4reverbLevel, toggleOSC4pannerBypass, changeOSC4pannerPan, toggleOSC4phaserBypass, changeOSC4phaserRate, changeOSC4phaserDepth, changeOSC4phaserFeedback, toggleOSC4overdriveBypass, changeOSC4overdriveDrive, changeOSC4overdriveGain } from './actions';\n\nclass XYPad extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props.width);\n    let circlePos1 = [Math.floor(Math.random() * this.props.width - 1 + 1) + 1, Math.floor(Math.random() * this.props.height - 1 + 1) + 10];\n    let circlePos2 = [Math.floor(Math.random() * this.props.width - 1 + 1) + 1, Math.floor(Math.random() * this.props.height - 1 + 1) + 10];\n    let circlePos3 = [Math.floor(Math.random() * this.props.width - 1 + 1) + 1, Math.floor(Math.random() * this.props.height - 1 + 1) + 10];\n    let circlePos4 = [Math.floor(Math.random() * this.props.width - 1 + 1) + 1, Math.floor(Math.random() * this.props.height - 1 + 1) + 10];\n    let squarePos1 = [Math.floor(Math.random() * this.props.width - 1 + 1) + 1, Math.floor(Math.random() * this.props.height - 1 + 1) + 10];\n    let squarePos2 = [Math.floor(Math.random() * this.props.width - 1 + 1) + 1, Math.floor(Math.random() * this.props.height - 1 + 1) + 10];\n    let squarePos3 = [Math.floor(Math.random() * this.props.width - 1 + 1) + 1, Math.floor(Math.random() * this.props.height - 1 + 1) + 10];\n    let squarePos4 = [Math.floor(Math.random() * this.props.width - 1 + 1) + 1, Math.floor(Math.random() * this.props.height - 1 + 1) + 10];\n    let squarePos5 = [Math.floor(Math.random() * this.props.width - 1 + 1) + 1, Math.floor(Math.random() * this.props.height - 1 + 1) + 10];\n    let squarePos6 = [Math.floor(Math.random() * this.props.width - 1 + 1) + 1, Math.floor(Math.random() * this.props.height - 1 + 1) + 10];\n    let squarePos7 = [Math.floor(Math.random() * this.props.width - 1 + 1) + 1, Math.floor(Math.random() * this.props.height - 1 + 1) + 10];\n    let squarePos8 = [Math.floor(Math.random() * this.props.width - 1 + 1) + 1, Math.floor(Math.random() * this.props.height - 1 + 1) + 10];\n    let squarePos9 = [Math.floor(Math.random() * this.props.width - 1 + 1) + 1, Math.floor(Math.random() * this.props.height - 1 + 1) + 10];\n    let squarePos10 = [Math.floor(Math.random() * this.props.width - 1 + 1) + 1, Math.floor(Math.random() * this.props.height - 1 + 1) + 10];\n    let squarePos11 = [Math.floor(Math.random() * this.props.width - 1 + 1) + 1, Math.floor(Math.random() * this.props.height - 1 + 1) + 10];\n    let squarePos12 = [Math.floor(Math.random() * this.props.width - 1 + 1) + 1, Math.floor(Math.random() * this.props.height - 1 + 1) + 10];\n    let squarePos13 = [Math.floor(Math.random() * this.props.width - 1 + 1) + 1, Math.floor(Math.random() * this.props.height - 1 + 1) + 10];\n    let squarePos14 = [Math.floor(Math.random() * this.props.width - 1 + 1) + 1, Math.floor(Math.random() * this.props.height - 1 + 1) + 10];\n    let squarePos15 = [Math.floor(Math.random() * this.props.width - 1 + 1) + 1, Math.floor(Math.random() * this.props.height - 1 + 1) + 10];\n    let squarePos16 = [Math.floor(Math.random() * this.props.width - 1 + 1) + 1, Math.floor(Math.random() * this.props.height - 1 + 1) + 10];\n    let square1distanceFromOsc1 = Math.sqrt((circlePos1[0] - squarePos1[0]) * (circlePos1[0] - squarePos1[0]) + (circlePos1[1] - squarePos1[1]) * (circlePos1[1] - squarePos1[1]));\n    let square1distanceFromOsc2 = Math.sqrt((circlePos2[0] - squarePos1[0]) * (circlePos2[0] - squarePos1[0]) + (circlePos2[1] - squarePos1[1]) * (circlePos2[1] - squarePos1[1]));\n    let square1distanceFromOsc3 = Math.sqrt((circlePos3[0] - squarePos1[0]) * (circlePos3[0] - squarePos1[0]) + (circlePos3[1] - squarePos1[1]) * (circlePos3[1] - squarePos1[1]));\n    let square1distanceFromOsc4 = Math.sqrt((circlePos4[0] - squarePos1[0]) * (circlePos4[0] - squarePos1[0]) + (circlePos4[1] - squarePos1[1]) * (circlePos4[1] - squarePos1[1]));\n    let square2distanceFromOsc1 = Math.sqrt((circlePos1[0] - squarePos2[0]) * (circlePos1[0] - squarePos2[0]) + (circlePos1[1] - squarePos2[1]) * (circlePos1[1] - squarePos2[1]));\n    let square2distanceFromOsc2 = Math.sqrt((circlePos2[0] - squarePos2[0]) * (circlePos2[0] - squarePos2[0]) + (circlePos2[1] - squarePos2[1]) * (circlePos2[1] - squarePos2[1]));\n    let square2distanceFromOsc3 = Math.sqrt((circlePos3[0] - squarePos2[0]) * (circlePos3[0] - squarePos2[0]) + (circlePos3[1] - squarePos2[1]) * (circlePos3[1] - squarePos2[1]));\n    let square2distanceFromOsc4 = Math.sqrt((circlePos4[0] - squarePos2[0]) * (circlePos4[0] - squarePos2[0]) + (circlePos4[1] - squarePos2[1]) * (circlePos4[1] - squarePos2[1]));\n    let square3distanceFromOsc1 = Math.sqrt((circlePos1[0] - squarePos3[0]) * (circlePos1[0] - squarePos3[0]) + (circlePos1[1] - squarePos3[1]) * (circlePos1[1] - squarePos3[1]));\n    let square3distanceFromOsc2 = Math.sqrt((circlePos2[0] - squarePos3[0]) * (circlePos2[0] - squarePos3[0]) + (circlePos2[1] - squarePos3[1]) * (circlePos2[1] - squarePos3[1]));\n    let square3distanceFromOsc3 = Math.sqrt((circlePos3[0] - squarePos3[0]) * (circlePos3[0] - squarePos3[0]) + (circlePos3[1] - squarePos3[1]) * (circlePos3[1] - squarePos3[1]));\n    let square3distanceFromOsc4 = Math.sqrt((circlePos4[0] - squarePos3[0]) * (circlePos4[0] - squarePos3[0]) + (circlePos4[1] - squarePos3[1]) * (circlePos4[1] - squarePos3[1]));\n    let square4distanceFromOsc1 = Math.sqrt((circlePos1[0] - squarePos4[0]) * (circlePos1[0] - squarePos4[0]) + (circlePos1[1] - squarePos4[1]) * (circlePos1[1] - squarePos4[1]));\n    let square4distanceFromOsc2 = Math.sqrt((circlePos2[0] - squarePos4[0]) * (circlePos2[0] - squarePos4[0]) + (circlePos2[1] - squarePos4[1]) * (circlePos2[1] - squarePos4[1]));\n    let square4distanceFromOsc3 = Math.sqrt((circlePos3[0] - squarePos4[0]) * (circlePos3[0] - squarePos4[0]) + (circlePos3[1] - squarePos4[1]) * (circlePos3[1] - squarePos4[1]));\n    let square4distanceFromOsc4 = Math.sqrt((circlePos4[0] - squarePos4[0]) * (circlePos4[0] - squarePos4[0]) + (circlePos4[1] - squarePos4[1]) * (circlePos4[1] - squarePos4[1]));\n    let square5distanceFromOsc1 = Math.sqrt((circlePos1[0] - squarePos5[0]) * (circlePos1[0] - squarePos5[0]) + (circlePos1[1] - squarePos5[1]) * (circlePos1[1] - squarePos5[1]));\n    let square5distanceFromOsc2 = Math.sqrt((circlePos2[0] - squarePos5[0]) * (circlePos2[0] - squarePos5[0]) + (circlePos2[1] - squarePos5[1]) * (circlePos2[1] - squarePos5[1]));\n    let square5distanceFromOsc3 = Math.sqrt((circlePos3[0] - squarePos5[0]) * (circlePos3[0] - squarePos5[0]) + (circlePos3[1] - squarePos5[1]) * (circlePos3[1] - squarePos5[1]));\n    let square5distanceFromOsc4 = Math.sqrt((circlePos4[0] - squarePos5[0]) * (circlePos4[0] - squarePos5[0]) + (circlePos4[1] - squarePos5[1]) * (circlePos4[1] - squarePos5[1]));\n    let square6distanceFromOsc1 = Math.sqrt((circlePos1[0] - squarePos6[0]) * (circlePos1[0] - squarePos6[0]) + (circlePos1[1] - squarePos6[1]) * (circlePos1[1] - squarePos6[1]));\n    let square6distanceFromOsc2 = Math.sqrt((circlePos2[0] - squarePos6[0]) * (circlePos2[0] - squarePos6[0]) + (circlePos2[1] - squarePos6[1]) * (circlePos2[1] - squarePos6[1]));\n    let square6distanceFromOsc3 = Math.sqrt((circlePos3[0] - squarePos6[0]) * (circlePos3[0] - squarePos6[0]) + (circlePos3[1] - squarePos6[1]) * (circlePos3[1] - squarePos6[1]));\n    let square6distanceFromOsc4 = Math.sqrt((circlePos4[0] - squarePos6[0]) * (circlePos4[0] - squarePos6[0]) + (circlePos4[1] - squarePos6[1]) * (circlePos4[1] - squarePos6[1]));\n    let square7distanceFromOsc1 = Math.sqrt((circlePos1[0] - squarePos7[0]) * (circlePos1[0] - squarePos7[0]) + (circlePos1[1] - squarePos7[1]) * (circlePos1[1] - squarePos7[1]));\n    let square7distanceFromOsc2 = Math.sqrt((circlePos2[0] - squarePos7[0]) * (circlePos2[0] - squarePos7[0]) + (circlePos2[1] - squarePos7[1]) * (circlePos2[1] - squarePos7[1]));\n    let square7distanceFromOsc3 = Math.sqrt((circlePos3[0] - squarePos7[0]) * (circlePos3[0] - squarePos7[0]) + (circlePos3[1] - squarePos7[1]) * (circlePos3[1] - squarePos7[1]));\n    let square7distanceFromOsc4 = Math.sqrt((circlePos4[0] - squarePos7[0]) * (circlePos4[0] - squarePos7[0]) + (circlePos4[1] - squarePos7[1]) * (circlePos4[1] - squarePos7[1]));\n    let square8distanceFromOsc1 = Math.sqrt((circlePos1[0] - squarePos8[0]) * (circlePos1[0] - squarePos8[0]) + (circlePos1[1] - squarePos8[1]) * (circlePos1[1] - squarePos8[1]));\n    let square8distanceFromOsc2 = Math.sqrt((circlePos2[0] - squarePos8[0]) * (circlePos2[0] - squarePos8[0]) + (circlePos2[1] - squarePos8[1]) * (circlePos2[1] - squarePos8[1]));\n    let square8distanceFromOsc3 = Math.sqrt((circlePos3[0] - squarePos8[0]) * (circlePos3[0] - squarePos8[0]) + (circlePos3[1] - squarePos8[1]) * (circlePos3[1] - squarePos8[1]));\n    let square8distanceFromOsc4 = Math.sqrt((circlePos4[0] - squarePos8[0]) * (circlePos4[0] - squarePos8[0]) + (circlePos4[1] - squarePos8[1]) * (circlePos4[1] - squarePos8[1]));\n    let square9distanceFromOsc1 = Math.sqrt((circlePos1[0] - squarePos9[0]) * (circlePos1[0] - squarePos9[0]) + (circlePos1[1] - squarePos9[1]) * (circlePos1[1] - squarePos9[1]));\n    let square9distanceFromOsc2 = Math.sqrt((circlePos2[0] - squarePos9[0]) * (circlePos2[0] - squarePos9[0]) + (circlePos2[1] - squarePos9[1]) * (circlePos2[1] - squarePos9[1]));\n    let square9distanceFromOsc3 = Math.sqrt((circlePos3[0] - squarePos9[0]) * (circlePos3[0] - squarePos9[0]) + (circlePos3[1] - squarePos9[1]) * (circlePos3[1] - squarePos9[1]));\n    let square9distanceFromOsc4 = Math.sqrt((circlePos4[0] - squarePos9[0]) * (circlePos4[0] - squarePos9[0]) + (circlePos4[1] - squarePos9[1]) * (circlePos4[1] - squarePos9[1]));\n    let square10distanceFromOsc1 = Math.sqrt((circlePos1[0] - squarePos10[0]) * (circlePos1[0] - squarePos10[0]) + (circlePos1[1] - squarePos10[1]) * (circlePos1[1] - squarePos10[1]));\n    let square10distanceFromOsc2 = Math.sqrt((circlePos2[0] - squarePos10[0]) * (circlePos2[0] - squarePos10[0]) + (circlePos2[1] - squarePos10[1]) * (circlePos2[1] - squarePos10[1]));\n    let square10distanceFromOsc3 = Math.sqrt((circlePos3[0] - squarePos10[0]) * (circlePos3[0] - squarePos10[0]) + (circlePos3[1] - squarePos10[1]) * (circlePos3[1] - squarePos10[1]));\n    let square10distanceFromOsc4 = Math.sqrt((circlePos4[0] - squarePos10[0]) * (circlePos4[0] - squarePos10[0]) + (circlePos4[1] - squarePos10[1]) * (circlePos4[1] - squarePos10[1]));\n    let square11distanceFromOsc1 = Math.sqrt((circlePos1[0] - squarePos11[0]) * (circlePos1[0] - squarePos11[0]) + (circlePos1[1] - squarePos11[1]) * (circlePos1[1] - squarePos11[1]));\n    let square11distanceFromOsc2 = Math.sqrt((circlePos2[0] - squarePos11[0]) * (circlePos2[0] - squarePos11[0]) + (circlePos2[1] - squarePos11[1]) * (circlePos2[1] - squarePos11[1]));\n    let square11distanceFromOsc3 = Math.sqrt((circlePos3[0] - squarePos11[0]) * (circlePos3[0] - squarePos11[0]) + (circlePos3[1] - squarePos11[1]) * (circlePos3[1] - squarePos11[1]));\n    let square11distanceFromOsc4 = Math.sqrt((circlePos4[0] - squarePos11[0]) * (circlePos4[0] - squarePos11[0]) + (circlePos4[1] - squarePos11[1]) * (circlePos4[1] - squarePos11[1]));\n    let square12distanceFromOsc1 = Math.sqrt((circlePos1[0] - squarePos12[0]) * (circlePos1[0] - squarePos12[0]) + (circlePos1[1] - squarePos12[1]) * (circlePos1[1] - squarePos12[1]));\n    let square12distanceFromOsc2 = Math.sqrt((circlePos2[0] - squarePos12[0]) * (circlePos2[0] - squarePos12[0]) + (circlePos2[1] - squarePos12[1]) * (circlePos2[1] - squarePos12[1]));\n    let square12distanceFromOsc3 = Math.sqrt((circlePos3[0] - squarePos12[0]) * (circlePos3[0] - squarePos12[0]) + (circlePos3[1] - squarePos12[1]) * (circlePos3[1] - squarePos12[1]));\n    let square12distanceFromOsc4 = Math.sqrt((circlePos4[0] - squarePos12[0]) * (circlePos4[0] - squarePos12[0]) + (circlePos4[1] - squarePos12[1]) * (circlePos4[1] - squarePos12[1]));\n    let square13distanceFromOsc1 = Math.sqrt((circlePos1[0] - squarePos13[0]) * (circlePos1[0] - squarePos13[0]) + (circlePos1[1] - squarePos13[1]) * (circlePos1[1] - squarePos14[1]));\n    let square13distanceFromOsc2 = Math.sqrt((circlePos2[0] - squarePos13[0]) * (circlePos2[0] - squarePos13[0]) + (circlePos2[1] - squarePos13[1]) * (circlePos2[1] - squarePos14[1]));\n    let square13distanceFromOsc3 = Math.sqrt((circlePos3[0] - squarePos13[0]) * (circlePos3[0] - squarePos13[0]) + (circlePos3[1] - squarePos13[1]) * (circlePos3[1] - squarePos14[1]));\n    let square13distanceFromOsc4 = Math.sqrt((circlePos4[0] - squarePos13[0]) * (circlePos4[0] - squarePos13[0]) + (circlePos4[1] - squarePos13[1]) * (circlePos4[1] - squarePos14[1]));\n    let square14distanceFromOsc1 = Math.sqrt((circlePos1[0] - squarePos14[0]) * (circlePos1[0] - squarePos14[0]) + (circlePos1[1] - squarePos14[1]) * (circlePos1[1] - squarePos14[1]));\n    let square14distanceFromOsc2 = Math.sqrt((circlePos2[0] - squarePos14[0]) * (circlePos2[0] - squarePos14[0]) + (circlePos2[1] - squarePos14[1]) * (circlePos2[1] - squarePos14[1]));\n    let square14distanceFromOsc3 = Math.sqrt((circlePos3[0] - squarePos14[0]) * (circlePos3[0] - squarePos14[0]) + (circlePos3[1] - squarePos14[1]) * (circlePos3[1] - squarePos14[1]));\n    let square14distanceFromOsc4 = Math.sqrt((circlePos4[0] - squarePos14[0]) * (circlePos4[0] - squarePos14[0]) + (circlePos4[1] - squarePos14[1]) * (circlePos4[1] - squarePos14[1]));\n    let square15distanceFromOsc1 = Math.sqrt((circlePos1[0] - squarePos15[0]) * (circlePos1[0] - squarePos15[0]) + (circlePos1[1] - squarePos15[1]) * (circlePos1[1] - squarePos15[1]));\n    let square15distanceFromOsc2 = Math.sqrt((circlePos2[0] - squarePos15[0]) * (circlePos2[0] - squarePos15[0]) + (circlePos2[1] - squarePos15[1]) * (circlePos2[1] - squarePos15[1]));\n    let square15distanceFromOsc3 = Math.sqrt((circlePos3[0] - squarePos15[0]) * (circlePos3[0] - squarePos15[0]) + (circlePos3[1] - squarePos15[1]) * (circlePos3[1] - squarePos15[1]));\n    let square15distanceFromOsc4 = Math.sqrt((circlePos4[0] - squarePos15[0]) * (circlePos4[0] - squarePos15[0]) + (circlePos4[1] - squarePos15[1]) * (circlePos4[1] - squarePos15[1]));\n    let square16distanceFromOsc1 = Math.sqrt((circlePos1[0] - squarePos16[0]) * (circlePos1[0] - squarePos16[0]) + (circlePos1[1] - squarePos16[1]) * (circlePos1[1] - squarePos16[1]));\n    let square16distanceFromOsc2 = Math.sqrt((circlePos2[0] - squarePos16[0]) * (circlePos2[0] - squarePos16[0]) + (circlePos2[1] - squarePos16[1]) * (circlePos2[1] - squarePos16[1]));\n    let square16distanceFromOsc3 = Math.sqrt((circlePos3[0] - squarePos16[0]) * (circlePos3[0] - squarePos16[0]) + (circlePos3[1] - squarePos16[1]) * (circlePos3[1] - squarePos16[1]));\n    let square16distanceFromOsc4 = Math.sqrt((circlePos4[0] - squarePos16[0]) * (circlePos4[0] - squarePos16[0]) + (circlePos4[1] - squarePos16[1]) * (circlePos4[1] - squarePos16[1]));\n    console.log(square1distanceFromOsc1);\n    console.log(square2distanceFromOsc1);\n    console.log(square3distanceFromOsc1);\n    console.log(square4distanceFromOsc1);\n    console.log(square5distanceFromOsc1);\n    console.log(square6distanceFromOsc1);\n    console.log(square7distanceFromOsc1);\n    console.log(square8distanceFromOsc1);\n    console.log(square9distanceFromOsc1);\n    console.log(square10distanceFromOsc1);\n    console.log(square11distanceFromOsc1);\n    console.log(square12distanceFromOsc1);\n    console.log(square13distanceFromOsc1);\n    console.log(square14distanceFromOsc1);\n    console.log(square15distanceFromOsc1);\n    console.log(square16distanceFromOsc1);\n    let lfoWaveTypes = ['sine', 'square', 'triangle', 'sawtooth'];\n    let randomType = Math.floor(Math.random() * lfoWaveTypes.length); /////OSC 1 SETTINGS/////////////////////\n\n    let oscFreq = circlePos1[1] * Math.floor(Math.random() * 7 - 1 + 1) + 20;\n    let lfoFreq = Math.floor(square1distanceFromOsc1 * .002 * Math.floor(Math.random() * 12 - 1 + 1) + 1);\n    let lfoType = lfoWaveTypes[randomType];\n    let osc1chorusDepth = (1000 - square2distanceFromOsc1) * .001;\n    let osc1chorusRate = Math.floor(square2distanceFromOsc1 * .008);\n    let osc1filterDepth = (1000 - square3distanceFromOsc1) * .001;\n    let osc1filterRate = Math.floor(square3distanceFromOsc1 * .008);\n    let osc1filter2Rate = square4distanceFromOsc1 * .001;\n    let osc1filter2Depth = Math.floor((1000 - square4distanceFromOsc1) * .008);\n    let osc1tremoloIntensity = (1000 - square5distanceFromOsc1) * .001;\n    let osc1tremoloRate = square5distanceFromOsc1 * .011;\n    let osc1bitcrusherBits = Math.floor((1000 - square6distanceFromOsc1) * .016);\n    let osc1bitcrusherBufferSize = square6distanceFromOsc1 * Math.floor(Math.random() * 16 - 1 + 1) + 256;\n    let osc1moogFilterBufferSize = square7distanceFromOsc1 * Math.floor(Math.random() * 16 - 1 + 1) + 256;\n    let osc1moogFilterCutoff = (1000 - square7distanceFromOsc1) * .001;\n    let osc1moogFilterResonance = Math.floor(square7distanceFromOsc1 * .004);\n    let osc1moogFilter2BufferSize = square8distanceFromOsc1 * Math.floor(Math.random() * 16 - 1 + 1) + 256;\n    let osc1moogFilter2Cutoff = square8distanceFromOsc1 * .001;\n    let osc1moogFilter2Resonance = Math.floor((1000 - square8distanceFromOsc1) * .004);\n    let osc1reverbLevel = (1000 - square9distanceFromOsc1) * .001;\n    let osc1pannerPan = 1 - (1000 - square10distanceFromOsc1) * .002;\n    let osc1phaserDepth = (1000 - square11distanceFromOsc1) * .001;\n    let osc1phaserRate = Math.floor(square11distanceFromOsc1 * .008);\n    let osc1phaserFeedback = square11distanceFromOsc1 * .001;\n    let osc1overdriveDrive = (1000 - square12distanceFromOsc1) * .001;\n    let osc1overdriveGain = Math.floor(46 - (1000 - square12distanceFromOsc1) * .046) * -1; /////OSC 2 SETTINGS/////////////////////\n\n    let osc2Freq = circlePos2[1] * Math.floor(Math.random() * 7.5 - 1 + 1) + 20;\n    let lfo2Freq = Math.floor(square1distanceFromOsc2 * .002 * Math.floor(Math.random() * 12 - 1 + 1) + 1);\n    let lfo2Type = lfoWaveTypes[randomType];\n    let osc2chorusDepth = (1000 - square2distanceFromOsc2) * .001;\n    let osc2chorusRate = Math.floor(square2distanceFromOsc2 * .008);\n    let osc2filterDepth = (1000 - square3distanceFromOsc2) * .001;\n    let osc2filterRate = Math.floor(square3distanceFromOsc2 * .008);\n    let osc2filter2Rate = square4distanceFromOsc2 * .001;\n    let osc2filter2Depth = Math.floor((1000 - square4distanceFromOsc2) * .008);\n    let osc2tremoloIntensity = (1000 - square5distanceFromOsc2) * .001;\n    let osc2tremoloRate = square5distanceFromOsc2 * .011;\n    let osc2bitcrusherBits = Math.floor((1000 - square6distanceFromOsc2) * .016);\n    let osc2bitcrusherBufferSize = square6distanceFromOsc2 * Math.floor(Math.random() * 16 - 1 + 1) + 256;\n    let osc2moogFilterBufferSize = square7distanceFromOsc2 * Math.floor(Math.random() * 16 - 1 + 1) + 256;\n    let osc2moogFilterCutoff = (1000 - square7distanceFromOsc2) * .001;\n    let osc2moogFilterResonance = Math.floor(square7distanceFromOsc2 * .004);\n    let osc2moogFilter2BufferSize = square8distanceFromOsc2 * Math.floor(Math.random() * 16 - 1 + 1) + 256;\n    let osc2moogFilter2Cutoff = square8distanceFromOsc2 * .001;\n    let osc2moogFilter2Resonance = Math.floor((1000 - square8distanceFromOsc2) * .004);\n    let osc2reverbLevel = (1000 - square9distanceFromOsc2) * .001;\n    let osc2pannerPan = 1 - (1000 - square10distanceFromOsc2) * .002;\n    let osc2phaserDepth = (1000 - square11distanceFromOsc2) * .001;\n    let osc2phaserRate = Math.floor(square11distanceFromOsc2 * .008);\n    let osc2phaserFeedback = square11distanceFromOsc2 * .001;\n    let osc2overdriveDrive = (1000 - square12distanceFromOsc2) * .001;\n    let osc2overdriveGain = Math.floor(46 - (1000 - square12distanceFromOsc2) * .046) * -1; /////OSC 3 SETTINGS/////////////////////\n\n    let osc3Freq = circlePos3[1] * Math.floor(Math.random() * 8 - 1 + 1) + 20;\n    let lfo3Freq = Math.floor(square1distanceFromOsc3 * .002 * Math.floor(Math.random() * 12 - 1 + 1) + 1);\n    let lfo3Type = lfoWaveTypes[randomType];\n    let osc3chorusDepth = (1000 - square2distanceFromOsc3) * .001;\n    let osc3chorusRate = Math.floor(square2distanceFromOsc3 * .008);\n    let osc3filterDepth = (1000 - square3distanceFromOsc3) * .001;\n    let osc3filterRate = Math.floor(square3distanceFromOsc3 * .008);\n    let osc3filter2Rate = square4distanceFromOsc3 * .001;\n    let osc3filter2Depth = Math.floor((1000 - square4distanceFromOsc3) * .008);\n    let osc3tremoloIntensity = (1000 - square5distanceFromOsc3) * .001;\n    let osc3tremoloRate = square5distanceFromOsc3 * .011;\n    let osc3bitcrusherBits = Math.floor((1000 - square6distanceFromOsc3) * .016);\n    let osc3bitcrusherBufferSize = square6distanceFromOsc3 * Math.floor(Math.random() * 16 - 1 + 1) + 256;\n    let osc3moogFilterBufferSize = square7distanceFromOsc3 * Math.floor(Math.random() * 16 - 1 + 1) + 256;\n    let osc3moogFilterCutoff = (1000 - square7distanceFromOsc3) * .001;\n    let osc3moogFilterResonance = Math.floor(square7distanceFromOsc3 * .004);\n    let osc3moogFilter2BufferSize = square8distanceFromOsc3 * Math.floor(Math.random() * 16 - 1 + 1) + 256;\n    let osc3moogFilter2Cutoff = square8distanceFromOsc3 * .001;\n    let osc3moogFilter2Resonance = Math.floor((1000 - square8distanceFromOsc3) * .004);\n    let osc3reverbLevel = (1000 - square9distanceFromOsc3) * .001;\n    let osc3pannerPan = 1 - (1000 - square10distanceFromOsc3) * .002;\n    let osc3phaserDepth = (1000 - square11distanceFromOsc3) * .001;\n    let osc3phaserRate = Math.floor(square11distanceFromOsc3 * .008);\n    let osc3phaserFeedback = square11distanceFromOsc3 * .001;\n    let osc3overdriveDrive = (1000 - square12distanceFromOsc3) * .001;\n    let osc3overdriveGain = Math.floor(46 - (1000 - square12distanceFromOsc3) * .046) * -1; /////OSC 4 SETTINGS/////////////////////\n\n    let osc4Freq = circlePos4[1] * Math.floor(Math.random() * 9.5 - 1 + 1) + 20;\n    let lfo4Freq = Math.floor(square1distanceFromOsc4 * .002 * Math.floor(Math.random() * 12 - 1 + 1) + 1);\n    let lfo4Type = lfoWaveTypes[randomType];\n    let osc4chorusDepth = (1000 - square2distanceFromOsc4) * .001;\n    let osc4chorusRate = Math.floor(square2distanceFromOsc4 * .008);\n    let osc4filterDepth = (1000 - square3distanceFromOsc4) * .001;\n    let osc4filterRate = Math.floor(square3distanceFromOsc4 * .008);\n    let osc4filter2Rate = square4distanceFromOsc4 * .001;\n    let osc4filter2Depth = Math.floor((1000 - square4distanceFromOsc4) * .008);\n    let osc4tremoloIntensity = (1000 - square5distanceFromOsc4) * .001;\n    let osc4tremoloRate = square5distanceFromOsc4 * .011;\n    let osc4bitcrusherBits = Math.floor((1000 - square6distanceFromOsc4) * .016);\n    let osc4bitcrusherBufferSize = square6distanceFromOsc4 * Math.floor(Math.random() * 16 - 1 + 1) + 256;\n    let osc4moogFilterBufferSize = square7distanceFromOsc4 * Math.floor(Math.random() * 16 - 1 + 1) + 256;\n    let osc4moogFilterCutoff = (1000 - square7distanceFromOsc4) * .001;\n    let osc4moogFilterResonance = Math.floor(square7distanceFromOsc4 * .004);\n    let osc4moogFilter2BufferSize = square8distanceFromOsc4 * Math.floor(Math.random() * 16 - 1 + 1) + 256;\n    let osc4moogFilter2Cutoff = square8distanceFromOsc4 * .001;\n    let osc4moogFilter2Resonance = Math.floor((1000 - square8distanceFromOsc4) * .004);\n    let osc4reverbLevel = (1000 - square9distanceFromOsc4) * .001;\n    let osc4pannerPan = 1 - (1000 - square10distanceFromOsc4) * .002;\n    let osc4phaserDepth = (1000 - square11distanceFromOsc4) * .001;\n    let osc4phaserRate = Math.floor(square11distanceFromOsc4 * .008);\n    let osc4phaserFeedback = square11distanceFromOsc4 * .001;\n    let osc4overdriveDrive = (1000 - square12distanceFromOsc4) * .001;\n    let osc4overdriveGain = Math.floor(46 - (1000 - square12distanceFromOsc4) * .046) * -1; /////////////////////////////////////////////////////////////////////////////////\n    ///////////////////SETTING STATE NOW////////////////////////////////////////////\n\n    console.log(oscFreq, lfoFreq, osc2Freq, osc3Freq, osc4Freq, circlePos1[0], circlePos4[0]);\n    this.state = {\n      circle1Pos: circlePos1,\n      prevCircle1Pos: circlePos1,\n      oscFreq: oscFreq,\n      oscFreqRange: [15, 5000],\n      lfoFreq: lfoFreq,\n      start1Move: false,\n      osc1Neighbors: [],\n      circle2Pos: circlePos2,\n      prevCircle2Pos: circlePos2,\n      osc2Freq: osc2Freq,\n      osc2FreqRange: [15, 5000],\n      lfo2Freq: lfo2Freq,\n      start2Move: false,\n      osc2Neighbors: [],\n      circle3Pos: circlePos3,\n      prevCircle3Pos: circlePos3,\n      osc3Freq: osc3Freq,\n      osc3FreqRange: [15, 5000],\n      lfo3Freq: lfo3Freq,\n      start3Move: false,\n      osc3Neighbors: [],\n      circle4Pos: circlePos4,\n      prevCircle4Pos: circlePos4,\n      osc4Freq: osc4Freq,\n      osc4FreqRange: [15, 5000],\n      lfo4Freq: lfo4Freq,\n      start4Move: false,\n      osc4Neighbors: [],\n      /////EFFECT NODE 1//////////////////////\n      square1Pos: squarePos1,\n      prevSquare1Pos: squarePos1,\n      start5Move: false,\n      square1distanceFromOsc1: square1distanceFromOsc1,\n      square1distanceFromOsc2: square1distanceFromOsc2,\n      square1distanceFromOsc3: square1distanceFromOsc3,\n      square1distanceFromOsc4: square1distanceFromOsc4,\n      isLFOstarted: false,\n      lfoType: lfoType,\n      lfoFreq: lfoFreq,\n      isLFO2started: false,\n      lfo2Type: lfo2Type,\n      lfo2Freq: lfo2Freq,\n      isLFO3started: false,\n      lfo3Type: lfo3Type,\n      lfo3Freq: lfo3Freq,\n      isLFO4started: false,\n      lfo4Type: lfo4Type,\n      lfo4Freq: lfo4Freq,\n      /////EFFECT NODE 2//////////////////////      \n      square2Pos: squarePos2,\n      prevSquare2Pos: squarePos2,\n      start6Move: false,\n      square2distanceFromOsc1: square2distanceFromOsc1,\n      square2distanceFromOsc2: square2distanceFromOsc2,\n      square2distanceFromOsc3: square2distanceFromOsc3,\n      square2distanceFromOsc4: square2distanceFromOsc4,\n      isOSC1chorusStarted: false,\n      osc1chorusDepth: osc1chorusDepth,\n      osc1chorusRate: osc1chorusRate,\n      isOSC2chorusStarted: false,\n      osc2chorusDepth: osc2chorusDepth,\n      osc2chorusRate: osc2chorusRate,\n      isOSC3chorusStarted: false,\n      osc3chorusDepth: osc3chorusDepth,\n      osc3chorusRate: osc3chorusRate,\n      isOSC4chorusStarted: false,\n      osc4chorusDepth: osc4chorusDepth,\n      osc4chorusRate: osc4chorusRate,\n      /////EFFECT NODE 3////////////////////// \n      square3Pos: squarePos3,\n      prevSquare3Pos: squarePos3,\n      start7Move: false,\n      square3distanceFromOsc1: square3distanceFromOsc1,\n      square3distanceFromOsc2: square3distanceFromOsc2,\n      square3distanceFromOsc3: square3distanceFromOsc3,\n      square3distanceFromOsc4: square3distanceFromOsc4,\n      isOSC1filterStarted: false,\n      osc1filterDepth: osc1filterDepth,\n      osc1filterRate: osc1filterRate,\n      isOSC2filterStarted: false,\n      osc2filterDepth: osc2filterDepth,\n      osc2filterRate: osc2filterRate,\n      isOSC3filterStarted: false,\n      osc3filterDepth: osc3filterDepth,\n      osc3filterRate: osc3filterRate,\n      isOSC4filterStarted: false,\n      osc4filterDepth: osc4filterDepth,\n      osc4filterRate: osc4filterRate,\n      /////EFFECT NODE 4////////////////////// \n      square4Pos: squarePos4,\n      prevSquare4Pos: squarePos4,\n      start8Move: false,\n      square4distanceFromOsc1: square4distanceFromOsc1,\n      square4distanceFromOsc2: square4distanceFromOsc2,\n      square4distanceFromOsc3: square4distanceFromOsc3,\n      square4distanceFromOsc4: square4distanceFromOsc4,\n      isOSC1filter2Started: false,\n      osc1filter2Depth: osc1filter2Depth,\n      osc1filter2Rate: osc1filter2Rate,\n      isOSC2filter2Started: false,\n      osc2filter2Depth: osc2filter2Depth,\n      osc2filter2Rate: osc2filter2Rate,\n      isOSC3filter2Started: false,\n      osc3filter2Depth: osc3filter2Depth,\n      osc3filter2Rate: osc3filter2Rate,\n      isOSC4filter2Started: false,\n      osc4filter2Depth: osc4filter2Depth,\n      osc4filter2Rate: osc4filter2Rate,\n      /////EFFECT NODE 5////////////////////// \n      square5Pos: squarePos5,\n      prevSquare5Pos: squarePos5,\n      start9Move: false,\n      square5distanceFromOsc1: square5distanceFromOsc1,\n      square5distanceFromOsc2: square5distanceFromOsc2,\n      square5distanceFromOsc3: square5distanceFromOsc3,\n      square5distanceFromOsc4: square5distanceFromOsc4,\n      isOSC1tremoloStarted: false,\n      osc1tremoloIntensity: osc1tremoloIntensity,\n      osc1tremoloRate: osc1tremoloRate,\n      isOSC2tremoloStarted: false,\n      osc2tremoloIntensity: osc2tremoloIntensity,\n      osc2tremoloRate: osc2tremoloRate,\n      isOSC3tremoloStarted: false,\n      osc3tremoloIntensity: osc3tremoloIntensity,\n      osc3tremoloRate: osc3tremoloRate,\n      isOSC4tremoloStarted: false,\n      osc4tremoloIntensity: osc4tremoloIntensity,\n      osc4tremoloRate: osc4tremoloRate,\n      /////EFFECT NODE 6////////////////////// \n      square6Pos: squarePos6,\n      prevSquare6Pos: squarePos6,\n      start10Move: false,\n      square6distanceFromOsc1: square6distanceFromOsc1,\n      square6distanceFromOsc2: square6distanceFromOsc2,\n      square6distanceFromOsc3: square6distanceFromOsc3,\n      square6distanceFromOsc4: square6distanceFromOsc4,\n      isOSC1bitcrusherStarted: false,\n      osc1bitcrusherBits: osc1bitcrusherBits,\n      osc1bitcrusherBufferSize: osc1bitcrusherBufferSize,\n      isOSC2bitcrusherStarted: false,\n      osc2bitcrusherBits: osc2bitcrusherBits,\n      osc2bitcrusherBufferSize: osc2bitcrusherBufferSize,\n      isOSC3bitcrusherStarted: false,\n      osc3bitcrusherBits: osc3bitcrusherBits,\n      osc3bitcrusherBufferSize: osc3bitcrusherBufferSize,\n      isOSC4bitcrusherStarted: false,\n      osc4bitcrusherBits: osc4bitcrusherBits,\n      osc4bitcrusherBufferSize: osc4bitcrusherBufferSize,\n      /////EFFECT NODE 7////////////////////// \n      square7Pos: squarePos7,\n      prevSquare7Pos: squarePos7,\n      start11Move: false,\n      square7distanceFromOsc1: square7distanceFromOsc1,\n      square7distanceFromOsc2: square7distanceFromOsc2,\n      square7distanceFromOsc3: square7distanceFromOsc3,\n      square7distanceFromOsc4: square7distanceFromOsc4,\n      isOSC1moogFilterStarted: false,\n      osc1moogFilterBufferSize: osc1moogFilterBufferSize,\n      osc1moogFilterCutoff: osc1moogFilterCutoff,\n      osc1moogFilterResonance: osc1moogFilterResonance,\n      isOSC2moogFilterStarted: false,\n      osc2moogFilterBufferSize: osc2moogFilterBufferSize,\n      osc2moogFilterCutoff: osc2moogFilterCutoff,\n      osc2moogFilterResonance: osc2moogFilterResonance,\n      isOSC3moogFilterStarted: false,\n      osc3moogFilterBufferSize: osc3moogFilterBufferSize,\n      osc3moogFilterCutoff: osc3moogFilterCutoff,\n      osc3moogFilterResonance: osc3moogFilterResonance,\n      isOSC4moogFilterStarted: false,\n      osc4moogFilterBufferSize: osc4moogFilterBufferSize,\n      osc4moogFilterCutoff: osc4moogFilterCutoff,\n      osc4moogFilterResonance: osc4moogFilterResonance,\n      /////EFFECT NODE 8////////////////////// \n      square8Pos: squarePos8,\n      prevSquare8Pos: squarePos8,\n      start12Move: false,\n      square8distanceFromOsc1: square8distanceFromOsc1,\n      square8distanceFromOsc2: square8distanceFromOsc2,\n      square8distanceFromOsc3: square8distanceFromOsc3,\n      square8distanceFromOsc4: square8distanceFromOsc4,\n      isOSC1moogFilter2Started: false,\n      osc1moogFilter2BufferSize: osc1moogFilter2BufferSize,\n      osc1moogFilter2Cutoff: osc1moogFilter2Cutoff,\n      osc1moogFilter2Resonance: osc1moogFilter2Resonance,\n      isOSC2moogFilter2Started: false,\n      osc2moogFilter2BufferSize: osc2moogFilter2BufferSize,\n      osc2moogFilter2Cutoff: osc2moogFilter2Cutoff,\n      osc2moogFilter2Resonance: osc2moogFilter2Resonance,\n      isOSC3moogFilter2Started: false,\n      osc3moogFilter2BufferSize: osc3moogFilter2BufferSize,\n      osc3moogFilter2Cutoff: osc3moogFilter2Cutoff,\n      osc3moogFilter2Resonance: osc3moogFilter2Resonance,\n      isOSC4moogFilter2Started: false,\n      osc4moogFilter2BufferSize: osc4moogFilter2BufferSize,\n      osc4moogFilter2Cutoff: osc4moogFilter2Cutoff,\n      osc4moogFilter2Resonance: osc4moogFilter2Resonance,\n      /////EFFECT NODE 9////////////////////// \n      square9Pos: squarePos9,\n      prevSquare9Pos: squarePos9,\n      start13Move: false,\n      square9distanceFromOsc1: square9distanceFromOsc1,\n      square9distanceFromOsc2: square9distanceFromOsc2,\n      square9distanceFromOsc3: square9distanceFromOsc3,\n      square9distanceFromOsc4: square9distanceFromOsc4,\n      isOSC1reverbStarted: false,\n      osc1reverbLevel: osc1reverbLevel,\n      isOSC2reverbStarted: false,\n      osc2reverbLevel: osc2reverbLevel,\n      isOSC3reverbStarted: false,\n      osc3reverbLevel: osc3reverbLevel,\n      isOSC4reverbStarted: false,\n      osc4reverbLevel: osc4reverbLevel,\n      /////EFFECT NODE 10////////////////////// \n      square10Pos: squarePos10,\n      prevSquare10Pos: squarePos10,\n      start14Move: false,\n      square10distanceFromOsc1: square10distanceFromOsc1,\n      square10distanceFromOsc2: square10distanceFromOsc2,\n      square10distanceFromOsc3: square10distanceFromOsc3,\n      square10distanceFromOsc4: square10distanceFromOsc4,\n      isOSC1pannerStarted: false,\n      osc1pannerPan: osc1pannerPan,\n      isOSC2pannerStarted: false,\n      osc2pannerPan: osc2pannerPan,\n      isOSC3pannerStarted: false,\n      osc3pannerPan: osc3pannerPan,\n      isOSC4pannerStarted: false,\n      osc4pannerPan: osc4pannerPan,\n      /////EFFECT NODE 11////////////////////// \n      square11Pos: squarePos11,\n      prevSquare11Pos: squarePos11,\n      start15Move: false,\n      square11distanceFromOsc1: square11distanceFromOsc1,\n      square11distanceFromOsc2: square11distanceFromOsc2,\n      square11distanceFromOsc3: square11distanceFromOsc3,\n      square11distanceFromOsc4: square11distanceFromOsc4,\n      isOSC1phaserStarted: false,\n      osc1phaserRate: osc1phaserRate,\n      osc1phaserDepth: osc1phaserDepth,\n      osc1phaserFeedback: osc1phaserFeedback,\n      isOSC2phaserStarted: false,\n      osc2phaserRate: osc2phaserRate,\n      osc2phaserDepth: osc2phaserDepth,\n      osc2phaserFeedback: osc2phaserFeedback,\n      isOSC3phaserStarted: false,\n      osc3phaserRate: osc3phaserRate,\n      osc3phaserDepth: osc3phaserDepth,\n      osc3phaserFeedback: osc3phaserFeedback,\n      isOSC4phaserStarted: false,\n      osc4phaserRate: osc4phaserRate,\n      osc4phaserDepth: osc4phaserDepth,\n      osc4phaserFeedback: osc4phaserFeedback,\n      /////EFFECT NODE 12////////////////////// \n      square12Pos: squarePos12,\n      prevSquare12Pos: squarePos12,\n      start16Move: false,\n      square12distanceFromOsc1: square12distanceFromOsc1,\n      square12distanceFromOsc2: square12distanceFromOsc2,\n      square12distanceFromOsc3: square12distanceFromOsc3,\n      square12distanceFromOsc4: square12distanceFromOsc4,\n      isOSC1overdriveStarted: false,\n      osc1overdriveDrive: osc1overdriveDrive,\n      osc1overdriveGain: osc1overdriveGain,\n      isOSC2overdriveStarted: false,\n      osc2overdriveDrive: osc2overdriveDrive,\n      osc2overdriveGain: osc2overdriveGain,\n      isOSC3overdriveStarted: false,\n      osc3overdriveDrive: osc3overdriveDrive,\n      osc3overdriveGain: osc3overdriveGain,\n      isOSC4overdriveStarted: false,\n      osc4overdriveDrive: osc4overdriveDrive,\n      osc4overdriveGain: osc4overdriveGain,\n      /////EFFECT NODE 13////////////////////// \n      square13Pos: squarePos13,\n      prevSquare13Pos: squarePos13,\n      start17Move: false,\n      square13distanceFromOsc1: square13distanceFromOsc1,\n      square13distanceFromOsc2: square13distanceFromOsc2,\n      square13distanceFromOsc3: square13distanceFromOsc3,\n      square13distanceFromOsc4: square13distanceFromOsc4,\n      /////EFFECT NODE 14////////////////////// \n      square14Pos: squarePos14,\n      prevSquare14Pos: squarePos14,\n      start18Move: false,\n      square14distanceFromOsc1: square14distanceFromOsc1,\n      square14distanceFromOsc2: square14distanceFromOsc2,\n      square14distanceFromOsc3: square14distanceFromOsc3,\n      square14distanceFromOsc4: square14distanceFromOsc4,\n      /////EFFECT NODE 15////////////////////// \n      square15Pos: squarePos15,\n      prevSquare15Pos: squarePos15,\n      start19Move: false,\n      square15distanceFromOsc1: square15distanceFromOsc1,\n      square15distanceFromOsc2: square15distanceFromOsc2,\n      square15distanceFromOsc3: square15distanceFromOsc3,\n      square15distanceFromOsc4: square15distanceFromOsc4,\n      /////EFFECT NODE 16////////////////////// \n      square16Pos: squarePos16,\n      prevSquare16Pos: squarePos16,\n      start20Move: false,\n      square16distanceFromOsc1: square16distanceFromOsc1,\n      square16distanceFromOsc2: square16distanceFromOsc2,\n      square16distanceFromOsc3: square16distanceFromOsc3,\n      square16distanceFromOsc4: square16distanceFromOsc4\n    }; // this.updateFrequencyOSC();\n    // // this.updateFrequencyOSC2();\n    // this.updateFrequencyOSC3();\n    // this.updateFrequencyOSC4();\n    // this.turnOnLFO();\n    // this.turnOnLFO2();\n\n    this.handleMouseEvent = this.handleMouseEvent.bind(this);\n    this.handleMouseDown = this.handleMouseDown.bind(this);\n    this.handleMouseUp = this.handleMouseUp.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleMouseDown, false);\n    document.addEventListener('mouseup', this.handleMouseUp, false);\n    document.addEventListener('mousemove', this.handleMouseEvent, false);\n    var rect = this.refs.canvas.getBoundingClientRect();\n    this.canvasPos = [rect.left, rect.top];\n    this.ctx = this.refs.canvas.getContext('2d');\n    this.ctx.fillStyle = this.props.color;\n    this.ctx.beginPath();\n    this.ctx.fillRect(0, 0, this.props.width, this.props.height);\n    this.drawLabel();\n    this.updateCanvas();\n  }\n\n  drawLabel() {\n    this.ctx.font = '10px consolas';\n    this.ctx.textAlign = 'center';\n    this.ctx.fillStyle = '#CC0720';\n    this.ctx.fillText('OSCILLATOR FREQUENCY', Math.round(this.props.width / 2), 10 + 5);\n    this.ctx.beginPath();\n    this.ctx.rotate(1.5708);\n    this.ctx.fillText('LFO FREQUENCY', Math.round(this.props.width / 2), -this.props.width + 10 + 5);\n    this.ctx.rotate(-1.5708);\n  }\n\n  updateCanvas() {\n    this.ctx.beginPath();\n    this.ctx.arc(this.state.prevCircle1Pos[0], this.state.prevCircle1Pos[1], 7, false, Math.PI * 2, false);\n    this.ctx.arc(this.state.prevCircle2Pos[0], this.state.prevCircle2Pos[1], 7, false, Math.PI * 2, false);\n    this.ctx.arc(this.state.prevCircle3Pos[0], this.state.prevCircle3Pos[1], 7, false, Math.PI * 2, false);\n    this.ctx.arc(this.state.prevCircle4Pos[0], this.state.prevCircle4Pos[1], 7, false, Math.PI * 2, false);\n    this.ctx.closePath();\n    this.ctx.fillStyle = this.props.color;\n    this.drawLabel();\n    let points = [this.state.circle1Pos, this.state.circle2Pos, this.state.circle3Pos, this.state.circle4Pos, this.state.square1Pos, this.state.square2Pos, this.state.square3Pos, this.state.square4Pos, this.state.square5Pos, this.state.square6Pos, this.state.square7Pos, this.state.square8Pos, this.state.square9Pos, this.state.square10Pos, this.state.square11Pos, this.state.square12Pos, this.state.square13Pos, this.state.square14Pos, this.state.square15Pos, this.state.square16Pos]; // console.log(points)\n\n    const delaunay = d3.Delaunay.from(points);\n    const voronoi = delaunay.voronoi([0.5, 0.5, this.props.width - 0.5, this.props.height]);\n    this.ctx.fillStyle = this.props.color;\n    this.ctx.fillRect(0, 0, this.props.width, this.props.height);\n    this.ctx.beginPath();\n    delaunay.render(this.ctx);\n    this.ctx.strokeStyle = \"#C0392B\";\n    this.ctx.stroke();\n    this.ctx.closePath(); // console.log(voronoi.neighbors(), delaunay.neighbors())\n\n    this.ctx.beginPath();\n    voronoi.render(this.ctx);\n    voronoi.renderBounds(this.ctx);\n    this.ctx.strokeStyle = \"#C0C0C0\";\n    this.ctx.stroke();\n    this.ctx.closePath();\n    this.ctx.beginPath();\n    delaunay.renderPoints(this.ctx);\n    this.ctx.fill(); //turn effects on of neighboring oscillators with this\n\n    const osc1Neighbors = [...delaunay.neighbors(0)];\n    this.state.osc1Neighbors = osc1Neighbors;\n    const osc2Neighbors = [...delaunay.neighbors(1)];\n    this.state.osc2Neighbors = osc2Neighbors;\n    const osc3Neighbors = [...delaunay.neighbors(2)];\n    this.state.osc3Neighbors = osc3Neighbors;\n    const osc4Neighbors = [...delaunay.neighbors(3)];\n    this.state.osc4Neighbors = osc4Neighbors; // console.log(osc2Neighbors)\n\n    if (this.state.osc1Neighbors.includes(5)) {\n      this.setState({\n        isLFOstarted: true\n      });\n      this.turnOnLFO();\n    } else if (this.state.osc1Neighbors.includes(6)) {\n      this.setState({\n        isOSC1chorusStarted: true\n      });\n      this.updateOSC1chorusBypass();\n    } else if (this.state.osc1Neighbors.includes(7)) {\n      this.setState({\n        isOSC1filterStarted: true\n      });\n      this.updateOSC1filterBypass();\n    } else if (this.state.osc1Neighbors.includes(8)) {\n      this.setState({\n        isOSC1filter2Started: true\n      });\n      this.updateOSC1filter2Bypass();\n    } else if (this.state.osc1Neighbors.includes(9)) {\n      this.setState({\n        isOSC1tremoloStarted: true\n      });\n      this.updateOSC1tremoloBypass();\n    } else if (this.state.osc1Neighbors.includes(10)) {\n      this.setState({\n        isOSC1bitcrusherStarted: true\n      });\n      this.updateOSC1bitcrusherBypass();\n    } else if (this.state.osc1Neighbors.includes(11)) {\n      this.setState({\n        isOSC1moogFilterStarted: true\n      });\n      this.updateOSC1moogFilterBypass();\n    } else if (this.state.osc1Neighbors.includes(12)) {\n      this.setState({\n        isOSC1moogFilter2Started: true\n      });\n      this.updateOSC1moogFilter2Bypass();\n    } else if (this.state.osc1Neighbors.includes(13)) {\n      this.setState({\n        isOSC1reverbStarted: true\n      });\n      this.updateOSC1reverbBypass();\n    } else if (this.state.osc1Neighbors.includes(14)) {\n      this.setState({\n        isOSC1pannerStarted: true\n      });\n      this.updateOSC1pannerBypass();\n    } else if (this.state.osc1Neighbors.includes(15)) {\n      this.setState({\n        isOSC1phaserStarted: true\n      });\n      this.updateOSC1phaserBypass();\n    } else if (this.state.osc1Neighbors.includes(16)) {\n      this.setState({\n        isOSC1overdriveStarted: true\n      });\n      this.updateOSC1overdriveBypass();\n    } else {\n      this.setState({\n        isLFOstarted: false,\n        isOSC1chorusStarted: false,\n        isOSC1filterStarted: false,\n        isOSC1filter2Started: false,\n        isOSC1tremoloStarted: false,\n        isOSC1bitcrusherStarted: false,\n        isOSC1moogFilterStarted: false,\n        isOSC1moogFilter2Started: false,\n        isOSC1reverbStarted: false,\n        isOSC1pannerStarted: false,\n        isOSC1phaserStarted: false,\n        isOSC1overdriveStarted: false\n      });\n    }\n\n    if (this.state.osc2Neighbors.includes(5)) {\n      this.setState({\n        isLFO2started: true\n      });\n      this.turnOnLFO2();\n    } else if (this.state.osc2Neighbors.includes(6)) {\n      this.setState({\n        isOSC2chorusStarted: true\n      });\n      this.updateOSC2chorusBypass();\n    } else if (this.state.osc2Neighbors.includes(7)) {\n      this.setState({\n        isOSC2filterStarted: true\n      });\n      this.updateOSC2filterBypass();\n    } else if (this.state.osc2Neighbors.includes(8)) {\n      this.setState({\n        isOSC2filter2Started: true\n      });\n      this.updateOSC2filter2Bypass();\n    } else if (this.state.osc2Neighbors.includes(9)) {\n      this.setState({\n        isOSC2tremoloStarted: true\n      });\n      this.updateOSC2tremoloBypass();\n    } else if (this.state.osc2Neighbors.includes(10)) {\n      this.setState({\n        isOSC2bitcrusherStarted: true\n      });\n      this.updateOSC2bitcrusherBypass();\n    } else if (this.state.osc2Neighbors.includes(11)) {\n      this.setState({\n        isOSC2moogFilterStarted: true\n      });\n      this.updateOSC2moogFilterBypass();\n    } else if (this.state.osc2Neighbors.includes(12)) {\n      this.setState({\n        isOSC2moogFilter2Started: true\n      });\n      this.updateOSC2moogFilter2Bypass();\n    } else if (this.state.osc2Neighbors.includes(13)) {\n      this.setState({\n        isOSC2reverbStarted: true\n      });\n      this.updateOSC2reverbBypass();\n    } else if (this.state.osc2Neighbors.includes(14)) {\n      this.setState({\n        isOSC2pannerStarted: true\n      });\n      this.updateOSC2pannerBypass();\n    } else if (this.state.osc2Neighbors.includes(15)) {\n      this.setState({\n        isOSC2phaserStarted: true\n      });\n      this.updateOSC2phaserBypass();\n    } else if (this.state.osc2Neighbors.includes(16)) {\n      this.setState({\n        isOSC2overdriveStarted: true\n      });\n      this.updateOSC2overdriveBypass();\n    } else {\n      this.setState({\n        isLFO2started: false,\n        isOSC2chorusStarted: false,\n        isOSC2filterStarted: false,\n        isOSC2filter2Started: false,\n        isOSC2tremoloStarted: false,\n        isOSC2bitcrusherStarted: false,\n        isOSC2moogFilterStarted: false,\n        isOSC2moogFilter2Started: false,\n        isOSC2reverbStarted: false,\n        isOSC2pannerStarted: false,\n        isOSC2phaserStarted: false,\n        isOSC2overdriveStarted: false\n      });\n    }\n\n    if (this.state.osc3Neighbors.includes(5)) {\n      this.setState({\n        isLFO3started: true\n      });\n      this.turnOnLFO3();\n    } else if (this.state.osc3Neighbors.includes(6)) {\n      this.setState({\n        isOSC3chorusStarted: true\n      });\n      this.updateOSC2chorusBypass();\n    } else if (this.state.osc3Neighbors.includes(7)) {\n      this.setState({\n        isOSC3filterStarted: true\n      });\n      this.updateOSC2filterBypass();\n    } else if (this.state.osc3Neighbors.includes(8)) {\n      this.setState({\n        isOSC3filter2Started: true\n      });\n      this.updateOSC2filter2Bypass();\n    } else if (this.state.osc3Neighbors.includes(9)) {\n      this.setState({\n        isOSC3tremoloStarted: true\n      });\n    } else if (this.state.osc3Neighbors.includes(10)) {\n      this.setState({\n        isOSC3bitcrusherStarted: true\n      });\n    } else if (this.state.osc3Neighbors.includes(11)) {\n      this.setState({\n        isOSC3moogFilterStarted: true\n      });\n    } else if (this.state.osc3Neighbors.includes(12)) {\n      this.setState({\n        isOSC3moogFilter2Started: true\n      });\n    } else if (this.state.osc3Neighbors.includes(13)) {\n      this.setState({\n        isOSC3reverbStarted: true\n      });\n    } else if (this.state.osc3Neighbors.includes(14)) {\n      this.setState({\n        isOSC3pannerStarted: true\n      });\n    } else if (this.state.osc3Neighbors.includes(15)) {\n      this.setState({\n        isOSC3phaserStarted: true\n      });\n    } else if (this.state.osc3Neighbors.includes(16)) {\n      this.setState({\n        isOSC3overdriveStarted: true\n      });\n    } else {\n      this.setState({\n        isLFO3started: false,\n        isOSC3chorusStarted: false,\n        isOSC3filterStarted: false,\n        isOSC3filter2Started: false,\n        isOSC3tremoloStarted: false,\n        isOSC3bitcrusherStarted: false,\n        isOSC3moogFilterStarted: false,\n        isOSC3moogFilter2Started: false,\n        isOSC3reverbStarted: false,\n        isOSC3pannerStarted: false,\n        isOSC3phaserStarted: false,\n        isOSC3overdriveStarted: false\n      });\n    }\n\n    if (this.state.osc4Neighbors.includes(5)) {\n      this.setState({\n        isLFO4started: true\n      });\n    } else if (this.state.osc4Neighbors.includes(6)) {\n      this.setState({\n        isOSC4chorusStarted: true\n      });\n    } else if (this.state.osc4Neighbors.includes(7)) {\n      this.setState({\n        isOSC4filterStarted: true\n      });\n    } else if (this.state.osc4Neighbors.includes(8)) {\n      this.setState({\n        isOSC4filter2Started: true\n      });\n    } else if (this.state.osc4Neighbors.includes(9)) {\n      this.setState({\n        isOSC4tremoloStarted: true\n      });\n    } else if (this.state.osc4Neighbors.includes(10)) {\n      this.setState({\n        isOSC4bitcrusherStarted: true\n      });\n    } else if (this.state.osc4Neighbors.includes(11)) {\n      this.setState({\n        isOSC4moogFilterStarted: true\n      });\n    } else if (this.state.osc4Neighbors.includes(12)) {\n      this.setState({\n        isOSC4moogFilter2Started: true\n      });\n    } else if (this.state.osc4Neighbors.includes(13)) {\n      this.setState({\n        isOSC4reverbStarted: true\n      });\n    } else if (this.state.osc4Neighbors.includes(14)) {\n      this.setState({\n        isOSC4pannerStarted: true\n      });\n    } else if (this.state.osc4Neighbors.includes(15)) {\n      this.setState({\n        isOSC4phaserStarted: true\n      });\n    } else if (this.state.osc4Neighbors.includes(16)) {\n      this.setState({\n        isOSC4overdriveStarted: true\n      });\n    } else {\n      this.setState({\n        isLFO4started: false,\n        isOSC4chorusStarted: false,\n        isOSC4filterStarted: false,\n        isOSC4filter2Started: false,\n        isOSC4tremoloStarted: false,\n        isOSC4bitcrusherStarted: false,\n        isOSC4moogFilterStarted: false,\n        isOSC4moogFilter2Started: false,\n        isOSC4reverbStarted: false,\n        isOSC4pannerStarted: false,\n        isOSC4phaserStarted: false,\n        isOSC4overdriveStarted: false\n      });\n    } // console.log(this.state)\n    // console.log(osc2Neighbors)\n    // distance function: \n    // if osc1Neighbors.includes(5) {}\n\n\n    this.ctx.beginPath();\n    this.ctx.arc(this.state.circle1Pos[0], this.state.circle1Pos[1], 7.5, false, Math.PI * 2, false);\n    this.ctx.closePath();\n    this.ctx.fillStyle = \"#808080\"; // this.ctx.stroke();\n\n    this.ctx.fill();\n    this.ctx.beginPath();\n    this.ctx.arc(this.state.circle2Pos[0], this.state.circle2Pos[1], 7.5, false, Math.PI * 2, false);\n    this.ctx.closePath();\n    this.ctx.fillStyle = \"#808080\"; // this.ctx.stroke();\n\n    this.ctx.fill();\n    this.ctx.beginPath();\n    this.ctx.arc(this.state.circle3Pos[0], this.state.circle3Pos[1], 7.5, false, Math.PI * 2, false);\n    this.ctx.closePath();\n    this.ctx.fillStyle = \"#808080\"; // this.ctx.stroke();\n\n    this.ctx.fill();\n    this.ctx.beginPath();\n    this.ctx.arc(this.state.circle4Pos[0], this.state.circle4Pos[1], 7.5, false, Math.PI * 2, false);\n    this.ctx.closePath();\n    this.ctx.fillStyle = \"#808080\"; // this.ctx.stroke();\n\n    this.ctx.fill(); //square 1\n\n    this.ctx.beginPath();\n    this.ctx.arc(this.state.square1Pos[0], this.state.square1Pos[1], 4, false, Math.PI * 2, false);\n    this.ctx.closePath();\n    this.ctx.fillStyle = \"#808080\"; // this.ctx.stroke();\n\n    this.ctx.fill();\n    this.ctx.arc(this.state.square2Pos[0], this.state.square2Pos[1], 4, false, Math.PI * 2, false);\n    this.ctx.closePath();\n    this.ctx.fillStyle = \"#808080\"; // this.ctx.stroke();\n\n    this.ctx.fill();\n    this.ctx.arc(this.state.square3Pos[0], this.state.square3Pos[1], 4, false, Math.PI * 2, false);\n    this.ctx.closePath();\n    this.ctx.fillStyle = \"#808080\"; // this.ctx.stroke();\n\n    this.ctx.fill();\n    this.ctx.arc(this.state.square4Pos[0], this.state.square4Pos[1], 4, false, Math.PI * 2, false);\n    this.ctx.closePath();\n    this.ctx.fillStyle = \"#808080\"; // this.ctx.stroke();\n\n    this.ctx.fill();\n    this.ctx.arc(this.state.square5Pos[0], this.state.square5Pos[1], 4, false, Math.PI * 2, false);\n    this.ctx.closePath();\n    this.ctx.fillStyle = \"#808080\"; // this.ctx.stroke();\n\n    this.ctx.fill();\n    this.ctx.arc(this.state.square6Pos[0], this.state.square6Pos[1], 4, false, Math.PI * 2, false);\n    this.ctx.closePath();\n    this.ctx.fillStyle = \"#808080\"; // this.ctx.stroke();\n\n    this.ctx.fill();\n    this.ctx.arc(this.state.square7Pos[0], this.state.square7Pos[1], 4, false, Math.PI * 2, false);\n    this.ctx.closePath();\n    this.ctx.fillStyle = \"#808080\"; // this.ctx.stroke();\n\n    this.ctx.fill();\n    this.ctx.arc(this.state.square8Pos[0], this.state.square8Pos[1], 4, false, Math.PI * 2, false);\n    this.ctx.closePath();\n    this.ctx.fillStyle = \"#808080\"; // this.ctx.stroke();\n\n    this.ctx.fill();\n    this.ctx.arc(this.state.square9Pos[0], this.state.square9Pos[1], 4, false, Math.PI * 2, false);\n    this.ctx.closePath();\n    this.ctx.fillStyle = \"#808080\"; // this.ctx.stroke();\n\n    this.ctx.fill();\n    this.ctx.arc(this.state.square10Pos[0], this.state.square10Pos[1], 4, false, Math.PI * 2, false);\n    this.ctx.closePath();\n    this.ctx.fillStyle = \"#808080\"; // this.ctx.stroke();\n\n    this.ctx.fill();\n    this.ctx.arc(this.state.square11Pos[0], this.state.square11Pos[1], 4, false, Math.PI * 2, false);\n    this.ctx.closePath();\n    this.ctx.fillStyle = \"#808080\"; // this.ctx.stroke();\n\n    this.ctx.fill();\n    this.ctx.arc(this.state.square12Pos[0], this.state.square12Pos[1], 4, false, Math.PI * 2, false);\n    this.ctx.closePath();\n    this.ctx.fillStyle = \"#808080\"; // this.ctx.stroke();\n\n    this.ctx.fill();\n    this.ctx.arc(this.state.square13Pos[0], this.state.square13Pos[1], 4, false, Math.PI * 2, false);\n    this.ctx.closePath();\n    this.ctx.fillStyle = \"#808080\"; // this.ctx.stroke();\n\n    this.ctx.fill();\n    this.ctx.arc(this.state.square14Pos[0], this.state.square14Pos[1], 4, false, Math.PI * 2, false);\n    this.ctx.closePath();\n    this.ctx.fillStyle = \"#808080\"; // this.ctx.stroke();\n\n    this.ctx.fill();\n    this.ctx.arc(this.state.square15Pos[0], this.state.square15Pos[1], 4, false, Math.PI * 2, false);\n    this.ctx.closePath();\n    this.ctx.fillStyle = \"#808080\"; // this.ctx.stroke();\n\n    this.ctx.fill();\n    this.ctx.arc(this.state.square16Pos[0], this.state.square16Pos[1], 4, false, Math.PI * 2, false);\n    this.ctx.closePath();\n    this.ctx.fillStyle = \"#808080\"; // this.ctx.stroke();\n\n    this.ctx.fill();\n  }\n\n  handleMouseUp() {\n    this.setState({\n      start1Move: false,\n      start2Move: false,\n      start3Move: false,\n      start4Move: false,\n      start5Move: false,\n      start6Move: false,\n      start7Move: false,\n      start8Move: false,\n      start9Move: false,\n      start10Move: false,\n      start11Move: false,\n      start12Move: false,\n      start13Move: false,\n      start14Move: false,\n      start15Move: false,\n      start16Move: false,\n      start17Move: false,\n      start18Move: false,\n      start19Move: false,\n      start20Move: false\n    });\n  }\n\n  handleMouseDown(event) {\n    // when this event starts check that pos X = node at pos X and you're finding the exact node you clicked\n    //  filter to return the state \n    //find which node was clicked and update x and y coords\n    // var posX = event.clientX - this.canvasPos[0];\n    // var posY = event.clientY - this.canvasPos[1];\n    // console.log(event.layerX, event.layerY, '-- event layers X & Y')\n    // console.log(this.state.circle1Pos[0], this.state.circle1Pos[1], '--circle1pos')\n    // console.log(this.state.circle2Pos[0], this.state.circle2Pos[1], '--circle2pos')\n    // console.log(this.state.circle3Pos[0], this.state.circle3Pos[1], '--circle3pos')\n    // console.log(this.state.circle4Pos[0], this.state.circle4Pos[1], '--circle4pos')\n    let topRange1x = this.state.circle1Pos[0] + 5;\n    let bottomRange1x = this.state.circle1Pos[0] - 5;\n    let topRange1y = this.state.circle1Pos[1] + 5;\n    let bottomRange1y = this.state.circle1Pos[1] - 5;\n    let topRange2x = this.state.circle2Pos[0] + 5;\n    let bottomRange2x = this.state.circle2Pos[0] - 5;\n    let topRange2y = this.state.circle2Pos[1] + 5;\n    let bottomRange2y = this.state.circle2Pos[1] - 5;\n    let topRange3x = this.state.circle3Pos[0] + 5;\n    let bottomRange3x = this.state.circle3Pos[0] - 5;\n    let topRange3y = this.state.circle3Pos[1] + 5;\n    let bottomRange3y = this.state.circle3Pos[1] - 5;\n    let topRange4x = this.state.circle4Pos[0] + 5;\n    let bottomRange4x = this.state.circle4Pos[0] - 5;\n    let topRange4y = this.state.circle4Pos[1] + 5;\n    let bottomRange4y = this.state.circle4Pos[1] - 5;\n    let topRange5x = this.state.square1Pos[0] + 5;\n    let bottomRange5x = this.state.square1Pos[0] - 5;\n    let topRange5y = this.state.square1Pos[1] + 5;\n    let bottomRange5y = this.state.square1Pos[1] - 5;\n    let topRange6x = this.state.square2Pos[0] + 5;\n    let bottomRange6x = this.state.square2Pos[0] - 5;\n    let topRange6y = this.state.square2Pos[1] + 5;\n    let bottomRange6y = this.state.square2Pos[1] - 5;\n    let topRange7x = this.state.square3Pos[0] + 5;\n    let bottomRange7x = this.state.square3Pos[0] - 5;\n    let topRange7y = this.state.square3Pos[1] + 5;\n    let bottomRange7y = this.state.square3Pos[1] - 5;\n    let topRange8x = this.state.square4Pos[0] + 5;\n    let bottomRange8x = this.state.square4Pos[0] - 5;\n    let topRange8y = this.state.square4Pos[1] + 5;\n    let bottomRange8y = this.state.square4Pos[1] - 5;\n    let topRange9x = this.state.square5Pos[0] + 5;\n    let bottomRange9x = this.state.square5Pos[0] - 5;\n    let topRange9y = this.state.square5Pos[1] + 5;\n    let bottomRange9y = this.state.square5Pos[1] - 5;\n    let topRange10x = this.state.square6Pos[0] + 5;\n    let bottomRange10x = this.state.square6Pos[0] - 5;\n    let topRange10y = this.state.square6Pos[1] + 5;\n    let bottomRange10y = this.state.square6Pos[1] - 5;\n    let topRange11x = this.state.square7Pos[0] + 5;\n    let bottomRange11x = this.state.square7Pos[0] - 5;\n    let topRange11y = this.state.square7Pos[1] + 5;\n    let bottomRange11y = this.state.square7Pos[1] - 5;\n    let topRange12x = this.state.square8Pos[0] + 5;\n    let bottomRange12x = this.state.square8Pos[0] - 5;\n    let topRange12y = this.state.square8Pos[1] + 5;\n    let bottomRange12y = this.state.square8Pos[1] - 5;\n    let topRange13x = this.state.square9Pos[0] + 5;\n    let bottomRange13x = this.state.square9Pos[0] - 5;\n    let topRange13y = this.state.square9Pos[1] + 5;\n    let bottomRange13y = this.state.square9Pos[1] - 5;\n    let topRange14x = this.state.square10Pos[0] + 5;\n    let bottomRange14x = this.state.square10Pos[0] - 5;\n    let topRange14y = this.state.square10Pos[1] + 5;\n    let bottomRange14y = this.state.square10Pos[1] - 5;\n    let topRange15x = this.state.square11Pos[0] + 5;\n    let bottomRange15x = this.state.square11Pos[0] - 5;\n    let topRange15y = this.state.square11Pos[1] + 5;\n    let bottomRange15y = this.state.square11Pos[1] - 5;\n    let topRange16x = this.state.square12Pos[0] + 5;\n    let bottomRange16x = this.state.square12Pos[0] - 5;\n    let topRange16y = this.state.square12Pos[1] + 5;\n    let bottomRange16y = this.state.square12Pos[1] - 5;\n    let topRange17x = this.state.square13Pos[0] + 5;\n    let bottomRange17x = this.state.square13Pos[0] - 5;\n    let topRange17y = this.state.square13Pos[1] + 5;\n    let bottomRange17y = this.state.square13Pos[1] - 5;\n    let topRange18x = this.state.square14Pos[0] + 5;\n    let bottomRange18x = this.state.square14Pos[0] - 5;\n    let topRange18y = this.state.square14Pos[1] + 5;\n    let bottomRange18y = this.state.square14Pos[1] - 5;\n    let topRange19x = this.state.square15Pos[0] + 5;\n    let bottomRange19x = this.state.square15Pos[0] - 5;\n    let topRange19y = this.state.square15Pos[1] + 5;\n    let bottomRange19y = this.state.square15Pos[1] - 5;\n    let topRange20x = this.state.square16Pos[0] + 5;\n    let bottomRange20x = this.state.square16Pos[0] - 5;\n    let topRange20y = this.state.square16Pos[1] + 5;\n    let bottomRange20y = this.state.square16Pos[1] - 5;\n\n    if (event.layerX >= bottomRange1x && event.layerX <= topRange1x && event.layerY >= bottomRange1y && event.layerY <= topRange1y) {\n      this.setState({\n        start1Move: true\n      });\n    } else if (event.layerX >= bottomRange2x && event.layerX <= topRange2x && event.layerY >= bottomRange2y && event.layerY <= topRange2y) {\n      this.setState({\n        start2Move: true\n      });\n    } else if (event.layerX >= bottomRange3x && event.layerX <= topRange3x && event.layerY >= bottomRange3y && event.layerY <= topRange3y) {\n      this.setState({\n        start3Move: true\n      });\n    } else if (event.layerX >= bottomRange4x && event.layerX <= topRange4x && event.layerY >= bottomRange4y && event.layerY <= topRange4y) {\n      this.setState({\n        start4Move: true\n      });\n    } else if (event.layerX >= bottomRange5x && event.layerX <= topRange5x && event.layerY >= bottomRange5y && event.layerY <= topRange5y) {\n      this.setState({\n        start5Move: true\n      });\n    } else if (event.layerX >= bottomRange6x && event.layerX <= topRange6x && event.layerY >= bottomRange6y && event.layerY <= topRange6y) {\n      this.setState({\n        start6Move: true\n      });\n    } else if (event.layerX >= bottomRange7x && event.layerX <= topRange7x && event.layerY >= bottomRange7y && event.layerY <= topRange7y) {\n      this.setState({\n        start7Move: true\n      });\n    } else if (event.layerX >= bottomRange8x && event.layerX <= topRange8x && event.layerY >= bottomRange8y && event.layerY <= topRange8y) {\n      this.setState({\n        start8Move: true\n      });\n    } else if (event.layerX >= bottomRange9x && event.layerX <= topRange9x && event.layerY >= bottomRange9y && event.layerY <= topRange9y) {\n      this.setState({\n        start9Move: true\n      });\n    } else if (event.layerX >= bottomRange10x && event.layerX <= topRange10x && event.layerY >= bottomRange10y && event.layerY <= topRange10y) {\n      this.setState({\n        start10Move: true\n      });\n    } else if (event.layerX >= bottomRange11x && event.layerX <= topRange11x && event.layerY >= bottomRange11y && event.layerY <= topRange11y) {\n      this.setState({\n        start11Move: true\n      });\n    } else if (event.layerX >= bottomRange12x && event.layerX <= topRange12x && event.layerY >= bottomRange12y && event.layerY <= topRange12y) {\n      this.setState({\n        start12Move: true\n      });\n    } else if (event.layerX >= bottomRange13x && event.layerX <= topRange13x && event.layerY >= bottomRange13y && event.layerY <= topRange13y) {\n      this.setState({\n        start13Move: true\n      });\n    } else if (event.layerX >= bottomRange14x && event.layerX <= topRange14x && event.layerY >= bottomRange14y && event.layerY <= topRange14y) {\n      this.setState({\n        start14Move: true\n      });\n    } else if (event.layerX >= bottomRange15x && event.layerX <= topRange15x && event.layerY >= bottomRange15y && event.layerY <= topRange15y) {\n      this.setState({\n        start15Move: true\n      });\n    } else if (event.layerX >= bottomRange16x && event.layerX <= topRange16x && event.layerY >= bottomRange16y && event.layerY <= topRange16y) {\n      this.setState({\n        start16Move: true\n      });\n    } else if (event.layerX >= bottomRange17x && event.layerX <= topRange17x && event.layerY >= bottomRange17y && event.layerY <= topRange17y) {\n      this.setState({\n        start17Move: true\n      });\n    } else if (event.layerX >= bottomRange18x && event.layerX <= topRange18x && event.layerY >= bottomRange18y && event.layerY <= topRange18y) {\n      this.setState({\n        start18Move: true\n      });\n    } else if (event.layerX >= bottomRange19x && event.layerX <= topRange19x && event.layerY >= bottomRange19y && event.layerY <= topRange19y) {\n      this.setState({\n        start19Move: true\n      });\n    } else if (event.layerX >= bottomRange20x && event.layerX <= topRange20x && event.layerY >= bottomRange20y && event.layerY <= topRange20y) {\n      this.setState({\n        start20Move: true\n      });\n    } else {\n      this.setState({\n        start1Move: false,\n        start2Move: false,\n        start3Move: false,\n        start4Move: false,\n        start5Move: false,\n        start6Move: false,\n        start7Move: false,\n        start8Move: false,\n        start9Move: false,\n        start10Move: false,\n        start11Move: false,\n        start12Move: false,\n        start13Move: false,\n        start14Move: false,\n        start15Move: false,\n        start16Move: false,\n        start17Move: false,\n        start18Move: false,\n        start19Move: false,\n        start20Move: false\n      });\n    }\n\n    this.updateCanvas();\n    this.handleMouseEvent(event);\n  } //   points.find(point => { if (event.layerX && event.layerY === point + -5 || point + 5) {\n  //     console.log(point)\n  //     //  points.filter(clickedPoint => { if (clickedPoint[0] === point[0] + -5 || point[0] + 5) {\n  //       this.setState({\n  //         startMove: true,\n  //       })\n  //     })\n  //   }\n\n\n  handleMouseEvent(event) {\n    let points = [this.state.circle1Pos, this.state.circle2Pos, this.state.circle3Pos, this.state.circle4Pos];\n\n    this.ctx.canvas.onmousemove = event => {\n      event.preventDefault();\n      points[0] = [event.layerX, event.layerY];\n      this.updateCanvas();\n    };\n\n    if (this.state.start1Move) {\n      console.log(this.state);\n      this.state.prevCircle1Pos = this.state.circle1Pos;\n      let square1distance1FromOsc1 = Math.sqrt((this.state.circle1Pos[0] - this.state.square1Pos[0]) * (this.state.circle1Pos[0] - this.state.square1Pos[0]) + (this.state.circle1Pos[1] - this.state.square1Pos[1]) * (this.state.circle1Pos[1] - this.state.square1Pos[1]));\n      let square2distance1FromOsc1 = Math.sqrt((this.state.circle1Pos[0] - this.state.square2Pos[0]) * (this.state.circle1Pos[0] - this.state.square2Pos[0]) + (this.state.circle1Pos[1] - this.state.square2Pos[1]) * (this.state.circle1Pos[1] - this.state.square2Pos[1]));\n      let square3distance1FromOsc1 = Math.sqrt((this.state.circle1Pos[0] - this.state.square3Pos[0]) * (this.state.circle1Pos[0] - this.state.square3Pos[0]) + (this.state.circle1Pos[1] - this.state.square3Pos[1]) * (this.state.circle1Pos[1] - this.state.square3Pos[1]));\n      let square4distance1FromOsc1 = Math.sqrt((this.state.circle1Pos[0] - this.state.square4Pos[0]) * (this.state.circle1Pos[0] - this.state.square4Pos[0]) + (this.state.circle1Pos[1] - this.state.square4Pos[1]) * (this.state.circle1Pos[1] - this.state.square4Pos[1]));\n      let square5distance1FromOsc1 = Math.sqrt((this.state.circle1Pos[0] - this.state.square5Pos[0]) * (this.state.circle1Pos[0] - this.state.square5Pos[0]) + (this.state.circle1Pos[1] - this.state.square5Pos[1]) * (this.state.circle1Pos[1] - this.state.square5Pos[1]));\n      let square6distance1FromOsc1 = Math.sqrt((this.state.circle1Pos[0] - this.state.square6Pos[0]) * (this.state.circle1Pos[0] - this.state.square6Pos[0]) + (this.state.circle1Pos[1] - this.state.square6Pos[1]) * (this.state.circle1Pos[1] - this.state.square6Pos[1]));\n      let square7distance1FromOsc1 = Math.sqrt((this.state.circle1Pos[0] - this.state.square7Pos[0]) * (this.state.circle1Pos[0] - this.state.square7Pos[0]) + (this.state.circle1Pos[1] - this.state.square7Pos[1]) * (this.state.circle1Pos[1] - this.state.square7Pos[1]));\n      let square8distance1FromOsc1 = Math.sqrt((this.state.circle1Pos[0] - this.state.square8Pos[0]) * (this.state.circle1Pos[0] - this.state.square8Pos[0]) + (this.state.circle1Pos[1] - this.state.square8Pos[1]) * (this.state.circle1Pos[1] - this.state.square8Pos[1]));\n      let square9distance1FromOsc1 = Math.sqrt((this.state.circle1Pos[0] - this.state.square9Pos[0]) * (this.state.circle1Pos[0] - this.state.square9Pos[0]) + (this.state.circle1Pos[1] - this.state.square9Pos[1]) * (this.state.circle1Pos[1] - this.state.square9Pos[1]));\n      let square10distance1FromOsc1 = Math.sqrt((this.state.circle1Pos[0] - this.state.square10Pos[0]) * (this.state.circle1Pos[0] - this.state.square10Pos[0]) + (this.state.circle1Pos[1] - this.state.square10Pos[1]) * (this.state.circle1Pos[1] - this.state.square10Pos[1]));\n      let square11distance1FromOsc1 = Math.sqrt((this.state.circle1Pos[0] - this.state.square11Pos[0]) * (this.state.circle1Pos[0] - this.state.square11Pos[0]) + (this.state.circle1Pos[1] - this.state.square11Pos[1]) * (this.state.circle1Pos[1] - this.state.square11Pos[1]));\n      let square12distance1FromOsc1 = Math.sqrt((this.state.circle1Pos[0] - this.state.square12Pos[0]) * (this.state.circle1Pos[0] - this.state.square12Pos[0]) + (this.state.circle1Pos[1] - this.state.square12Pos[1]) * (this.state.circle1Pos[1] - this.state.square12Pos[1]));\n      let square13distance1FromOsc1 = Math.sqrt((this.state.circle1Pos[0] - this.state.square13Pos[0]) * (this.state.circle1Pos[0] - this.state.square13Pos[0]) + (this.state.circle1Pos[1] - this.state.square13Pos[1]) * (this.state.circle1Pos[1] - this.state.square13Pos[1]));\n      let square14distance1FromOsc1 = Math.sqrt((this.state.circle1Pos[0] - this.state.square14Pos[0]) * (this.state.circle1Pos[0] - this.state.square14Pos[0]) + (this.state.circle1Pos[1] - this.state.square14Pos[1]) * (this.state.circle1Pos[1] - this.state.square14Pos[1]));\n      let square15distance1FromOsc1 = Math.sqrt((this.state.circle1Pos[0] - this.state.square15Pos[0]) * (this.state.circle1Pos[0] - this.state.square15Pos[0]) + (this.state.circle1Pos[1] - this.state.square15Pos[1]) * (this.state.circle1Pos[1] - this.state.square15Pos[1]));\n      let square16distance1FromOsc1 = Math.sqrt((this.state.circle1Pos[0] - this.state.square15Pos[0]) * (this.state.circle1Pos[0] - this.state.square16Pos[0]) + (this.state.circle1Pos[1] - this.state.square16Pos[1]) * (this.state.circle1Pos[1] - this.state.square16Pos[1]));\n      var posX = event.layerX;\n      var posY = event.layerY;\n\n      if (posX < 0) {\n        posX = 0;\n      }\n\n      if (posY < 0) {\n        posY = 0;\n      }\n\n      if (posX > this.props.width) {\n        posX = this.props.width;\n      }\n\n      if (posY > this.props.height) {\n        posY = this.props.height;\n      }\n\n      this.setState({\n        circle1Pos: [posX, posY],\n        square1distanceFromOsc1: square1distance1FromOsc1,\n        square2distanceFromOsc1: square2distance1FromOsc1,\n        square3distanceFromOsc1: square3distance1FromOsc1,\n        square4distanceFromOsc1: square4distance1FromOsc1,\n        square5distanceFromOsc1: square5distance1FromOsc1,\n        square6distanceFromOsc1: square6distance1FromOsc1,\n        square7distanceFromOsc1: square7distance1FromOsc1,\n        square8distanceFromOsc1: square8distance1FromOsc1,\n        square9distanceFromOsc1: square9distance1FromOsc1,\n        square10distanceFromOsc1: square10distance1FromOsc1,\n        square11distanceFromOsc1: square11distance1FromOsc1,\n        square12distanceFromOsc1: square12distance1FromOsc1,\n        square13distanceFromOsc1: square13distance1FromOsc1,\n        square14distanceFromOsc1: square14distance1FromOsc1,\n        square15distanceFromOsc1: square15distance1FromOsc1,\n        square16distanceFromOsc1: square16distance1FromOsc1\n      });\n      console.log(this.square1distance1FromOsc1);\n      this.updateCanvas();\n      this.updateFrequencyOSC(posY); // this.changeOSC1filter2Depth(square4distance1FromOsc1);\n      // this.changeOSC1filter2Rate(square4distance1FromOsc1);\n    }\n\n    if (this.state.start2Move) {\n      console.log('heyyyyyyyyyyyyyyy');\n      console.log(this.state.circle2Pos, this.state.square1Pos);\n      this.state.prevCircle2Pos = this.state.circle2Pos;\n      let square1distance2FromOsc2 = Math.sqrt((this.state.circle2Pos[0] - this.state.square1Pos[0]) * (this.state.circle2Pos[0] - this.state.square1Pos[0]) + (this.state.circle2Pos[1] - this.state.square1Pos[1]) * (this.state.circle2Pos[1] - this.state.square1Pos[1]));\n      let square2distance2FromOsc2 = Math.sqrt((this.state.circle2Pos[0] - this.state.square2Pos[0]) * (this.state.circle2Pos[0] - this.state.square2Pos[0]) + (this.state.circle2Pos[1] - this.state.square2Pos[1]) * (this.state.circle2Pos[1] - this.state.square2Pos[1]));\n      let square3distance2FromOsc2 = Math.sqrt((this.state.circle2Pos[0] - this.state.square3Pos[0]) * (this.state.circle2Pos[0] - this.state.square3Pos[0]) + (this.state.circle2Pos[1] - this.state.square3Pos[1]) * (this.state.circle2Pos[1] - this.state.square3Pos[1]));\n      let square4distance2FromOsc2 = Math.sqrt((this.state.circle2Pos[0] - this.state.square4Pos[0]) * (this.state.circle2Pos[0] - this.state.square4Pos[0]) + (this.state.circle2Pos[1] - this.state.square4Pos[1]) * (this.state.circle2Pos[1] - this.state.square4Pos[1]));\n      let square5distance2FromOsc2 = Math.sqrt((this.state.circle2Pos[0] - this.state.square5Pos[0]) * (this.state.circle2Pos[0] - this.state.square5Pos[0]) + (this.state.circle2Pos[1] - this.state.square5Pos[1]) * (this.state.circle2Pos[1] - this.state.square5Pos[1]));\n      let square6distance2FromOsc2 = Math.sqrt((this.state.circle2Pos[0] - this.state.square6Pos[0]) * (this.state.circle2Pos[0] - this.state.square6Pos[0]) + (this.state.circle2Pos[1] - this.state.square6Pos[1]) * (this.state.circle2Pos[1] - this.state.square6Pos[1]));\n      let square7distance2FromOsc2 = Math.sqrt((this.state.circle2Pos[0] - this.state.square7Pos[0]) * (this.state.circle2Pos[0] - this.state.square7Pos[0]) + (this.state.circle2Pos[1] - this.state.square7Pos[1]) * (this.state.circle2Pos[1] - this.state.square7Pos[1]));\n      let square8distance2FromOsc2 = Math.sqrt((this.state.circle2Pos[0] - this.state.square8Pos[0]) * (this.state.circle2Pos[0] - this.state.square8Pos[0]) + (this.state.circle2Pos[1] - this.state.square8Pos[1]) * (this.state.circle2Pos[1] - this.state.square8Pos[1]));\n      let square9distance2FromOsc2 = Math.sqrt((this.state.circle2Pos[0] - this.state.square9Pos[0]) * (this.state.circle2Pos[0] - this.state.square9Pos[0]) + (this.state.circle2Pos[1] - this.state.square9Pos[1]) * (this.state.circle2Pos[1] - this.state.square9Pos[1]));\n      let square10distance2FromOsc2 = Math.sqrt((this.state.circle2Pos[0] - this.state.square10Pos[0]) * (this.state.circle2Pos[0] - this.state.square10Pos[0]) + (this.state.circle2Pos[1] - this.state.square10Pos[1]) * (this.state.circle2Pos[1] - this.state.square10Pos[1]));\n      let square11distance2FromOsc2 = Math.sqrt((this.state.circle2Pos[0] - this.state.square11Pos[0]) * (this.state.circle2Pos[0] - this.state.square11Pos[0]) + (this.state.circle2Pos[1] - this.state.square11Pos[1]) * (this.state.circle2Pos[1] - this.state.square11Pos[1]));\n      let square12distance2FromOsc2 = Math.sqrt((this.state.circle2Pos[0] - this.state.square12Pos[0]) * (this.state.circle2Pos[0] - this.state.square12Pos[0]) + (this.state.circle2Pos[1] - this.state.square12Pos[1]) * (this.state.circle2Pos[1] - this.state.square12Pos[1]));\n      let square13distance2FromOsc2 = Math.sqrt((this.state.circle2Pos[0] - this.state.square13Pos[0]) * (this.state.circle2Pos[0] - this.state.square13Pos[0]) + (this.state.circle2Pos[1] - this.state.square13Pos[1]) * (this.state.circle2Pos[1] - this.state.square13Pos[1]));\n      let square14distance2FromOsc2 = Math.sqrt((this.state.circle2Pos[0] - this.state.square14Pos[0]) * (this.state.circle2Pos[0] - this.state.square14Pos[0]) + (this.state.circle2Pos[1] - this.state.square14Pos[1]) * (this.state.circle2Pos[1] - this.state.square14Pos[1]));\n      let square15distance2FromOsc2 = Math.sqrt((this.state.circle2Pos[0] - this.state.square15Pos[0]) * (this.state.circle2Pos[0] - this.state.square15Pos[0]) + (this.state.circle2Pos[1] - this.state.square15Pos[1]) * (this.state.circle2Pos[1] - this.state.square15Pos[1]));\n      let square16distance2FromOsc2 = Math.sqrt((this.state.circle2Pos[0] - this.state.square15Pos[0]) * (this.state.circle2Pos[0] - this.state.square16Pos[0]) + (this.state.circle2Pos[1] - this.state.square16Pos[1]) * (this.state.circle2Pos[1] - this.state.square16Pos[1]));\n      console.log(square1distance2FromOsc2);\n      var posX = event.layerX;\n      var posY = event.layerY;\n\n      if (posX < 0) {\n        posX = 0;\n      }\n\n      if (posY < 0) {\n        posY = 0;\n      }\n\n      if (posX > this.props.width) {\n        posX = this.props.width;\n      }\n\n      if (posY > this.props.height) {\n        posY = this.props.height;\n      }\n\n      this.setState({\n        circle2Pos: [posX, posY],\n        square1distanceFromOsc2: square1distance2FromOsc2,\n        square2distanceFromOsc2: square2distance2FromOsc2,\n        square3distanceFromOsc2: square3distance2FromOsc2,\n        square4distanceFromOsc2: square4distance2FromOsc2,\n        square5distanceFromOsc2: square5distance2FromOsc2,\n        square6distanceFromOsc2: square6distance2FromOsc2,\n        square7distanceFromOsc2: square7distance2FromOsc2,\n        square8distanceFromOsc2: square8distance2FromOsc2,\n        square9distanceFromOsc2: square9distance2FromOsc2,\n        square10distanceFromOsc2: square10distance2FromOsc2,\n        square11distanceFromOsc2: square11distance2FromOsc2,\n        square12distanceFromOsc2: square12distance2FromOsc2,\n        square13distanceFromOsc2: square13distance2FromOsc2,\n        square14distanceFromOsc2: square14distance2FromOsc2,\n        square15distanceFromOsc2: square15distance2FromOsc2,\n        square16distanceFromOsc2: square16distance2FromOsc2\n      });\n      console.log(square10distance2FromOsc2);\n      this.updateCanvas();\n      this.updateFrequencyOSC2(posY);\n    }\n\n    if (this.state.start3Move) {\n      this.state.prevCircle3Pos = this.state.circle3Pos;\n      let square1distance3FromOsc3 = Math.sqrt((this.state.circle3Pos[0] - this.state.square1Pos[0]) * (this.state.circle3Pos[0] - this.state.square1Pos[0]) + (this.state.circle3Pos[1] - this.state.square1Pos[1]) * (this.state.circle3Pos[1] - this.state.square1Pos[1]));\n      let square2distance3FromOsc3 = Math.sqrt((this.state.circle3Pos[0] - this.state.square2Pos[0]) * (this.state.circle3Pos[0] - this.state.square2Pos[0]) + (this.state.circle3Pos[1] - this.state.square2Pos[1]) * (this.state.circle3Pos[1] - this.state.square2Pos[1]));\n      let square3distance3FromOsc3 = Math.sqrt((this.state.circle3Pos[0] - this.state.square3Pos[0]) * (this.state.circle3Pos[0] - this.state.square3Pos[0]) + (this.state.circle3Pos[1] - this.state.square3Pos[1]) * (this.state.circle3Pos[1] - this.state.square3Pos[1]));\n      let square4distance3FromOsc3 = Math.sqrt((this.state.circle3Pos[0] - this.state.square4Pos[0]) * (this.state.circle3Pos[0] - this.state.square4Pos[0]) + (this.state.circle3Pos[1] - this.state.square4Pos[1]) * (this.state.circle3Pos[1] - this.state.square4Pos[1]));\n      let square5distance3FromOsc3 = Math.sqrt((this.state.circle3Pos[0] - this.state.square5Pos[0]) * (this.state.circle3Pos[0] - this.state.square5Pos[0]) + (this.state.circle3Pos[1] - this.state.square5Pos[1]) * (this.state.circle3Pos[1] - this.state.square5Pos[1]));\n      let square6distance3FromOsc3 = Math.sqrt((this.state.circle3Pos[0] - this.state.square6Pos[0]) * (this.state.circle3Pos[0] - this.state.square6Pos[0]) + (this.state.circle3Pos[1] - this.state.square6Pos[1]) * (this.state.circle3Pos[1] - this.state.square6Pos[1]));\n      let square7distance3FromOsc3 = Math.sqrt((this.state.circle3Pos[0] - this.state.square7Pos[0]) * (this.state.circle3Pos[0] - this.state.square7Pos[0]) + (this.state.circle3Pos[1] - this.state.square7Pos[1]) * (this.state.circle3Pos[1] - this.state.square7Pos[1]));\n      let square8distance3FromOsc3 = Math.sqrt((this.state.circle3Pos[0] - this.state.square8Pos[0]) * (this.state.circle3Pos[0] - this.state.square8Pos[0]) + (this.state.circle3Pos[1] - this.state.square8Pos[1]) * (this.state.circle3Pos[1] - this.state.square8Pos[1]));\n      let square9distance3FromOsc3 = Math.sqrt((this.state.circle3Pos[0] - this.state.square9Pos[0]) * (this.state.circle3Pos[0] - this.state.square9Pos[0]) + (this.state.circle3Pos[1] - this.state.square9Pos[1]) * (this.state.circle3Pos[1] - this.state.square9Pos[1]));\n      let square10distance3FromOsc3 = Math.sqrt((this.state.circle3Pos[0] - this.state.square10Pos[0]) * (this.state.circle3Pos[0] - this.state.square10Pos[0]) + (this.state.circle3Pos[1] - this.state.square10Pos[1]) * (this.state.circle3Pos[1] - this.state.square10Pos[1]));\n      let square11distance3FromOsc3 = Math.sqrt((this.state.circle3Pos[0] - this.state.square11Pos[0]) * (this.state.circle3Pos[0] - this.state.square11Pos[0]) + (this.state.circle3Pos[1] - this.state.square11Pos[1]) * (this.state.circle3Pos[1] - this.state.square11Pos[1]));\n      let square12distance3FromOsc3 = Math.sqrt((this.state.circle3Pos[0] - this.state.square12Pos[0]) * (this.state.circle3Pos[0] - this.state.square12Pos[0]) + (this.state.circle3Pos[1] - this.state.square12Pos[1]) * (this.state.circle3Pos[1] - this.state.square12Pos[1]));\n      let square13distance3FromOsc3 = Math.sqrt((this.state.circle3Pos[0] - this.state.square13Pos[0]) * (this.state.circle3Pos[0] - this.state.square13Pos[0]) + (this.state.circle3Pos[1] - this.state.square13Pos[1]) * (this.state.circle3Pos[1] - this.state.square13Pos[1]));\n      let square14distance3FromOsc3 = Math.sqrt((this.state.circle3Pos[0] - this.state.square14Pos[0]) * (this.state.circle3Pos[0] - this.state.square14Pos[0]) + (this.state.circle3Pos[1] - this.state.square14Pos[1]) * (this.state.circle3Pos[1] - this.state.square14Pos[1]));\n      let square15distance3FromOsc3 = Math.sqrt((this.state.circle3Pos[0] - this.state.square15Pos[0]) * (this.state.circle3Pos[0] - this.state.square15Pos[0]) + (this.state.circle3Pos[1] - this.state.square15Pos[1]) * (this.state.circle3Pos[1] - this.state.square15Pos[1]));\n      let square16distance3FromOsc3 = Math.sqrt((this.state.circle3Pos[0] - this.state.square15Pos[0]) * (this.state.circle3Pos[0] - this.state.square16Pos[0]) + (this.state.circle3Pos[1] - this.state.square16Pos[1]) * (this.state.circle3Pos[1] - this.state.square16Pos[1]));\n      var posX = event.layerX;\n      var posY = event.layerY;\n\n      if (posX < 0) {\n        posX = 0;\n      }\n\n      if (posY < 0) {\n        posY = 0;\n      }\n\n      if (posX > this.props.width) {\n        posX = this.props.width;\n      }\n\n      if (posY > this.props.height) {\n        posY = this.props.height;\n      }\n\n      this.setState({\n        circle3Pos: [posX, posY],\n        square1distanceFromOsc3: square1distance3FromOsc3,\n        square2distanceFromOsc3: square2distance3FromOsc3,\n        square3distanceFromOsc3: square3distance3FromOsc3,\n        square4distanceFromOsc3: square4distance3FromOsc3,\n        square5distanceFromOsc3: square5distance3FromOsc3,\n        square6distanceFromOsc3: square6distance3FromOsc3,\n        square7distanceFromOsc3: square7distance3FromOsc3,\n        square8distanceFromOsc3: square8distance3FromOsc3,\n        square9distanceFromOsc3: square9distance3FromOsc3,\n        square10distanceFromOsc3: square10distance3FromOsc3,\n        square11distanceFromOsc3: square11distance3FromOsc3,\n        square12distanceFromOsc3: square12distance3FromOsc3,\n        square13distanceFromOsc3: square13distance3FromOsc3,\n        square14distanceFromOsc3: square14distance3FromOsc3,\n        square15distanceFromOsc3: square15distance3FromOsc3,\n        square16distanceFromOsc3: square16distance3FromOsc3\n      });\n      this.updateCanvas();\n      this.updateFrequencyOSC3(posY);\n    }\n\n    if (this.state.start4Move) {\n      this.state.prevCircle4Pos = this.state.circle4Pos;\n      let square1distance4FromOsc4 = Math.sqrt((this.state.circle4Pos[0] - this.state.square1Pos[0]) * (this.state.circle4Pos[0] - this.state.square1Pos[0]) + (this.state.circle4Pos[1] - this.state.square1Pos[1]) * (this.state.circle4Pos[1] - this.state.square1Pos[1]));\n      let square2distance4FromOsc4 = Math.sqrt((this.state.circle4Pos[0] - this.state.square2Pos[0]) * (this.state.circle4Pos[0] - this.state.square2Pos[0]) + (this.state.circle4Pos[1] - this.state.square2Pos[1]) * (this.state.circle4Pos[1] - this.state.square2Pos[1]));\n      let square3distance4FromOsc4 = Math.sqrt((this.state.circle4Pos[0] - this.state.square3Pos[0]) * (this.state.circle4Pos[0] - this.state.square3Pos[0]) + (this.state.circle4Pos[1] - this.state.square3Pos[1]) * (this.state.circle4Pos[1] - this.state.square3Pos[1]));\n      let square4distance4FromOsc4 = Math.sqrt((this.state.circle4Pos[0] - this.state.square4Pos[0]) * (this.state.circle4Pos[0] - this.state.square4Pos[0]) + (this.state.circle4Pos[1] - this.state.square4Pos[1]) * (this.state.circle4Pos[1] - this.state.square4Pos[1]));\n      let square5distance4FromOsc4 = Math.sqrt((this.state.circle4Pos[0] - this.state.square5Pos[0]) * (this.state.circle4Pos[0] - this.state.square5Pos[0]) + (this.state.circle4Pos[1] - this.state.square5Pos[1]) * (this.state.circle4Pos[1] - this.state.square5Pos[1]));\n      let square6distance4FromOsc4 = Math.sqrt((this.state.circle4Pos[0] - this.state.square6Pos[0]) * (this.state.circle4Pos[0] - this.state.square6Pos[0]) + (this.state.circle4Pos[1] - this.state.square6Pos[1]) * (this.state.circle4Pos[1] - this.state.square6Pos[1]));\n      let square7distance4FromOsc4 = Math.sqrt((this.state.circle4Pos[0] - this.state.square7Pos[0]) * (this.state.circle4Pos[0] - this.state.square7Pos[0]) + (this.state.circle4Pos[1] - this.state.square7Pos[1]) * (this.state.circle4Pos[1] - this.state.square7Pos[1]));\n      let square8distance4FromOsc4 = Math.sqrt((this.state.circle4Pos[0] - this.state.square8Pos[0]) * (this.state.circle4Pos[0] - this.state.square8Pos[0]) + (this.state.circle4Pos[1] - this.state.square8Pos[1]) * (this.state.circle4Pos[1] - this.state.square8Pos[1]));\n      let square9distance4FromOsc4 = Math.sqrt((this.state.circle4Pos[0] - this.state.square9Pos[0]) * (this.state.circle4Pos[0] - this.state.square9Pos[0]) + (this.state.circle4Pos[1] - this.state.square9Pos[1]) * (this.state.circle4Pos[1] - this.state.square9Pos[1]));\n      let square10distance4FromOsc4 = Math.sqrt((this.state.circle4Pos[0] - this.state.square10Pos[0]) * (this.state.circle4Pos[0] - this.state.square10Pos[0]) + (this.state.circle4Pos[1] - this.state.square10Pos[1]) * (this.state.circle4Pos[1] - this.state.square10Pos[1]));\n      let square11distance4FromOsc4 = Math.sqrt((this.state.circle4Pos[0] - this.state.square11Pos[0]) * (this.state.circle4Pos[0] - this.state.square11Pos[0]) + (this.state.circle4Pos[1] - this.state.square11Pos[1]) * (this.state.circle4Pos[1] - this.state.square11Pos[1]));\n      let square12distance4FromOsc4 = Math.sqrt((this.state.circle4Pos[0] - this.state.square12Pos[0]) * (this.state.circle4Pos[0] - this.state.square12Pos[0]) + (this.state.circle4Pos[1] - this.state.square12Pos[1]) * (this.state.circle4Pos[1] - this.state.square12Pos[1]));\n      let square13distance4FromOsc4 = Math.sqrt((this.state.circle4Pos[0] - this.state.square13Pos[0]) * (this.state.circle4Pos[0] - this.state.square13Pos[0]) + (this.state.circle4Pos[1] - this.state.square13Pos[1]) * (this.state.circle4Pos[1] - this.state.square13Pos[1]));\n      let square14distance4FromOsc4 = Math.sqrt((this.state.circle4Pos[0] - this.state.square14Pos[0]) * (this.state.circle4Pos[0] - this.state.square14Pos[0]) + (this.state.circle4Pos[1] - this.state.square14Pos[1]) * (this.state.circle4Pos[1] - this.state.square14Pos[1]));\n      let square15distance4FromOsc4 = Math.sqrt((this.state.circle4Pos[0] - this.state.square15Pos[0]) * (this.state.circle4Pos[0] - this.state.square15Pos[0]) + (this.state.circle4Pos[1] - this.state.square15Pos[1]) * (this.state.circle4Pos[1] - this.state.square15Pos[1]));\n      let square16distance4FromOsc4 = Math.sqrt((this.state.circle4Pos[0] - this.state.square15Pos[0]) * (this.state.circle4Pos[0] - this.state.square16Pos[0]) + (this.state.circle4Pos[1] - this.state.square16Pos[1]) * (this.state.circle4Pos[1] - this.state.square16Pos[1]));\n      var posX = event.layerX;\n      var posY = event.layerY;\n\n      if (posX < 0) {\n        posX = 0;\n      }\n\n      if (posY < 0) {\n        posY = 0;\n      }\n\n      if (posX > this.props.width) {\n        posX = this.props.width;\n      }\n\n      if (posY > this.props.height) {\n        posY = this.props.height;\n      }\n\n      this.setState({\n        circle4Pos: [posX, posY],\n        square1distanceFromOsc4: square1distance4FromOsc4,\n        square2distanceFromOsc4: square2distance4FromOsc4,\n        square3distanceFromOsc4: square3distance4FromOsc4,\n        square4distanceFromOsc4: square4distance4FromOsc4,\n        square5distanceFromOsc4: square5distance4FromOsc4,\n        square6distanceFromOsc4: square6distance4FromOsc4,\n        square7distanceFromOsc4: square7distance4FromOsc4,\n        square8distanceFromOsc4: square8distance4FromOsc4,\n        square9distanceFromOsc4: square9distance4FromOsc4,\n        square10distanceFromOsc4: square10distance4FromOsc4,\n        square11distanceFromOsc4: square11distance4FromOsc4,\n        square12distanceFromOsc4: square12distance4FromOsc4,\n        square13distanceFromOsc4: square13distance4FromOsc4,\n        square14distanceFromOsc4: square14distance4FromOsc4,\n        square15distanceFromOsc4: square15distance4FromOsc4,\n        square16distanceFromOsc4: square16distance4FromOsc4\n      });\n      console.log(this.state);\n      this.updateCanvas();\n      this.updateFrequencyOSC4(posY);\n    }\n\n    if (this.state.start5Move) {\n      this.state.prevSquare1Pos = this.state.square1Pos;\n      console.log(this.state.square1Pos, this.state.circle1Pos);\n      let square1distance5FromOsc1 = Math.sqrt((this.state.circle1Pos[0] - this.state.square1Pos[0]) * (this.state.circle1Pos[0] - this.state.square1Pos[0]) + (this.state.circle1Pos[1] - this.state.square1Pos[1]) * (this.state.circle1Pos[1] - this.state.square1Pos[1]));\n      let square1distance5FromOsc2 = Math.sqrt((this.state.circle2Pos[0] - this.state.square1Pos[0]) * (this.state.circle2Pos[0] - this.state.square1Pos[0]) + (this.state.circle2Pos[1] - this.state.square1Pos[1]) * (this.state.circle2Pos[1] - this.state.square1Pos[1]));\n      let square1distance5FromOsc3 = Math.sqrt((this.state.circle3Pos[0] - this.state.square1Pos[0]) * (this.state.circle3Pos[0] - this.state.square1Pos[0]) + (this.state.circle3Pos[1] - this.state.square1Pos[1]) * (this.state.circle3Pos[1] - this.state.square1Pos[1]));\n      let square1distance5FromOsc4 = Math.sqrt((this.state.circle4Pos[0] - this.state.square1Pos[0]) * (this.state.circle4Pos[0] - this.state.square1Pos[0]) + (this.state.circle4Pos[1] - this.state.square1Pos[1]) * (this.state.circle4Pos[1] - this.state.square1Pos[1]));\n      var posX = event.layerX;\n      var posY = event.layerY;\n\n      if (posX < 0) {\n        posX = 0;\n      }\n\n      if (posY < 0) {\n        posY = 0;\n      }\n\n      if (posX > this.props.width) {\n        posX = this.props.width;\n      }\n\n      if (posY > this.props.height) {\n        posY = this.props.height;\n      }\n\n      this.setState({\n        square1Pos: [posX, posY],\n        square1distanceFromOsc1: square1distance5FromOsc1,\n        square1distanceFromOsc2: square1distance5FromOsc2,\n        square1distanceFromOsc3: square1distance5FromOsc3,\n        square1distanceFromOsc4: square1distance5FromOsc4\n      });\n      console.log(square1distance5FromOsc1);\n      this.updateCanvas();\n      this.updateLFOType();\n      this.updateLFOFreq(square1distance5FromOsc1);\n      this.updateLFO2Type();\n      this.updateLFO2Freq(square1distance5FromOsc2);\n      this.updateLFO3Type();\n      this.updateLFO3Freq(square1distance5FromOsc3);\n      this.updateLFO4Type();\n      this.updateLFO4Freq(square1distance5FromOsc4);\n    }\n\n    if (this.state.start6Move) {\n      this.state.prevSquare2Pos = this.state.square2Pos;\n      let square2distance6FromOsc1 = Math.sqrt((this.state.circle1Pos[0] - this.state.square2Pos[0]) * (this.state.circle1Pos[0] - this.state.square2Pos[0]) + (this.state.circle1Pos[1] - this.state.square2Pos[1]) * (this.state.circle1Pos[1] - this.state.square2Pos[1]));\n      let square2distance6FromOsc2 = Math.sqrt((this.state.circle2Pos[0] - this.state.square2Pos[0]) * (this.state.circle2Pos[0] - this.state.square2Pos[0]) + (this.state.circle2Pos[1] - this.state.square2Pos[1]) * (this.state.circle2Pos[1] - this.state.square2Pos[1]));\n      let square2distance6FromOsc3 = Math.sqrt((this.state.circle3Pos[0] - this.state.square2Pos[0]) * (this.state.circle3Pos[0] - this.state.square2Pos[0]) + (this.state.circle3Pos[1] - this.state.square2Pos[1]) * (this.state.circle3Pos[1] - this.state.square2Pos[1]));\n      let square2distance6FromOsc4 = Math.sqrt((this.state.circle4Pos[0] - this.state.square2Pos[0]) * (this.state.circle4Pos[0] - this.state.square2Pos[0]) + (this.state.circle4Pos[1] - this.state.square2Pos[1]) * (this.state.circle4Pos[1] - this.state.square2Pos[1]));\n      var posX = event.layerX;\n      var posY = event.layerY;\n\n      if (posX < 0) {\n        posX = 0;\n      }\n\n      if (posY < 0) {\n        posY = 0;\n      }\n\n      if (posX > this.props.width) {\n        posX = this.props.width;\n      }\n\n      if (posY > this.props.height) {\n        posY = this.props.height;\n      }\n\n      this.setState({\n        square2Pos: [posX, posY],\n        square2distanceFromOsc1: square2distance6FromOsc1,\n        square2distanceFromOsc2: square2distance6FromOsc2,\n        square2distanceFromOsc3: square2distance6FromOsc3,\n        square2distanceFromOsc4: square2distance6FromOsc4\n      });\n      console.log(square2distance6FromOsc3);\n      this.updateOSC1chorusDepth(square2distance6FromOsc1);\n      this.updateOCS1chorusRate(square2distance6FromOsc1);\n      this.updateOSC2chorusDepth(square2distance6FromOsc2);\n      this.updateOCS2chorusRate(square2distance6FromOsc2);\n      this.updateOSC3chorusDepth(square2distance6FromOsc3);\n      this.updateOCS3chorusRate(square2distance6FromOsc3);\n      this.updateOSC4chorusDepth(square2distance6FromOsc4);\n      this.updateOCS4chorusRate(square2distance6FromOsc4);\n      this.updateCanvas();\n    }\n\n    if (this.state.start7Move) {\n      this.state.prevSquare3Pos = this.state.square3Pos;\n      let square3distance7FromOsc1 = Math.sqrt((this.state.circle1Pos[0] - this.state.square3Pos[0]) * (this.state.circle1Pos[0] - this.state.square3Pos[0]) + (this.state.circle1Pos[1] - this.state.square3Pos[1]) * (this.state.circle1Pos[1] - this.state.square3Pos[1]));\n      let square3distance7FromOsc2 = Math.sqrt((this.state.circle2Pos[0] - this.state.square3Pos[0]) * (this.state.circle2Pos[0] - this.state.square3Pos[0]) + (this.state.circle2Pos[1] - this.state.square3Pos[1]) * (this.state.circle2Pos[1] - this.state.square3Pos[1]));\n      let square3distance7FromOsc3 = Math.sqrt((this.state.circle3Pos[0] - this.state.square3Pos[0]) * (this.state.circle3Pos[0] - this.state.square3Pos[0]) + (this.state.circle3Pos[1] - this.state.square3Pos[1]) * (this.state.circle3Pos[1] - this.state.square3Pos[1]));\n      let square3distance7FromOsc4 = Math.sqrt((this.state.circle4Pos[0] - this.state.square3Pos[0]) * (this.state.circle4Pos[0] - this.state.square3Pos[0]) + (this.state.circle4Pos[1] - this.state.square3Pos[1]) * (this.state.circle4Pos[1] - this.state.square3Pos[1]));\n      var posX = event.layerX;\n      var posY = event.layerY;\n\n      if (posX < 0) {\n        posX = 0;\n      }\n\n      if (posY < 0) {\n        posY = 0;\n      }\n\n      if (posX > this.props.width) {\n        posX = this.props.width;\n      }\n\n      if (posY > this.props.height) {\n        posY = this.props.height;\n      }\n\n      this.setState({\n        square3Pos: [posX, posY],\n        square3distanceFromOsc1: square3distance7FromOsc1,\n        square3distanceFromOsc2: square3distance7FromOsc2,\n        square3distanceFromOsc3: square3distance7FromOsc3,\n        square3distanceFromOsc4: square3distance7FromOsc4\n      });\n      console.log(square3distance7FromOsc4);\n      this.updateOSC1filterDepth(square3distance7FromOsc1);\n      this.updateOSC1filterRate(square3distance7FromOsc1);\n      this.updateOSC2filterDepth(square3distance7FromOsc2);\n      this.updateOSC2filterRate(square3distance7FromOsc2);\n      this.updateOSC3filterDepth(square3distance7FromOsc3);\n      this.updateOSC3filterRate(square3distance7FromOsc3);\n      this.updateOSC4filterDepth(square3distance7FromOsc4);\n      this.updateOSC4filterRate(square3distance7FromOsc4);\n      this.updateCanvas();\n    }\n\n    if (this.state.start8Move) {\n      this.state.prevSquare4Pos = this.state.square4Pos;\n      let square4distance8FromOsc1 = Math.sqrt((this.state.circle1Pos[0] - this.state.square4Pos[0]) * (this.state.circle1Pos[0] - this.state.square4Pos[0]) + (this.state.circle1Pos[1] - this.state.square4Pos[1]) * (this.state.circle1Pos[1] - this.state.square4Pos[1]));\n      let square4distance8FromOsc2 = Math.sqrt((this.state.circle2Pos[0] - this.state.square4Pos[0]) * (this.state.circle2Pos[0] - this.state.square4Pos[0]) + (this.state.circle2Pos[1] - this.state.square4Pos[1]) * (this.state.circle2Pos[1] - this.state.square4Pos[1]));\n      let square4distance8FromOsc3 = Math.sqrt((this.state.circle3Pos[0] - this.state.square4Pos[0]) * (this.state.circle3Pos[0] - this.state.square4Pos[0]) + (this.state.circle3Pos[1] - this.state.square4Pos[1]) * (this.state.circle3Pos[1] - this.state.square4Pos[1]));\n      let square4distance8FromOsc4 = Math.sqrt((this.state.circle4Pos[0] - this.state.square4Pos[0]) * (this.state.circle4Pos[0] - this.state.square4Pos[0]) + (this.state.circle4Pos[1] - this.state.square4Pos[1]) * (this.state.circle4Pos[1] - this.state.square4Pos[1]));\n      var posX = event.layerX;\n      var posY = event.layerY;\n\n      if (posX < 0) {\n        posX = 0;\n      }\n\n      if (posY < 0) {\n        posY = 0;\n      }\n\n      if (posX > this.props.width) {\n        posX = this.props.width;\n      }\n\n      if (posY > this.props.height) {\n        posY = this.props.height;\n      }\n\n      this.setState({\n        square4Pos: [posX, posY],\n        square4distanceFromOsc1: square4distance8FromOsc1,\n        square4distanceFromOsc2: square4distance8FromOsc2,\n        square4distanceFromOsc3: square4distance8FromOsc3,\n        square4distanceFromOsc4: square4distance8FromOsc4\n      });\n      console.log(square4distance8FromOsc4.value);\n      this.updateOSC1filter2Depth(square4distance8FromOsc1);\n      this.updateOSC1filter2Rate(square4distance8FromOsc1);\n      this.updateOSC2filter2Depth(square4distance8FromOsc2);\n      this.updateOSC2filter2Rate(square4distance8FromOsc2);\n      this.updateOSC3filter2Depth(square4distance8FromOsc3);\n      this.updateOSC3filter2Rate(square4distance8FromOsc3);\n      this.updateOSC4filter2Depth(square4distance8FromOsc4);\n      this.updateOSC4filter2Rate(square4distance8FromOsc4);\n      this.updateCanvas();\n    }\n\n    if (this.state.start9Move) {\n      this.state.prevSquare5Pos = this.state.square5Pos;\n      console.log('=========================================================================');\n      let square5distance9FromOsc1 = Math.sqrt((this.state.circle1Pos[0] - this.state.square5Pos[0]) * (this.state.circle1Pos[0] - this.state.square5Pos[0]) + (this.state.circle1Pos[1] - this.state.square5Pos[1]) * (this.state.circle1Pos[1] - this.state.square5Pos[1]));\n      let square5distance9FromOsc2 = Math.sqrt((this.state.circle2Pos[0] - this.state.square5Pos[0]) * (this.state.circle2Pos[0] - this.state.square5Pos[0]) + (this.state.circle2Pos[1] - this.state.square5Pos[1]) * (this.state.circle2Pos[1] - this.state.square5Pos[1]));\n      let square5distance9FromOsc3 = Math.sqrt((this.state.circle3Pos[0] - this.state.square5Pos[0]) * (this.state.circle3Pos[0] - this.state.square5Pos[0]) + (this.state.circle3Pos[1] - this.state.square5Pos[1]) * (this.state.circle3Pos[1] - this.state.square5Pos[1]));\n      let square5distance9FromOsc4 = Math.sqrt((this.state.circle4Pos[0] - this.state.square5Pos[0]) * (this.state.circle4Pos[0] - this.state.square5Pos[0]) + (this.state.circle4Pos[1] - this.state.square5Pos[1]) * (this.state.circle4Pos[1] - this.state.square5Pos[1]));\n      var posX = event.layerX;\n      var posY = event.layerY;\n\n      if (posX < 0) {\n        posX = 0;\n      }\n\n      if (posY < 0) {\n        posY = 0;\n      }\n\n      if (posX > this.props.width) {\n        posX = this.props.width;\n      }\n\n      if (posY > this.props.height) {\n        posY = this.props.height;\n      }\n\n      this.setState({\n        square5Pos: [posX, posY],\n        square5distanceFromOsc1: square5distance9FromOsc1,\n        square5distanceFromOsc2: square5distance9FromOsc2,\n        square5distanceFromOsc3: square5distance9FromOsc3,\n        square5distanceFromOsc4: square5distance9FromOsc4\n      });\n      console.log(square5distance9FromOsc4);\n      this.updateCanvas();\n      this.updateOSC1tremoloIntensity(square5distance9FromOsc1);\n      this.updateOSC1tremoloRate(square5distance9FromOsc1);\n      this.updateOSC2tremoloIntensity(square5distance9FromOsc2);\n      this.updateOSC2tremoloRate(square5distance9FromOsc2);\n      this.updateOSC3tremoloIntensity(square5distance9FromOsc3);\n      this.updateOSC3tremoloRate(square5distance9FromOsc3);\n      this.updateOSC4tremoloIntensity(square5distance9FromOsc4);\n      this.updateOSC4tremoloRate(square5distance9FromOsc4);\n    }\n\n    if (this.state.start10Move) {\n      this.state.prevSquare6Pos = this.state.square6Pos;\n      let square6distance10FromOsc1 = Math.sqrt((this.state.circle1Pos[0] - this.state.square6Pos[0]) * (this.state.circle1Pos[0] - this.state.square6Pos[0]) + (this.state.circle1Pos[1] - this.state.square6Pos[1]) * (this.state.circle1Pos[1] - this.state.square6Pos[1]));\n      let square6distance10FromOsc2 = Math.sqrt((this.state.circle2Pos[0] - this.state.square6Pos[0]) * (this.state.circle2Pos[0] - this.state.square6Pos[0]) + (this.state.circle2Pos[1] - this.state.square6Pos[1]) * (this.state.circle2Pos[1] - this.state.square6Pos[1]));\n      let square6distance10FromOsc3 = Math.sqrt((this.state.circle3Pos[0] - this.state.square6Pos[0]) * (this.state.circle3Pos[0] - this.state.square6Pos[0]) + (this.state.circle3Pos[1] - this.state.square6Pos[1]) * (this.state.circle3Pos[1] - this.state.square6Pos[1]));\n      let square6distance10FromOsc4 = Math.sqrt((this.state.circle4Pos[0] - this.state.square6Pos[0]) * (this.state.circle4Pos[0] - this.state.square6Pos[0]) + (this.state.circle4Pos[1] - this.state.square6Pos[1]) * (this.state.circle4Pos[1] - this.state.square6Pos[1]));\n      var posX = event.layerX;\n      var posY = event.layerY;\n\n      if (posX < 0) {\n        posX = 0;\n      }\n\n      if (posY < 0) {\n        posY = 0;\n      }\n\n      if (posX > this.props.width) {\n        posX = this.props.width;\n      }\n\n      if (posY > this.props.height) {\n        posY = this.props.height;\n      }\n\n      this.setState({\n        square6Pos: [posX, posY],\n        square6distanceFromOsc1: square6distance10FromOsc1,\n        square6distanceFromOsc2: square6distance10FromOsc2,\n        square6distanceFromOsc3: square6distance10FromOsc3,\n        square6distanceFromOsc4: square6distance10FromOsc4\n      });\n      this.updateOSC1bitcrusherBits(square6distance10FromOsc1);\n      this.updateOSC1bitcrusherBufferSize(square6distance10FromOsc1);\n      this.updateOSC2bitcrusherBits(square6distance10FromOsc2);\n      this.updateOSC2bitcrusherBufferSize(square6distance10FromOsc2);\n      this.updateOSC3bitcrusherBits(square6distance10FromOsc3);\n      this.updateOSC3bitcrusherBufferSize(square6distance10FromOsc3);\n      this.updateOSC4bitcrusherBits(square6distance10FromOsc4);\n      this.updateOSC4bitcrusherBufferSize(square6distance10FromOsc4);\n      this.updateCanvas();\n    }\n\n    if (this.state.start11Move) {\n      this.state.prevSquare7Pos = this.state.square7Pos;\n      let square7distance11FromOsc1 = Math.sqrt((this.state.circle1Pos[0] - this.state.square7Pos[0]) * (this.state.circle1Pos[0] - this.state.square7Pos[0]) + (this.state.circle1Pos[1] - this.state.square7Pos[1]) * (this.state.circle1Pos[1] - this.state.square7Pos[1]));\n      let square7distance11FromOsc2 = Math.sqrt((this.state.circle2Pos[0] - this.state.square7Pos[0]) * (this.state.circle2Pos[0] - this.state.square7Pos[0]) + (this.state.circle2Pos[1] - this.state.square7Pos[1]) * (this.state.circle2Pos[1] - this.state.square7Pos[1]));\n      let square7distance11FromOsc3 = Math.sqrt((this.state.circle3Pos[0] - this.state.square7Pos[0]) * (this.state.circle3Pos[0] - this.state.square7Pos[0]) + (this.state.circle3Pos[1] - this.state.square7Pos[1]) * (this.state.circle3Pos[1] - this.state.square7Pos[1]));\n      let square7distance11FromOsc4 = Math.sqrt((this.state.circle4Pos[0] - this.state.square7Pos[0]) * (this.state.circle4Pos[0] - this.state.square7Pos[0]) + (this.state.circle4Pos[1] - this.state.square7Pos[1]) * (this.state.circle4Pos[1] - this.state.square7Pos[1]));\n      var posX = event.layerX;\n      var posY = event.layerY;\n\n      if (posX < 0) {\n        posX = 0;\n      }\n\n      if (posY < 0) {\n        posY = 0;\n      }\n\n      if (posX > this.props.width) {\n        posX = this.props.width;\n      }\n\n      if (posY > this.props.height) {\n        posY = this.props.height;\n      }\n\n      this.setState({\n        square7Pos: [posX, posY],\n        square7distanceFromOsc1: square7distance11FromOsc1,\n        square7distanceFromOsc2: square7distance11FromOsc2,\n        square7distanceFromOsc3: square7distance11FromOsc3,\n        square7distanceFromOsc4: square7distance11FromOsc4\n      });\n      this.updateCanvas();\n      this.updateOSC1moogFilterCutoff(square7distance11FromOsc1);\n      this.updateOSC1moogFilterBufferSize(square7distance11FromOsc1);\n      this.updateOSC1moogFilterResonance(square7distance11FromOsc1);\n      this.updateOSC2moogFilterCutoff(square7distance11FromOsc2);\n      this.updateOSC2moogFilterBufferSize(square7distance11FromOsc2);\n      this.updateOSC2moogFilterResonance(square7distance11FromOsc2);\n      this.updateOSC3moogFilterCutoff(square7distance11FromOsc3);\n      this.updateOSC3moogFilterBufferSize(square7distance11FromOsc3);\n      this.updateOSC3moogFilterResonance(square7distance11FromOsc3);\n      this.updateOSC4moogFilterCutoff(square7distance11FromOsc4);\n      this.updateOSC4moogFilterBufferSize(square7distance11FromOsc4);\n      this.updateOSC4moogFilterResonance(square7distance11FromOsc4);\n    }\n\n    if (this.state.start12Move) {\n      this.state.prevSquare8Pos = this.state.square8Pos;\n      let square8distance12FromOsc1 = Math.sqrt((this.state.circle1Pos[0] - this.state.square8Pos[0]) * (this.state.circle1Pos[0] - this.state.square8Pos[0]) + (this.state.circle1Pos[1] - this.state.square8Pos[1]) * (this.state.circle1Pos[1] - this.state.square8Pos[1]));\n      let square8distance12FromOsc2 = Math.sqrt((this.state.circle2Pos[0] - this.state.square8Pos[0]) * (this.state.circle2Pos[0] - this.state.square8Pos[0]) + (this.state.circle2Pos[1] - this.state.square8Pos[1]) * (this.state.circle2Pos[1] - this.state.square8Pos[1]));\n      let square8distance12FromOsc3 = Math.sqrt((this.state.circle3Pos[0] - this.state.square8Pos[0]) * (this.state.circle3Pos[0] - this.state.square8Pos[0]) + (this.state.circle3Pos[1] - this.state.square8Pos[1]) * (this.state.circle3Pos[1] - this.state.square8Pos[1]));\n      let square8distance12FromOsc4 = Math.sqrt((this.state.circle4Pos[0] - this.state.square8Pos[0]) * (this.state.circle4Pos[0] - this.state.square8Pos[0]) + (this.state.circle4Pos[1] - this.state.square8Pos[1]) * (this.state.circle4Pos[1] - this.state.square8Pos[1]));\n      var posX = event.layerX;\n      var posY = event.layerY;\n\n      if (posX < 0) {\n        posX = 0;\n      }\n\n      if (posY < 0) {\n        posY = 0;\n      }\n\n      if (posX > this.props.width) {\n        posX = this.props.width;\n      }\n\n      if (posY > this.props.height) {\n        posY = this.props.height;\n      }\n\n      this.setState({\n        square8Pos: [posX, posY],\n        square8distanceFromOsc1: square8distance12FromOsc1,\n        square8distanceFromOsc2: square8distance12FromOsc2,\n        square8distanceFromOsc3: square8distance12FromOsc3,\n        square8distanceFromOsc4: square8distance12FromOsc4\n      });\n      this.updateOSC1moogFilter2Cutoff(square8distance12FromOsc1);\n      this.updateOSC1moogFilter2BufferSize(square8distance12FromOsc1);\n      this.updateOSC1moogFilter2Resonance(square8distance12FromOsc1);\n      this.updateOSC2moogFilter2Cutoff(square8distance12FromOsc2);\n      this.updateOSC2moogFilter2BufferSize(square8distance12FromOsc2);\n      this.updateOSC2moogFilter2Resonance(square8distance12FromOsc2);\n      this.updateOSC3moogFilter2Cutoff(square8distance12FromOsc3);\n      this.updateOSC3moogFilter2BufferSize(square8distance12FromOsc3);\n      this.updateOSC3moogFilter2Resonance(square8distance12FromOsc3);\n      this.updateOSC4moogFilter2Cutoff(square8distance12FromOsc4);\n      this.updateOSC4moogFilter2BufferSize(square8distance12FromOsc4);\n      this.updateOSC4moogFilter2Resonance(square8distance12FromOsc4);\n      this.updateCanvas();\n    }\n\n    if (this.state.start13Move) {\n      this.state.prevSquare9Pos = this.state.square9Pos;\n      let square9distance13FromOsc1 = Math.sqrt((this.state.circle1Pos[0] - this.state.square9Pos[0]) * (this.state.circle1Pos[0] - this.state.square9Pos[0]) + (this.state.circle1Pos[1] - this.state.square9Pos[1]) * (this.state.circle1Pos[1] - this.state.square9Pos[1]));\n      let square9distance13FromOsc2 = Math.sqrt((this.state.circle2Pos[0] - this.state.square9Pos[0]) * (this.state.circle2Pos[0] - this.state.square9Pos[0]) + (this.state.circle2Pos[1] - this.state.square9Pos[1]) * (this.state.circle2Pos[1] - this.state.square9Pos[1]));\n      let square9distance13FromOsc3 = Math.sqrt((this.state.circle3Pos[0] - this.state.square9Pos[0]) * (this.state.circle3Pos[0] - this.state.square9Pos[0]) + (this.state.circle3Pos[1] - this.state.square9Pos[1]) * (this.state.circle3Pos[1] - this.state.square9Pos[1]));\n      let square9distance13FromOsc4 = Math.sqrt((this.state.circle4Pos[0] - this.state.square9Pos[0]) * (this.state.circle4Pos[0] - this.state.square9Pos[0]) + (this.state.circle4Pos[1] - this.state.square9Pos[1]) * (this.state.circle4Pos[1] - this.state.square9Pos[1]));\n      var posX = event.layerX;\n      var posY = event.layerY;\n\n      if (posX < 0) {\n        posX = 0;\n      }\n\n      if (posY < 0) {\n        posY = 0;\n      }\n\n      if (posX > this.props.width) {\n        posX = this.props.width;\n      }\n\n      if (posY > this.props.height) {\n        posY = this.props.height;\n      }\n\n      this.setState({\n        square9Pos: [posX, posY],\n        square9distanceFromOsc1: square9distance13FromOsc1,\n        square9distanceFromOsc2: square9distance13FromOsc2,\n        square9distanceFromOsc3: square9distance13FromOsc3,\n        square9distanceFromOsc4: square9distance13FromOsc4\n      });\n      this.updateOSC1reverbLevel(square9distance13FromOsc1);\n      this.updateOSC2reverbLevel(square9distance13FromOsc2);\n      this.updateOSC3reverbLevel(square9distance13FromOsc3);\n      this.updateOSC4reverbLevel(square9distance13FromOsc4);\n      this.updateCanvas();\n    }\n\n    if (this.state.start14Move) {\n      this.state.prevSquare10Pos = this.state.square10Pos;\n      let square10distance14FromOsc1 = Math.sqrt((this.state.circle1Pos[0] - this.state.square10Pos[0]) * (this.state.circle1Pos[0] - this.state.square10Pos[0]) + (this.state.circle1Pos[1] - this.state.square10Pos[1]) * (this.state.circle1Pos[1] - this.state.square10Pos[1]));\n      let square10distance14FromOsc2 = Math.sqrt((this.state.circle2Pos[0] - this.state.square10Pos[0]) * (this.state.circle2Pos[0] - this.state.square10Pos[0]) + (this.state.circle2Pos[1] - this.state.square10Pos[1]) * (this.state.circle2Pos[1] - this.state.square10Pos[1]));\n      let square10distance14FromOsc3 = Math.sqrt((this.state.circle3Pos[0] - this.state.square10Pos[0]) * (this.state.circle3Pos[0] - this.state.square10Pos[0]) + (this.state.circle3Pos[1] - this.state.square10Pos[1]) * (this.state.circle3Pos[1] - this.state.square10Pos[1]));\n      let square10distance14FromOsc4 = Math.sqrt((this.state.circle4Pos[0] - this.state.square10Pos[0]) * (this.state.circle4Pos[0] - this.state.square10Pos[0]) + (this.state.circle4Pos[1] - this.state.square10Pos[1]) * (this.state.circle4Pos[1] - this.state.square10Pos[1]));\n      var posX = event.layerX;\n      var posX = event.layerX;\n      var posY = event.layerY;\n\n      if (posX < 0) {\n        posX = 0;\n      }\n\n      if (posY < 0) {\n        posY = 0;\n      }\n\n      if (posX > this.props.width) {\n        posX = this.props.width;\n      }\n\n      if (posY > this.props.height) {\n        posY = this.props.height;\n      }\n\n      this.setState({\n        square10Pos: [posX, posY],\n        square10distanceFromOsc1: square10distance14FromOsc1,\n        square10distanceFromOsc2: square10distance14FromOsc2,\n        square10distanceFromOsc3: square10distance14FromOsc3,\n        square10distanceFromOsc4: square10distance14FromOsc4\n      });\n      this.updateOSC1pannerPan(square10distance14FromOsc1);\n      this.updateOSC2pannerPan(square10distance14FromOsc2);\n      this.updateOSC3pannerPan(square10distance14FromOsc3);\n      this.updateOSC4pannerPan(square10distance14FromOsc4);\n      this.updateCanvas();\n    }\n\n    if (this.state.start15Move) {\n      this.state.prevSquare11Pos = this.state.square11Pos;\n      let square11distance15FromOsc1 = Math.sqrt((this.state.circle1Pos[0] - this.state.square11Pos[0]) * (this.state.circle1Pos[0] - this.state.square11Pos[0]) + (this.state.circle1Pos[1] - this.state.square11Pos[1]) * (this.state.circle1Pos[1] - this.state.square11Pos[1]));\n      let square11distance15FromOsc2 = Math.sqrt((this.state.circle2Pos[0] - this.state.square11Pos[0]) * (this.state.circle2Pos[0] - this.state.square11Pos[0]) + (this.state.circle2Pos[1] - this.state.square11Pos[1]) * (this.state.circle2Pos[1] - this.state.square11Pos[1]));\n      let square11distance15FromOsc3 = Math.sqrt((this.state.circle3Pos[0] - this.state.square11Pos[0]) * (this.state.circle3Pos[0] - this.state.square11Pos[0]) + (this.state.circle3Pos[1] - this.state.square11Pos[1]) * (this.state.circle3Pos[1] - this.state.square11Pos[1]));\n      let square11distance15FromOsc4 = Math.sqrt((this.state.circle4Pos[0] - this.state.square11Pos[0]) * (this.state.circle4Pos[0] - this.state.square11Pos[0]) + (this.state.circle4Pos[1] - this.state.square11Pos[1]) * (this.state.circle4Pos[1] - this.state.square11Pos[1]));\n      var posX = event.layerX;\n      var posY = event.layerY;\n\n      if (posX < 0) {\n        posX = 0;\n      }\n\n      if (posY < 0) {\n        posY = 0;\n      }\n\n      if (posX > this.props.width) {\n        posX = this.props.width;\n      }\n\n      if (posY > this.props.height) {\n        posY = this.props.height;\n      }\n\n      this.setState({\n        square11Pos: [posX, posY],\n        square11distanceFromOsc1: square11distance15FromOsc1,\n        square11distanceFromOsc2: square11distance15FromOsc2,\n        square11distanceFromOsc3: square11distance15FromOsc3,\n        square11distanceFromOsc4: square11distance15FromOsc4\n      });\n      this.updateOSC1phaserDepth(square11distance15FromOsc1);\n      this.updateOSC1phaserRate(square11distance15FromOsc1);\n      this.updateOSC1phaserFeedback(square11distance15FromOsc1);\n      this.updateOSC2phaserDepth(square11distance15FromOsc2);\n      this.updateOSC2phaserRate(square11distance15FromOsc2);\n      this.updateOSC2phaserFeedback(square11distance15FromOsc2);\n      this.updateOSC3phaserDepth(square11distance15FromOsc3);\n      this.updateOSC3phaserRate(square11distance15FromOsc3);\n      this.updateOSC3phaserFeedback(square11distance15FromOsc3);\n      this.updateOSC4phaserDepth(square11distance15FromOsc4);\n      this.updateOSC4phaserRate(square11distance15FromOsc4);\n      this.updateOSC4phaserFeedback(square11distance15FromOsc4);\n      this.updateCanvas();\n    }\n\n    if (this.state.start16Move) {\n      this.state.prevSquare12Pos = this.state.square12Pos;\n      let square12distance16FromOsc1 = Math.sqrt((this.state.circle1Pos[0] - this.state.square12Pos[0]) * (this.state.circle1Pos[0] - this.state.square12Pos[0]) + (this.state.circle1Pos[1] - this.state.square12Pos[1]) * (this.state.circle1Pos[1] - this.state.square12Pos[1]));\n      let square12distance16FromOsc2 = Math.sqrt((this.state.circle2Pos[0] - this.state.square12Pos[0]) * (this.state.circle2Pos[0] - this.state.square12Pos[0]) + (this.state.circle2Pos[1] - this.state.square12Pos[1]) * (this.state.circle2Pos[1] - this.state.square12Pos[1]));\n      let square12distance16FromOsc3 = Math.sqrt((this.state.circle3Pos[0] - this.state.square12Pos[0]) * (this.state.circle3Pos[0] - this.state.square12Pos[0]) + (this.state.circle3Pos[1] - this.state.square12Pos[1]) * (this.state.circle3Pos[1] - this.state.square12Pos[1]));\n      let square12distance16FromOsc4 = Math.sqrt((this.state.circle4Pos[0] - this.state.square12Pos[0]) * (this.state.circle4Pos[0] - this.state.square12Pos[0]) + (this.state.circle4Pos[1] - this.state.square12Pos[1]) * (this.state.circle4Pos[1] - this.state.square12Pos[1]));\n      var posX = event.layerX;\n      var posY = event.layerY;\n\n      if (posX < 0) {\n        posX = 0;\n      }\n\n      if (posY < 0) {\n        posY = 0;\n      }\n\n      if (posX > this.props.width) {\n        posX = this.props.width;\n      }\n\n      if (posY > this.props.height) {\n        posY = this.props.height;\n      }\n\n      this.setState({\n        square12Pos: [posX, posY],\n        square12distanceFromOsc1: square12distance16FromOsc1,\n        square12distanceFromOsc2: square12distance16FromOsc2,\n        square12distanceFromOsc3: square12distance16FromOsc3,\n        square12distanceFromOsc4: square12distance16FromOsc4\n      });\n      this.updateOSC1overdriveDrive(square12distance16FromOsc1);\n      this.updateOSC1overdriveGain(square12distance16FromOsc1);\n      this.updateOSC2overdriveDrive(square12distance16FromOsc2);\n      this.updateOSC2overdriveGain(square12distance16FromOsc2);\n      this.updateOSC3overdriveDrive(square12distance16FromOsc3);\n      this.updateOSC3overdriveGain(square12distance16FromOsc3);\n      this.updateOSC4overdriveDrive(square12distance16FromOsc4);\n      this.updateOSC4overdriveGain(square12distance16FromOsc4);\n      this.updateCanvas();\n    }\n\n    if (this.state.start17Move) {\n      this.state.prevSquare13Pos = this.state.square13Pos;\n      let square13distance17FromOsc1 = Math.sqrt((this.state.circle1Pos[0] - this.state.square13Pos[0]) * (this.state.circle1Pos[0] - this.state.square13Pos[0]) + (this.state.circle1Pos[1] - this.state.square13Pos[1]) * (this.state.circle1Pos[1] - this.state.square13Pos[1]));\n      let square13distance17FromOsc2 = Math.sqrt((this.state.circle2Pos[0] - this.state.square13Pos[0]) * (this.state.circle2Pos[0] - this.state.square13Pos[0]) + (this.state.circle2Pos[1] - this.state.square13Pos[1]) * (this.state.circle2Pos[1] - this.state.square13Pos[1]));\n      let square13distance17FromOsc3 = Math.sqrt((this.state.circle3Pos[0] - this.state.square13Pos[0]) * (this.state.circle3Pos[0] - this.state.square13Pos[0]) + (this.state.circle3Pos[1] - this.state.square13Pos[1]) * (this.state.circle3Pos[1] - this.state.square13Pos[1]));\n      let square13distance17FromOsc4 = Math.sqrt((this.state.circle4Pos[0] - this.state.square13Pos[0]) * (this.state.circle4Pos[0] - this.state.square13Pos[0]) + (this.state.circle4Pos[1] - this.state.square13Pos[1]) * (this.state.circle4Pos[1] - this.state.square13Pos[1]));\n      var posX = event.layerX;\n      var posY = event.layerY;\n\n      if (posX < 0) {\n        posX = 0;\n      }\n\n      if (posY < 0) {\n        posY = 0;\n      }\n\n      if (posX > this.props.width) {\n        posX = this.props.width;\n      }\n\n      if (posY > this.props.height) {\n        posY = this.props.height;\n      }\n\n      this.setState({\n        square13Pos: [posX, posY],\n        square13distanceFromOsc1: square13distance17FromOsc1,\n        square13distanceFromOsc2: square13distance17FromOsc2,\n        square13distanceFromOsc3: square13distance17FromOsc3,\n        square13distanceFromOsc4: square13distance17FromOsc4\n      });\n      this.updateCanvas();\n    }\n\n    if (this.state.start18Move) {\n      this.state.prevSquare14Pos = this.state.square14Pos;\n      let square14distance18FromOsc1 = Math.sqrt((this.state.circle1Pos[0] - this.state.square14Pos[0]) * (this.state.circle1Pos[0] - this.state.square14Pos[0]) + (this.state.circle1Pos[1] - this.state.square14Pos[1]) * (this.state.circle1Pos[1] - this.state.square14Pos[1]));\n      let square14distance18FromOsc2 = Math.sqrt((this.state.circle2Pos[0] - this.state.square14Pos[0]) * (this.state.circle2Pos[0] - this.state.square14Pos[0]) + (this.state.circle2Pos[1] - this.state.square14Pos[1]) * (this.state.circle2Pos[1] - this.state.square14Pos[1]));\n      let square14distance18FromOsc3 = Math.sqrt((this.state.circle3Pos[0] - this.state.square14Pos[0]) * (this.state.circle3Pos[0] - this.state.square14Pos[0]) + (this.state.circle3Pos[1] - this.state.square14Pos[1]) * (this.state.circle3Pos[1] - this.state.square14Pos[1]));\n      let square14distance18FromOsc4 = Math.sqrt((this.state.circle4Pos[0] - this.state.square14Pos[0]) * (this.state.circle4Pos[0] - this.state.square14Pos[0]) + (this.state.circle4Pos[1] - this.state.square14Pos[1]) * (this.state.circle4Pos[1] - this.state.square14Pos[1]));\n      var posX = event.layerX;\n      var posY = event.layerY;\n\n      if (posX < 0) {\n        posX = 0;\n      }\n\n      if (posY < 0) {\n        posY = 0;\n      }\n\n      if (posX > this.props.width) {\n        posX = this.props.width;\n      }\n\n      if (posY > this.props.height) {\n        posY = this.props.height;\n      }\n\n      this.setState({\n        square14Pos: [posX, posY],\n        square14distanceFromOsc1: square14distance18FromOsc1,\n        square14distanceFromOsc2: square14distance18FromOsc2,\n        square14distanceFromOsc3: square14distance18FromOsc3,\n        square14distanceFromOsc4: square14distance18FromOsc4\n      });\n      this.updateCanvas();\n    }\n\n    if (this.state.start19Move) {\n      this.state.prevSquare15Pos = this.state.square15Pos;\n      let square15distance19FromOsc1 = Math.sqrt((this.state.circle1Pos[0] - this.state.square15Pos[0]) * (this.state.circle1Pos[0] - this.state.square15Pos[0]) + (this.state.circle1Pos[1] - this.state.square15Pos[1]) * (this.state.circle1Pos[1] - this.state.square15Pos[1]));\n      let square15distance19FromOsc2 = Math.sqrt((this.state.circle2Pos[0] - this.state.square15Pos[0]) * (this.state.circle2Pos[0] - this.state.square15Pos[0]) + (this.state.circle2Pos[1] - this.state.square15Pos[1]) * (this.state.circle2Pos[1] - this.state.square15Pos[1]));\n      let square15distance19FromOsc3 = Math.sqrt((this.state.circle3Pos[0] - this.state.square15Pos[0]) * (this.state.circle3Pos[0] - this.state.square15Pos[0]) + (this.state.circle3Pos[1] - this.state.square15Pos[1]) * (this.state.circle3Pos[1] - this.state.square15Pos[1]));\n      let square15distance19FromOsc4 = Math.sqrt((this.state.circle4Pos[0] - this.state.square15Pos[0]) * (this.state.circle4Pos[0] - this.state.square15Pos[0]) + (this.state.circle4Pos[1] - this.state.square15Pos[1]) * (this.state.circle4Pos[1] - this.state.square15Pos[1]));\n      var posX = event.layerX;\n      var posY = event.layerY;\n\n      if (posX < 0) {\n        posX = 0;\n      }\n\n      if (posY < 0) {\n        posY = 0;\n      }\n\n      if (posX > this.props.width) {\n        posX = this.props.width;\n      }\n\n      if (posY > this.props.height) {\n        posY = this.props.height;\n      }\n\n      this.setState({\n        square15Pos: [posX, posY],\n        square15distanceFromOsc1: square15distance19FromOsc1,\n        square15distanceFromOsc2: square15distance19FromOsc2,\n        square15distanceFromOsc3: square15distance19FromOsc3,\n        square15distanceFromOsc4: square15distance19FromOsc4\n      });\n      this.updateCanvas();\n    }\n\n    if (this.state.start20Move) {\n      this.state.prevSquare15Pos = this.state.square15Pos;\n      let square16distance20FromOsc1 = Math.sqrt((this.state.circle1Pos[0] - this.state.square16Pos[0]) * (this.state.circle1Pos[0] - this.state.square16Pos[0]) + (this.state.circle1Pos[1] - this.state.square16Pos[1]) * (this.state.circle1Pos[1] - this.state.square16Pos[1]));\n      let square16distance20FromOsc2 = Math.sqrt((this.state.circle2Pos[0] - this.state.square16Pos[0]) * (this.state.circle2Pos[0] - this.state.square16Pos[0]) + (this.state.circle2Pos[1] - this.state.square16Pos[1]) * (this.state.circle2Pos[1] - this.state.square16Pos[1]));\n      let square16distance20FromOsc3 = Math.sqrt((this.state.circle3Pos[0] - this.state.square16Pos[0]) * (this.state.circle3Pos[0] - this.state.square16Pos[0]) + (this.state.circle3Pos[1] - this.state.square16Pos[1]) * (this.state.circle3Pos[1] - this.state.square16Pos[1]));\n      let square16distance20FromOsc4 = Math.sqrt((this.state.circle4Pos[0] - this.state.square16Pos[0]) * (this.state.circle4Pos[0] - this.state.square16Pos[0]) + (this.state.circle4Pos[1] - this.state.square16Pos[1]) * (this.state.circle4Pos[1] - this.state.square16Pos[1]));\n      var posX = event.layerX;\n      var posY = event.layerY;\n\n      if (posX < 0) {\n        posX = 0;\n      }\n\n      if (posY < 0) {\n        posY = 0;\n      }\n\n      if (posX > this.props.width) {\n        posX = this.props.width;\n      }\n\n      if (posY > this.props.height) {\n        posY = this.props.height;\n      }\n\n      this.setState({\n        square16Pos: [posX, posY],\n        square16distanceFromOsc1: square16distance20FromOsc1,\n        square16distanceFromOsc2: square16distance20FromOsc2,\n        square16distanceFromOsc3: square16distance20FromOsc3,\n        square16distanceFromOsc4: square16distance20FromOsc4\n      });\n      this.updateCanvas();\n    }\n\n    this.updateCanvas();\n  } //////GET DISTANCE FUNCTION/////////\n  /////////OSC1 FUNCTIONS///////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////\n\n\n  updateFrequencyOSC(posY) {\n    console.log(this.state.oscFreq, this.state.circle1Pos);\n    let oscFreq = posY * Math.floor(Math.random() * 7 - 1 + 1) + 20;\n    this.setState({\n      oscFreq: oscFreq\n    });\n    this.props.changeOSCFreq(oscFreq);\n    console.log(oscFreq);\n  }\n\n  turnOnLFO() {\n    console.log(this.props.isLFOOn);\n    console.log(this.state.isLFOstarted);\n    this.props.turnOnLFO(!this.props.isLFOOn);\n    console.log(this.props.isLFOOn);\n  }\n\n  updateLFOType() {\n    let lfoWaveTypes = ['sine', 'square', 'triangle', 'sawtooth'];\n    let randomType = Math.floor(Math.random() * lfoWaveTypes.length);\n    this.setState({\n      lfoType: randomType\n    });\n    this.props.changeLFO2Type(randomType);\n  }\n\n  updateLFOFreq(anotherSquare1distance5FromOsc1) {\n    let lfoFreq = Math.floor(anotherSquare1distance5FromOsc1 * .002 * Math.floor(Math.random() * 12 - 1 + 1) + 1);\n    this.props.changeLFOFreq(lfoFreq);\n    console.log(lfoFreq);\n  }\n\n  updateOSC1chorusBypass() {\n    console.log(this.state);\n    this.props.toggleOSC1chorusBypass(!this.props.osc1chorusBypass);\n    console.log(this.props.osc1chorusBypass);\n  }\n\n  updateOSC1chorusDepth(anotherSquare2distance6FromOsc1) {\n    let osc1chorusDepth = (1000 - anotherSquare2distance6FromOsc1) * .001;\n    this.setState({\n      osc1chorusDepth: osc1chorusDepth\n    });\n    this.props.changeOSC1chorusDepth(osc1chorusDepth);\n  }\n\n  updateOSC1chorusRate(anotherSquare2distance6FromOsc1) {\n    let osc1chorusRate = Math.floor(anotherSquare2distance6FromOsc1 * .008);\n    this.setState({\n      osc1chorusRate: osc1chorusRate\n    });\n    this.props.changeOSC1chorusRate(osc1chorusRate);\n  }\n\n  updateOSC1filterBypass() {\n    this.props.toggleOSC1filterBypass(!this.props.osc1filterBypass);\n    console.log(this.props.osc1filterBypass);\n  }\n\n  updateOSC1filterDepth(square3distance7FromOsc1) {\n    let osc1filterDepth = (1000 - square3distance7FromOsc1) * .001;\n    this.setState({\n      osc1filterDepth: osc1filterDepth\n    });\n    this.props.changeOSC1filterDepth(osc1filterDepth);\n  }\n\n  updateOSC1filterRate(square3distance7FromOsc1) {\n    let osc1filterRate = Math.floor(square3distance7FromOsc1 * .008);\n    this.setState({\n      osc1filterRate: osc1filterRate\n    });\n    this.props.changeOSC1filterRate(osc1filterRate);\n  }\n\n  updateOSC1filter2Bypass() {\n    this.props.toggleOSC1filter2Bypass(!this.props.osc1filter2Bypass);\n    console.log(this.props.osc1filter2Bypass);\n  }\n\n  updateOSC1filter2Depth(square4distance1FromOsc1) {\n    let osc1filter2Depth = Math.floor((1000 - square4distance1FromOsc1) * .008);\n    this.setState({\n      osc1filter2Depth: osc1filter2Depth\n    });\n    this.props.changeOSC1filter2Depth(osc1filter2Depth);\n  }\n\n  updateOSC1filter2Rate(square4distance1FromOsc1) {\n    let osc1filter2Rate = square4distance1FromOsc1 * .001;\n    this.setState({\n      osc1filter2Rate: osc1filter2Rate\n    });\n    this.props.changeOSC1filter2Rate(osc1filter2Rate);\n  }\n\n  updateOSC1tremoloBypass() {\n    this.props.toggleOSC1tremoloBypass(!this.props.osc1tremoloBypass);\n    console.log(this.props.osc1tremoloBypass);\n  }\n\n  updateOSC1tremoloIntensity(square5distance9FromOsc1) {\n    let osc1tremoloIntensity = (1000 - square5distance9FromOsc1) * .001;\n    this.setState({\n      osc1tremoloIntensity: osc1tremoloIntensity\n    });\n    this.props.changeOSC1tremoloIntensity(osc1tremoloIntensity);\n  }\n\n  updateOSC1tremoloRate(square5distance9FromOsc1) {\n    let osc1tremoloRate = square5distance9FromOsc1 * .011;\n    this.setState({\n      osc1tremoloRate: osc1tremoloRate\n    });\n    this.props.changeOSC1tremoloRate(osc1tremoloRate);\n  }\n\n  updateOSC1bitcrusherBypass() {\n    this.props.toggleOSC1bitcrusherBypass(!this.props.osc1bitcrusherBypass);\n    console.log(this.props.osc1bitcrusherBypass);\n  }\n\n  updateOSC1bitcrusherBits(square6distance10FromOsc1) {\n    let osc1bitcrusherBits = Math.floor((1000 - square6distance10FromOsc1) * .016);\n    this.setState({\n      osc1bitcrusherBits: osc1bitcrusherBits\n    });\n    this.props.changeOSC1bitcrusherBits(osc1bitcrusherBits);\n  }\n\n  updateOSC1bitcrusherBufferSize(square6distance10FromOsc1) {\n    let osc1bitcrusherBufferSize = square6distance10FromOsc1 * Math.floor(Math.random() * 16 - 1 + 1) + 256;\n    this.setState({\n      osc1bitcrusherBufferSize: osc1bitcrusherBufferSize\n    });\n    this.props.changeOSC1bitcrusherBufferSize(osc1bitcrusherBufferSize);\n  }\n\n  updateOSC1moogFilterBypass() {\n    this.props.toggleOSC1moogFilterBypass(!this.props.osc1moogFilterBypass);\n    console.log(this.props.osc1moogFilterBypass);\n  }\n\n  updateOSC1moogFilterCutoff(square7distance11FromOsc1) {\n    let osc1moogFilterCutoff = (1000 - square7distance11FromOsc1) * .001;\n    this.setState({\n      osc1moogFilterCutoff: osc1moogFilterCutoff\n    });\n    this.props.changeOSC1moogFilterCutoff(osc1moogFilterCutoff);\n  }\n\n  updateOSC1moogFilterBufferSize(square7distance11FromOsc1) {\n    let osc1moogFilterBufferSize = square7distance11FromOsc1 * Math.floor(Math.random() * 16 - 1 + 1) + 256;\n    this.setState({\n      osc1moogFilterBufferSize: osc1moogFilterBufferSize\n    });\n    this.props.changeOSC1moogFilterBufferSize(osc1moogFilterBufferSize);\n  }\n\n  updateOSC1moogFilterResonance(square7distance11FromOsc1) {\n    let osc1moogFilterResonance = Math.floor(square7distance11FromOsc1 * .004);\n    this.setState({\n      osc1moogFilterResonance: osc1moogFilterResonance\n    });\n    this.props.changeOSC1moogFilterResonance(osc1moogFilterResonance);\n  }\n\n  updateOSC1moogFilter2Bypass() {\n    this.props.toggleOSC1moogFilter2Bypass(!this.props.osc1moogFilter2Bypass);\n    console.log(this.props.osc1moogFilter2Bypass);\n  }\n\n  updateOSC1moogFilter2Cutoff(square8distance12FromOsc1) {\n    let osc1moogFilter2Cutoff = (1000 - square8distance12FromOsc1) * .001;\n    this.setState({\n      osc1moogFilter2Cutoff: osc1moogFilter2Cutoff\n    });\n    this.props.changeOSC1moogFilter2Cutoff(osc1moogFilter2Cutoff);\n  }\n\n  updateOSC1moogFilter2BufferSize(square8distance12FromOsc1) {\n    let osc1moogFilter2BufferSize = square8distance12FromOsc1 * Math.floor(Math.random() * 16 - 1 + 1) + 256;\n    this.setState({\n      osc1moogFilter2BufferSize: osc1moogFilter2BufferSize\n    });\n    this.props.changeOSC1moogFilter2BufferSize(osc1moogFilter2BufferSize);\n  }\n\n  updateOSC1moogFilter2Resonance(square8distance12FromOsc1) {\n    let osc1moogFilter2Resonance = Math.floor(square8distance12FromOsc1 * .004);\n    this.setState({\n      osc1moogFilter2Resonance: osc1moogFilter2Resonance\n    });\n    this.props.changeOSC1moogFilter2Resonance(osc1moogFilter2Resonance);\n  }\n\n  updateOSC1reverbBypass() {\n    this.props.toggleOSC1reverbBypass(!this.props.osc1reverbBypass);\n    console.log(this.props.osc1reverbBypass);\n  }\n\n  updateOSC1reverbLevel(square9distance13FromOsc1) {\n    let osc1reverbLevel = (1000 - square9distance13FromOsc1) * .001;\n    this.setState({\n      osc1reverbLevel: osc1reverbLevel\n    });\n    this.props.changeOSC1reverbLevel(osc1reverbLevel);\n  }\n\n  updateOSC1pannerBypass() {\n    this.props.toggleOSC1pannerBypass(!this.props.osc1pannerBypass);\n    console.log(this.props.osc1pannerBypass);\n  }\n\n  updateOSC1pannerPan(square10distance14FromOsc1) {\n    let osc1pannerPan = 1 - (1000 - square10distance14FromOsc1) * .002;\n    this.setState({\n      osc1pannerPan: osc1pannerPan\n    });\n    this.props.changeOSC1pannerPan(osc1pannerPan);\n  }\n\n  updateOSC1phaserBypass() {\n    this.props.toggleOSC1phaserBypass(!this.props.osc1phaserBypass);\n    console.log(this.props.osc1phaserBypass);\n  }\n\n  updateOSC1phaserRate(square11distance15FromOsc1) {\n    let osc1phaserRate = Math.floor(square11distance15FromOsc1 * .008);\n    this.setState({\n      osc1phaserRate: osc1phaserRate\n    });\n    this.props.changeOSC1phaserRate(osc1phaserRate);\n  }\n\n  updateOSC1phaserDepth(square11distance15FromOsc1) {\n    let osc1phaserDepth = (1000 - square11distance15FromOsc1) * .001;\n    this.setState({\n      osc1phaserDepth: osc1phaserDepth\n    });\n    this.props.changeOSC1phaserDepth(osc1phaserDepth);\n  }\n\n  updateOSC1phaserFeedback(square11distance15FromOsc1) {\n    let osc1phaserFeedback = square11distance15FromOsc1 * .001;\n    this.setState({\n      osc1phaserFeedback: osc1phaserFeedback\n    });\n    this.props.changeOSC1phaserFeedback(osc1phaserFeedback);\n  }\n\n  updateOSC1overdriveBypass() {\n    this.props.toggleOSC1overdriveBypass(!this.props.osc1overdriveBypass);\n    console.log(this.props.osc1overdriveBypass);\n  }\n\n  updateOSC1overdriveDrive(square12distance16FromOsc1) {\n    let osc1overdriveDrive = (1000 - square12distance16FromOsc1) * .001;\n    this.setState({\n      osc1overdriveDrive: osc1overdriveDrive\n    });\n    this.props.changeOSC1overdriveDrive(osc1overdriveDrive);\n  }\n\n  updateOSC1overdriveGain(square12distance16FromOsc1) {\n    let osc1overdriveGain = Math.floor(46 - (1000 - square12distance16FromOsc1) * .046) * -1;\n    this.setState({\n      osc1overdriveGain: osc1overdriveGain\n    });\n    this.props.changeOSC1overdriveGain(osc1overdriveGain);\n  } /////////OSC2 FUNCTIONS/////////////\n\n\n  updateFrequencyOSC2(posY) {\n    let osc2Freq = posY * Math.floor(Math.random() * 7 - 1 + 1) + 20;\n    this.setState({\n      osc2Freq: osc2Freq\n    });\n    this.props.changeOSC2Freq(osc2Freq);\n    console.log(osc2Freq);\n  }\n\n  turnOnLFO2() {\n    console.log(this.props.isLFO2On);\n    console.log(this.state.isLFOstarted);\n    this.props.turnOnLFO2(!this.props.isLFO2On);\n    console.log(this.props.isLFO2On);\n  }\n\n  updateLFO2Type() {\n    let lfoWaveTypes = ['sine', 'square', 'triangle', 'sawtooth'];\n    let randomType = Math.floor(Math.random() * lfoWaveTypes.length);\n    this.setState({\n      lfo2Type: randomType\n    });\n    this.props.changeLFO2Type(randomType);\n  }\n\n  updateLFO2Freq(anotherSquare1distance5FromOsc2) {\n    let lfo2Freq = Math.floor(anotherSquare1distance5FromOsc2 * .002 * Math.floor(Math.random() * 12 - 1 + 1) + 1);\n    this.props.changeLFO2Freq(lfo2Freq);\n    console.log(lfo2Freq);\n  }\n\n  updateOSC2chorusBypass() {\n    console.log(this.state);\n    this.props.toggleOSC2chorusBypass(!this.props.osc2chorusBypass);\n    console.log(this.props.osc2chorusBypass);\n  }\n\n  updateOSC2chorusDepth(anotherSquare2distance6FromOsc2) {\n    let osc2chorusDepth = (1000 - anotherSquare2distance6FromOsc2) * .001;\n    this.setState({\n      osc2chorusDepth: osc2chorusDepth\n    });\n    this.props.changeOSC2chorusDepth(osc2chorusDepth);\n  }\n\n  updateOSC2chorusRate(anotherSquare2distanceFromOsc2) {\n    let osc2chorusRate = Math.floor(anotherSquare2distanceFromOsc2 * .008);\n    this.setState({\n      osc2chorusRate: osc2chorusRate\n    });\n    this.props.changeOSC2chorusRate(osc2chorusRate);\n  }\n\n  updateOSC2filterBypass() {\n    this.props.toggleOSC2filterBypass(!this.props.osc2filterBypass);\n    console.log(this.props.osc2filterBypass);\n  }\n\n  updateOSC2filterDepth(square3distance7FromOsc2) {\n    let osc2filterDepth = (1000 - square3distance7FromOsc2) * .001;\n    this.setState({\n      osc2filterDepth: osc2filterDepth\n    });\n    this.props.changeOSC2filterDepth(osc2filterDepth);\n  }\n\n  updateOSC2filterRate(square3distance7FromOsc2) {\n    let osc2filterRate = Math.floor(square3distance7FromOsc2 * .008);\n    this.setState({\n      osc2filterRate: osc2filterRate\n    });\n    this.props.changeOSC2filterRate(osc2filterRate);\n  }\n\n  updateOSC2filter2Bypass() {\n    console.log(this.props.osc2filter2Bypass);\n    this.props.toggleOSC2filter2Bypass(!this.props.osc2filter2Bypass);\n    console.log(this.props.osc2filter2Bypass);\n  }\n\n  updateOSC2filter2Depth(square4distance8FromOsc2) {\n    let osc2filter2Depth = Math.floor((1000 - square4distance8FromOsc2) * .008);\n    this.setState({\n      osc2filter2Depth: osc2filter2Depth\n    });\n    this.props.changeOSC2filter2Depth(osc2filter2Depth);\n  }\n\n  updateOSC2filter2Rate(square4distance8FromOsc2) {\n    let osc2filter2Rate = square4distance8FromOsc2 * .001;\n    this.setState({\n      osc2filter2Rate: osc2filter2Rate\n    });\n    this.props.changeOSC2filter2Rate(osc2filter2Rate);\n  }\n\n  updateOSC2tremoloBypass() {\n    console.log(this.props.osc2tremoloBypass);\n    this.props.toggleOSC2tremoloBypass(!this.props.osc2tremoloBypass);\n    console.log(this.props.osc2tremoloBypass);\n  }\n\n  updateOSC2tremoloIntensity(square5distance9FromOsc2) {\n    let osc2tremoloIntensity = (1000 - square5distance9FromOsc2) * .001;\n    this.setState({\n      osc2tremoloIntensity: osc2tremoloIntensity\n    });\n    this.props.changeOSC2tremoloIntensity(osc2tremoloIntensity);\n    console.log(osc2tremoloIntensity);\n  }\n\n  updateOSC2tremoloRate(square5distance9FromOsc2) {\n    let osc2tremoloRate = square5distance9FromOsc2 * .011;\n    this.setState({\n      osc2tremoloRate: osc2tremoloRate\n    });\n    this.props.changeOSC2tremoloRate(osc2tremoloRate);\n  }\n\n  updateOSC2bitcrusherBypass() {\n    console.log(this.props.osc2bitcrusherBypass);\n    this.props.toggleOSC2bitcrusherBypass(!this.props.osc2bitcrusherBypass);\n    console.log(this.props.osc2bitcrusherBypass);\n  }\n\n  updateOSC2bitcrusherBits(square6distance10FromOsc2) {\n    let osc2bitcrusherBits = Math.floor((1000 - square6distance10FromOsc2) * .016);\n    this.setState({\n      osc2bitcrusherBits: osc2bitcrusherBits\n    });\n    this.props.changeOSC2bitcrusherBits(osc2bitcrusherBits);\n    console.log(osc2bitcrusherBits);\n  }\n\n  updateOSC2bitcrusherBufferSize(square6distance10FromOsc2) {\n    let osc2bitcrusherBufferSize = square6distance10FromOsc2 * Math.floor(Math.random() * 16 - 1 + 1) + 256;\n    this.setState({\n      osc2bitcrusherBufferSize: osc2bitcrusherBufferSize\n    });\n    this.props.changeOSC2bitcrusherBufferSize(osc2bitcrusherBufferSize);\n  }\n\n  updateOSC2moogFilterBypass() {\n    console.log(this.props.osc2moogFilterBypass);\n    this.props.toggleOSC2moogFilterBypass(!this.props.osc2moogFilterBypass);\n    console.log(this.props.osc2moogFilterBypass);\n  }\n\n  updateOSC2moogFilterCutoff(square7distance11FromOsc2) {\n    let osc2moogFilterCutoff = (1000 - square7distance11FromOsc2) * .001;\n    this.setState({\n      osc2moogFilterCutoff: osc2moogFilterCutoff\n    });\n    this.props.changeOSC2moogFilterCutoff(osc2moogFilterCutoff);\n  }\n\n  updateOSC2moogFilterBufferSize(square7distance11FromOsc2) {\n    let osc2moogFilterBufferSize = square7distance11FromOsc2 * Math.floor(Math.random() * 16 - 1 + 1) + 256;\n    this.setState({\n      osc2moogFilterBufferSize: osc2moogFilterBufferSize\n    });\n    this.props.changeOSC2moogFilterBufferSize(osc2moogFilterBufferSize);\n  }\n\n  updateOSC2moogFilterResonance(square7distance11FromOsc2) {\n    let osc2moogFilterResonance = Math.floor(square7distance11FromOsc2 * .004);\n    this.setState({\n      osc2moogFilterResonance: osc2moogFilterResonance\n    });\n    this.props.changeOSC2moogFilterResonance(osc2moogFilterResonance);\n  }\n\n  updateOSC2moogFilter2Bypass() {\n    console.log(this.props.osc2moogFilter2Bypass);\n    this.props.toggleOSC2moogFilter2Bypass(!this.props.osc2moogFilter2Bypass);\n    console.log(this.props.osc2moogFilter2Bypass);\n  }\n\n  updateOSC2moogFilter2Cutoff(square8distance12FromOsc2) {\n    let osc2moogFilter2Cutoff = (1000 - square8distance12FromOsc2) * .001;\n    this.setState({\n      osc2moogFilter2Cutoff: osc2moogFilter2Cutoff\n    });\n    this.props.changeOSC2moogFilter2Cutoff(osc2moogFilter2Cutoff);\n  }\n\n  updateOSC2moogFilter2BufferSize(square8distance12FromOsc2) {\n    let osc2moogFilter2BufferSize = square8distance12FromOsc2 * Math.floor(Math.random() * 16 - 1 + 1) + 256;\n    this.setState({\n      osc2moogFilter2BufferSize: osc2moogFilter2BufferSize\n    });\n    this.props.changeOSC2moogFilter2BufferSize(osc2moogFilter2BufferSize);\n  }\n\n  updateOSC2moogFilter2Resonance(square8distance12FromOsc2) {\n    let osc2moogFilter2Resonance = Math.floor(square8distance12FromOsc2 * .004);\n    this.setState({\n      osc2moogFilter2Resonance: osc2moogFilter2Resonance\n    });\n    this.props.changeOSC2moogFilter2Resonance(osc2moogFilter2Resonance);\n  }\n\n  updateOSC2reverbBypass() {\n    this.props.toggleOSC2reverbBypass(!this.props.osc2reverbBypass);\n    console.log(this.props.osc2reverbBypass);\n  }\n\n  updateOSC2reverbLevel(square9distance13FromOsc2) {\n    let osc2reverbLevel = (1000 - square9distance13FromOsc2) * .001;\n    this.setState({\n      osc2reverbLevel: osc2reverbLevel\n    });\n    this.props.changeOSC2reverbLevel(osc2reverbLevel);\n  }\n\n  updateOSC2pannerBypass() {\n    this.props.toggleOSC2pannerBypass(!this.props.osc2pannerBypass);\n    console.log(this.props.osc2pannerBypass);\n  }\n\n  updateOSC2pannerPan(square10distance14FromOsc2) {\n    let osc2pannerPan = 1 - (1000 - square10distance14FromOsc2) * .002;\n    this.setState({\n      osc2pannerPan: osc2pannerPan\n    });\n    this.props.changeOSC2pannerPan(osc2pannerPan);\n  }\n\n  updateOSC2phaserBypass() {\n    this.props.toggleOSC2phaserBypass(!this.props.osc2phaserBypass);\n    console.log(this.props.osc2phaserBypass);\n  }\n\n  updateOSC2phaserRate(square11distance15FromOsc2) {\n    let osc2phaserRate = Math.floor(square11distance15FromOsc2 * .008);\n    this.setState({\n      osc2phaserRate: osc2phaserRate\n    });\n    this.props.changeOSC2phaserRate(osc2phaserRate);\n  }\n\n  updateOSC2phaserDepth(square11distance15FromOsc2) {\n    let osc2phaserDepth = (1000 - square11distance15FromOsc2) * .001;\n    this.setState({\n      osc2phaserDepth: osc2phaserDepth\n    });\n    this.props.changeOSC2phaserDepth(osc2phaserDepth);\n  }\n\n  updateOSC2phaserFeedback(square11distance15FromOsc2) {\n    let osc2phaserFeedback = square11distance15FromOsc2 * .001;\n    this.setState({\n      osc2phaserFeedback: osc2phaserFeedback\n    });\n    this.props.changeOSC2phaserFeedback(osc2phaserFeedback);\n  }\n\n  updateOSC2overdriveBypass() {\n    this.props.toggleOSC2overdriveBypass(!this.props.osc2overdriveBypass);\n    console.log(this.props.osc2overdriveBypass);\n  }\n\n  updateOSC2overdriveDrive(square12distance16FromOsc2) {\n    let osc2overdriveDrive = (1000 - square12distance16FromOsc2) * .001;\n    this.setState({\n      osc2overdriveDrive: osc2overdriveDrive\n    });\n    this.props.changeOSC2overdriveDrive(osc2overdriveDrive);\n  }\n\n  updateOSC2overdriveGain(square12distance16FromOsc2) {\n    let osc2overdriveGain = Math.floor(46 - (1000 - square12distance16FromOsc2) * .046) * -1;\n    this.setState({\n      osc2overdriveGain: osc2overdriveGain\n    });\n    this.props.changeOSC2overdriveGain(osc2overdriveGain);\n  } /////////OSC3 FUNCTIONS///////////////////////////\n\n\n  updateFrequencyOSC3(posY) {\n    console.log(this.state.osc3Freq);\n    let osc3Freq = 1000 - posY * .1;\n    this.props.changeOSC3Freq(osc3Freq);\n  }\n\n  turnOnLFO3() {\n    this.props.turnOnLFO3(!this.props.isLFO3On);\n    console.log(this.props.isLFO3On);\n  }\n\n  updateLFO3Type() {\n    let lfoWaveTypes = ['sine', 'square', 'triangle', 'sawtooth'];\n    let randomType = Math.floor(Math.random() * lfoWaveTypes.length);\n    this.setState({\n      lfo3Type: randomType\n    });\n    this.props.changeLFO3Type(randomType);\n  }\n\n  updateLFO3Freq(square1distance5FromOsc3) {\n    let lfo3Freq = Math.floor(square1distance5FromOsc3 * .002 * Math.floor(Math.random() * 12 - 1 + 1) + 1);\n    this.props.changeLFO3Freq(lfo3Freq);\n    console.log(lfo3Freq);\n  }\n\n  updateOSC3chorusBypass() {\n    this.props.toggleOSC3chorusBypass(!this.props.osc3chorusBypass);\n    console.log(this.props.osc3chorusBypass);\n  }\n\n  updateOSC3chorusDepth(square2distance6FromOsc3) {\n    let osc3chorusDepth = (1000 - square2distance6FromOsc3) * .001;\n    this.setState({\n      osc3chorusDepth: osc3chorusDepth\n    });\n    this.props.changeOSC3chorusDepth(osc3chorusDepth);\n  }\n\n  updateOSC3chorusRate(square2distance6FromOsc3) {\n    console.log(square2distance6FromOsc3);\n    let osc3chorusRate = Math.floor(square2distance6FromOsc3 * .008);\n    this.setState({\n      osc3chorusRate: osc3chorusRate\n    });\n    this.props.changeOSC3chorusRate(osc3chorusRate);\n  }\n\n  updateOSC3filterBypass() {\n    this.props.toggleOSC3filterBypass(!this.props.osc3filterBypass);\n    console.log(this.props.osc3filterBypass);\n  }\n\n  updateOSC3filterDepth(square3distance7FromOsc3) {\n    let osc3filterDepth = (1000 - square3distance7FromOsc3) * .001;\n    this.setState({\n      osc3filterDepth: osc3filterDepth\n    });\n    this.props.changeOSC3filterDepth(osc3filterDepth);\n  }\n\n  updateOSC3filterRate(square3distance7FromOsc3) {\n    let osc3filterRate = Math.floor(square3distance7FromOsc3 * .008);\n    this.setState({\n      osc3filterRate: osc3filterRate\n    });\n    this.props.changeOSC3filterRate(osc3filterRate);\n  }\n\n  updateOSC3filter2Bypass() {\n    this.props.toggleOSC3filter2Bypass(!this.props.osc3filter2Bypass);\n    console.log(this.props.osc3filter2Bypass);\n  }\n\n  updateOSC3filter2Depth(square4distance8FromOsc3) {\n    let osc3filter2Depth = Math.floor((1000 - square4distance8FromOsc3) * .008);\n    this.setState({\n      osc3filter2Depth: osc3filter2Depth\n    });\n    this.props.changeOSC3filter2Depth(osc3filter2Depth);\n  }\n\n  updateOSC3filter2Rate(square4distance8FromOsc3) {\n    let osc3filter2Rate = square4distance8FromOsc3 * .001;\n    this.setState({\n      osc3filter2Rate: osc3filter2Rate\n    });\n    this.props.changeOSC3filter2Rate(osc3filter2Rate);\n  }\n\n  updateOSC3tremoloBypass() {\n    console.log(this.props.osc3tremoloBypass);\n    this.props.toggleOSC3tremoloBypass(!this.props.osc3tremoloBypass);\n    console.log(this.props.osc3tremoloBypass);\n  }\n\n  updateOSC3tremoloIntensity(square5distance9FromOsc3) {\n    let osc3tremoloIntensity = (1000 - square5distance9FromOsc3) * .001;\n    this.setState({\n      osc3tremoloIntensity: osc3tremoloIntensity\n    });\n    this.props.changeOSC3tremoloIntensity(osc3tremoloIntensity);\n  }\n\n  updateOSC3tremoloRate(square5distance9FromOsc3) {\n    let osc3tremoloRate = square5distance9FromOsc3 * .011;\n    this.setState({\n      osc3tremoloRate: osc3tremoloRate\n    });\n    this.props.changeOSC3tremoloRate(osc3tremoloRate);\n  }\n\n  updateOSC3bitcrusherBypass() {\n    this.props.toggleOSC3bitcrusherBypass(!this.props.osc3bitcrusherBypass);\n    console.log(this.props.osc3bitcrusherBypass);\n  }\n\n  updateOSC3bitcrusherBits(square6distance10FromOsc3) {\n    let osc3bitcrusherBits = Math.floor((1000 - square6distance10FromOsc3) * .016);\n    this.setState({\n      osc3bitcrusherBits: osc3bitcrusherBits\n    });\n    this.props.changeOSC3bitcrusherBits(osc3bitcrusherBits);\n  }\n\n  updateOSC3bitcrusherBufferSize(square6distance10FromOsc3) {\n    let osc3bitcrusherBufferSize = square6distance10FromOsc3 * Math.floor(Math.random() * 16 - 1 + 1) + 256;\n    this.setState({\n      osc3bitcrusherBufferSize: osc3bitcrusherBufferSize\n    });\n    this.props.changeOSC3bitcrusherBufferSize(osc3bitcrusherBufferSize);\n  }\n\n  updateOSC3moogFilterBypass() {\n    this.props.toggleOSC3moogFilterBypass(!this.props.osc3moogFilterBypass);\n    console.log(this.props.osc3moogFilterBypass);\n  }\n\n  updateOSC3moogFilterCutoff(square7distance11FromOsc3) {\n    let osc3moogFilterCutoff = (1000 - square7distance11FromOsc3) * .001;\n    this.setState({\n      osc3moogFilterCutoff: osc3moogFilterCutoff\n    });\n    this.props.changeOSC3moogFilterCutoff(osc3moogFilterCutoff);\n  }\n\n  updateOSC3moogFilterBufferSize(square7distance11FromOsc3) {\n    let osc3moogFilterBufferSize = square7distance11FromOsc3 * Math.floor(Math.random() * 16 - 1 + 1) + 256;\n    this.setState({\n      osc3moogFilterBufferSize: osc3moogFilterBufferSize\n    });\n    this.props.changeOSC3moogFilterBufferSize(osc3moogFilterBufferSize);\n  }\n\n  updateOSC3moogFilterResonance(square7distance11FromOsc3) {\n    let osc3moogFilterResonance = Math.floor(square7distance11FromOsc3 * .004);\n    this.setState({\n      osc3moogFilterResonance: osc3moogFilterResonance\n    });\n    this.props.changeOSC3moogFilterResonance(osc3moogFilterResonance);\n  }\n\n  updateOSC3moogFilter2Bypass() {\n    this.props.toggleOSC3moogFilter2Bypass(!this.props.osc3moogFilter2Bypass);\n    console.log(this.props.osc3moogFilter2Bypass);\n  }\n\n  updateOSC3moogFilter2Cutoff(square8distance12FromOsc3) {\n    let osc3moogFilter2Cutoff = (1000 - square8distance12FromOsc3) * .001;\n    this.setState({\n      osc3moogFilter2Cutoff: osc3moogFilter2Cutoff\n    });\n    this.props.changeOSC3moogFilter2Cutoff(osc3moogFilter2Cutoff);\n  }\n\n  updateOSC3moogFilter2BufferSize(square8distance12FromOsc3) {\n    let osc3moogFilter2BufferSize = square8distance12FromOsc3 * Math.floor(Math.random() * 16 - 1 + 1) + 256;\n    this.setState({\n      osc3moogFilter2BufferSize: osc3moogFilter2BufferSize\n    });\n    this.props.changeOSC3moogFilter2BufferSize(osc3moogFilter2BufferSize);\n  }\n\n  updateOSC3moogFilter2Resonance(square8distance12FromOsc3) {\n    let osc3moogFilter2Resonance = Math.floor(square8distance12FromOsc3 * .004);\n    this.setState({\n      osc3moogFilter2Resonance: osc3moogFilter2Resonance\n    });\n    this.props.changeOSC3moogFilter2Resonance(osc3moogFilter2Resonance);\n  }\n\n  updateOSC3reverbBypass() {\n    this.props.toggleOSC3reverbBypass(!this.props.osc3reverbBypass);\n    console.log(this.props.osc3reverbBypass);\n  }\n\n  updateOSC3reverbLevel(square9distance13FromOsc3) {\n    let osc3reverbLevel = (1000 - square9distance13FromOsc3) * .001;\n    this.setState({\n      osc3reverbLevel: osc3reverbLevel\n    });\n    this.props.changeOSC3reverbLevel(osc3reverbLevel);\n  }\n\n  updateOSC3pannerBypass() {\n    this.props.toggleOSC3pannerBypass(!this.props.osc3pannerBypass);\n    console.log(this.props.osc3pannerBypass);\n  }\n\n  updateOSC3pannerPan(square10distance14FromOsc3) {\n    let osc3pannerPan = 1 - (1000 - square10distance14FromOsc3) * .002;\n    this.setState({\n      osc3pannerPan: osc3pannerPan\n    });\n    this.props.changeOSC3pannerPan(osc3pannerPan);\n  }\n\n  updateOSC3phaserBypass() {\n    this.props.toggleOSC3phaserBypass(!this.props.osc3phaserBypass);\n    console.log(this.props.osc3phaserBypass);\n  }\n\n  updateOSC3phaserRate(square11distance15FromOsc3) {\n    let osc3phaserRate = Math.floor(square11distance15FromOsc3 * .008);\n    this.setState({\n      osc3phaserRate: osc3phaserRate\n    });\n    this.props.changeOSC3phaserRate(osc3phaserRate);\n  }\n\n  updateOSC3phaserDepth(square11distance15FromOsc3) {\n    let osc3phaserDepth = (1000 - square11distance15FromOsc3) * .001;\n    this.setState({\n      osc3phaserDepth: osc3phaserDepth\n    });\n    this.props.changeOSC3phaserDepth(osc3phaserDepth);\n  }\n\n  updateOSC3phaserFeedback(square11distance15FromOsc3) {\n    let osc3phaserFeedback = square11distance15FromOsc3 * .001;\n    this.setState({\n      osc3phaserFeedback: osc3phaserFeedback\n    });\n    this.props.changeOSC3phaserFeedback(osc3phaserFeedback);\n  }\n\n  updateOSC3overdriveBypass() {\n    this.props.toggleOSC3overdriveBypass(!this.props.osc3overdriveBypass);\n    console.log(this.props.osc3overdriveBypass);\n  }\n\n  updateOSC3overdriveDrive(square12distance16FromOsc3) {\n    let osc3overdriveDrive = (1000 - square12distance16FromOsc3) * .001;\n    this.setState({\n      osc3overdriveDrive: osc3overdriveDrive\n    });\n    this.props.changeOSC3overdriveDrive(osc3overdriveDrive);\n  }\n\n  updateOSC3overdriveGain(square12distance16FromOsc3) {\n    let osc3overdriveGain = Math.floor(46 - (1000 - square12distance16FromOsc3) * .046) * -1;\n    this.setState({\n      osc3overdriveGain: osc3overdriveGain\n    });\n    this.props.changeOSC3overdriveGain(osc3overdriveGain);\n  } /////////OSC4 FUNCTIONS/////////////\n\n\n  updateFrequencyOSC4() {\n    let osc4Freq = this.state.circle4Pos[1] * Math.floor(Math.random() * 7 - 1 + 1) + 20;\n    this.props.changeOSC4Freq(osc4Freq);\n  }\n\n  turnOnLFO4() {\n    this.props.turnOnLFO4(!this.props.isLFO4On);\n    console.log(this.props.isLFO2On);\n  }\n\n  updateLFO4Type() {\n    let lfoWaveTypes = ['sine', 'square', 'triangle', 'sawtooth'];\n    let randomType = Math.floor(Math.random() * lfoWaveTypes.length);\n    this.setState({\n      lfo4Type: randomType\n    });\n    this.props.changeLFO4Type(randomType);\n  }\n\n  updateLFO4Freq(square1distance5FromOsc4) {\n    let lfo4Freq = Math.floor(square1distance5FromOsc4 * .002 * Math.floor(Math.random() * 12 - 1 + 1) + 1);\n    this.props.changeLFO4Freq(lfo4Freq);\n    console.log(lfo4Freq);\n  }\n\n  updateOSC4chorusBypass() {\n    this.props.toggleOSC4chorusBypass(!this.props.osc4chorusBypass);\n    console.log(this.props.osc4chorusBypass);\n  }\n\n  updateOSC4chorusDepth(square2distance6FromOsc4) {\n    let osc4chorusDepth = (1000 - square2distance6FromOsc4) * .001;\n    this.setState({\n      osc4chorusDepth: osc4chorusDepth\n    });\n    this.props.changeOSC4chorusDepth(osc4chorusDepth);\n  }\n\n  updateOSC4chorusRate(square2distanceFromOsc4) {\n    console.log(square2distanceFromOsc4);\n    let osc4chorusRate = Math.floor(square2distanceFromOsc4 * .008);\n    this.setState({\n      osc4chorusRate: osc4chorusRate\n    });\n    this.props.changeOSC4chorusRate(osc4chorusRate);\n  }\n\n  updateOSC4filterBypass() {\n    this.props.toggleOSC4filterBypass(!this.props.osc4filterBypass);\n    console.log(this.props.osc4filterBypass);\n  }\n\n  updateOSC4filterDepth(square3distance7FromOsc4) {\n    let osc4filterDepth = (1000 - square3distance7FromOsc4) * .001;\n    this.setState({\n      osc4filterDepth: osc4filterDepth\n    });\n    this.props.changeOSC4filterDepth(osc4filterDepth);\n  }\n\n  updateOSC4filterRate(square3distance7FromOsc4) {\n    let osc4filterRate = Math.floor(square3distance7FromOsc4 * .008);\n    this.setState({\n      osc4filterRate: osc4filterRate\n    });\n    this.props.changeOSC4filterRate(osc4filterRate);\n  }\n\n  updateOSC4filter2Bypass() {\n    this.props.toggleOSC4filter2Bypass(!this.props.osc4filter2Bypass);\n    console.log(this.props.osc4filter2Bypass);\n  }\n\n  updateOSC4filter2Depth(square4distance8FromOsc4) {\n    let osc4filter2Depth = Math.floor((1000 - square4distance8FromOsc4) * .008);\n    this.setState({\n      osc4filter2Depth: osc4filter2Depth\n    });\n    this.props.changeOSC4filter2Depth(osc4filter2Depth);\n  }\n\n  updateOSC4filter2Rate(square4distance8FromOsc4) {\n    let osc4filter2Rate = square4distance8FromOsc4 * .001;\n    this.setState({\n      osc4filter2Rate: osc4filter2Rate\n    });\n    this.props.changeOSC4filter2Rate(osc4filter2Rate);\n  }\n\n  updateOSC4tremoloBypass() {\n    console.log(this.props.osc4tremoloBypass);\n    this.props.toggleOSC4tremoloBypass(!this.props.osc4tremoloBypass);\n    console.log(this.props.osc4tremoloBypass);\n  }\n\n  updateOSC4tremoloIntensity(square5distance9FromOsc4) {\n    let osc4tremoloIntensity = (1000 - square5distance9FromOsc4) * .001;\n    this.setState({\n      osc4tremoloIntensity: osc4tremoloIntensity\n    });\n    this.props.changeOSC4tremoloIntensity(osc4tremoloIntensity);\n    console.log(osc4tremoloIntensity);\n  }\n\n  updateOSC4tremoloRate(square5distance9FromOsc4) {\n    let osc4tremoloRate = square5distance9FromOsc4 * .011;\n    this.setState({\n      osc4tremoloRate: osc4tremoloRate\n    });\n    this.props.changeOSC4tremoloRate(osc4tremoloRate);\n  }\n\n  updateOSC4bitcrusherBypass() {\n    this.props.toggleOSC4bitcrusherBypass(!this.props.osc4bitcrusherBypass);\n    console.log(this.props.osc4bitcrusherBypass);\n  }\n\n  updateOSC4bitcrusherBits(square6distance10FromOsc4) {\n    let osc4bitcrusherBits = Math.floor((1000 - square6distance10FromOsc4) * .016);\n    this.setState({\n      osc4bitcrusherBits: osc4bitcrusherBits\n    });\n    this.props.changeOSC4bitcrusherBits(osc4bitcrusherBits);\n  }\n\n  updateOSC4bitcrusherBufferSize(square6distance10FromOsc4) {\n    let osc4bitcrusherBufferSize = square6distance10FromOsc4 * Math.floor(Math.random() * 16 - 1 + 1) + 256;\n    this.setState({\n      osc4bitcrusherBufferSize: osc4bitcrusherBufferSize\n    });\n    this.props.changeOSC4bitcrusherBufferSize(osc4bitcrusherBufferSize);\n  }\n\n  updateOSC4moogFilterBypass() {\n    this.props.toggleOSC4moogFilterBypass(!this.props.osc4moogFilterBypass);\n    console.log(this.props.osc4moogFilterBypass);\n  }\n\n  updateOSC4moogFilterCutoff(square7distance11FromOsc4) {\n    let osc4moogFilterCutoff = (1000 - square7distance11FromOsc4) * .001;\n    this.setState({\n      osc4moogFilterCutoff: osc4moogFilterCutoff\n    });\n    this.props.changeOSC4moogFilterCutoff(osc4moogFilterCutoff);\n  }\n\n  updateOSC4moogFilterBufferSize(square7distance11FromOsc4) {\n    let osc4moogFilterBufferSize = square7distance11FromOsc4 * Math.floor(Math.random() * 16 - 1 + 1) + 256;\n    this.setState({\n      osc4moogFilterBufferSize: osc4moogFilterBufferSize\n    });\n    this.props.changeOSC4moogFilterBufferSize(osc4moogFilterBufferSize);\n  }\n\n  updateOSC4moogFilterResonance(square7distance11FromOsc4) {\n    let osc4moogFilterResonance = Math.floor(square7distance11FromOsc4 * .004);\n    this.setState({\n      osc4moogFilterResonance: osc4moogFilterResonance\n    });\n    this.props.changeOSC4moogFilterResonance(osc4moogFilterResonance);\n  }\n\n  updateOSC4moogFilter2Bypass() {\n    this.props.toggleOSC4moogFilter2Bypass(!this.props.osc4moogFilter2Bypass);\n    console.log(this.props.osc4moogFilter2Bypass);\n  }\n\n  updateOSC4moogFilter2Cutoff(square8distance12FromOsc4) {\n    let osc4moogFilter2Cutoff = (1000 - square8distance12FromOsc4) * .001;\n    this.setState({\n      osc4moogFilter2Cutoff: osc4moogFilter2Cutoff\n    });\n    this.props.changeOSC4moogFilter2Cutoff(osc4moogFilter2Cutoff);\n  }\n\n  updateOSC4moogFilter2BufferSize(square8distance12FromOsc4) {\n    let osc4moogFilter2BufferSize = square8distance12FromOsc4 * Math.floor(Math.random() * 16 - 1 + 1) + 256;\n    this.setState({\n      osc4moogFilter2BufferSize: osc4moogFilter2BufferSize\n    });\n    this.props.changeOSC4moogFilter2BufferSize(osc4moogFilter2BufferSize);\n  }\n\n  updateOSC4moogFilter2Resonance(square8distance12FromOsc4) {\n    let osc4moogFilter2Resonance = Math.floor(square8distance12FromOsc4 * .004);\n    this.setState({\n      osc4moogFilter2Resonance: osc4moogFilter2Resonance\n    });\n    this.props.changeOSC4moogFilter2Resonance(osc4moogFilter2Resonance);\n  }\n\n  updateOSC4reverbBypass() {\n    this.props.toggleOSC4reverbBypass(!this.props.osc4reverbBypass);\n    console.log(this.props.osc4reverbBypass);\n  }\n\n  updateOSC4reverbLevel(square9distance13FromOsc4) {\n    let osc4reverbLevel = (1000 - square9distance13FromOsc4) * .001;\n    this.setState({\n      osc4reverbLevel: osc4reverbLevel\n    });\n    this.props.changeOSC4reverbLevel(osc4reverbLevel);\n  }\n\n  updateOSC4pannerBypass() {\n    this.props.toggleOSC4pannerBypass(!this.props.osc4pannerBypass);\n    console.log(this.props.osc4pannerBypass);\n  }\n\n  updateOSC4pannerPan(square10distance14FromOsc4) {\n    let osc4pannerPan = 1 - (1000 - square10distance14FromOsc4) * .002;\n    this.setState({\n      osc4pannerPan: osc4pannerPan\n    });\n    this.props.changeOSC4pannerPan(osc4pannerPan);\n  }\n\n  updateOSC4phaserBypass() {\n    this.props.toggleOSC4phaserBypass(!this.props.osc4phaserBypass);\n    console.log(this.props.osc4phaserBypass);\n  }\n\n  updateOSC4phaserRate(square11distance15FromOsc4) {\n    let osc4phaserRate = Math.floor(square11distance15FromOsc4 * .008);\n    this.setState({\n      osc4phaserRate: osc4phaserRate\n    });\n    this.props.changeOSC4phaserRate(osc4phaserRate);\n  }\n\n  updateOSC4phaserDepth(square11distance15FromOsc4) {\n    let osc4phaserDepth = (1000 - square11distance15FromOsc4) * .001;\n    this.setState({\n      osc4phaserDepth: osc4phaserDepth\n    });\n    this.props.changeOSC4phaserDepth(osc4phaserDepth);\n  }\n\n  updateOSC4phaserFeedback(square11distance15FromOsc4) {\n    let osc4phaserFeedback = square11distance15FromOsc4 * .001;\n    this.setState({\n      osc4phaserFeedback: osc4phaserFeedback\n    });\n    this.props.changeOSC4phaserFeedback(osc4phaserFeedback);\n  }\n\n  updateOSC4overdriveBypass() {\n    this.props.toggleOSC4overdriveBypass(!this.props.osc4overdriveBypass);\n    console.log(this.props.osc4overdriveBypass);\n  }\n\n  updateOSC4overdriveDrive(square12distance16FromOsc4) {\n    let osc4overdriveDrive = (1000 - square12distance16FromOsc4) * .001;\n    this.setState({\n      osc4overdriveDrive: osc4overdriveDrive\n    });\n    this.props.changeOSC4overdriveDrive(osc4overdriveDrive);\n  }\n\n  updateOSC4overdriveGain(square12distance16FromOsc4) {\n    let osc4overdriveGain = Math.floor(46 - (1000 - square12distance16FromOsc4) * .046) * -1;\n    this.setState({\n      osc4overdriveGain: osc4overdriveGain\n    });\n    this.props.changeOSC4overdriveGain(osc4overdriveGain);\n  } // updateOsc1Overdrive() {\n  // let Osc1Overdrive = this.state.\n\n\n  render() {\n    const {\n      color,\n      width,\n      height\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3509,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: \"canvas\",\n      width: width,\n      height: height,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3511,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  console.log(state.oscFreq, state.osc2Freq);\n  return {\n    oscFreq: state.oscFreq,\n    isLFOOn: state.isLFOOn,\n    lfoFreq: state.lfoFreq,\n    lfoType: state.lfoType,\n    osc1chorusBypass: state.osc1chorusBypass,\n    osc1chorusDepth: state.osc1chorusDepth,\n    osc1chorusRate: state.osc1chorusRate,\n    osc1filterBypass: state.osc1filterBypass,\n    osc1filterRate: state.osc1filterRate,\n    osc1filterDepth: state.osc1filterDepth,\n    osc1filter2Bypass: state.osc1filter2Bypass,\n    osc1filter2Rate: state.osc1filter2Rate,\n    osc1filter2Depth: state.osc1filter2Depth,\n    osc1tremoloBypass: state.osc1tremoloBypass,\n    osc1tremoloIntensity: state.osc1tremoloIntensity,\n    osc1tremoloRate: state.osc1tremoloRate,\n    osc1bitcrusherBypass: state.osc1bitcrusherBypass,\n    osc1bitcrusherBits: state.osc1bitcrusherBits,\n    osc1bitcrusherBufferSize: state.osc1bitcrusherBufferSize,\n    osc1moogFilterBypass: state.osc1moogFilterBypass,\n    osc1moogFilterBufferSize: state.osc1moogFilterBufferSize,\n    osc1moogFilterCutoff: state.osc1moogFilterCutoff,\n    osc1moogFilterResonance: state.osc1moogFilterResonance,\n    osc1moogFilter2Bypass: state.osc1moogFilter2Bypass,\n    osc1moogFilter2BufferSize: state.osc1moogFilter2BufferSize,\n    osc1moogFilter2Cutoff: state.osc1moogFilter2Cutoff,\n    osc1moogFilter2Resonance: state.osc1moogFilter2Resonance,\n    osc1reverbBypass: state.osc1reverbBypass,\n    osc1reverbLevel: state.osc1reverbLevel,\n    osc1pannerBypass: state.osc1pannerBypass,\n    osc1pannerPan: state.osc1pannerPan,\n    osc1phaserBypass: state.osc1phaserBypass,\n    osc1phaserRate: state.osc1phaserRate,\n    osc1phaserDepth: state.osc1phaserDepth,\n    osc1phaserFeedback: state.osc1phaserFeedback,\n    osc1overdriveBypass: state.osc1overdriveBypass,\n    osc1overdriveDrive: state.osc1overdriveDrive,\n    osc1overdriveGain: state.osc1overdriveGain,\n    osc2Freq: state.osc2Freq,\n    isLFO2On: state.isLFO2On,\n    lfo2Freq: state.lfo2Freq,\n    lfo2Type: state.lfo2Type,\n    osc2chorusBypass: state.osc2chorusBypass,\n    osc2chorusDepth: state.osc2chorusDepth,\n    osc2chorusRate: state.osc2chorusRate,\n    osc2filterBypass: state.osc2filterBypass,\n    osc2filterRate: state.osc2filterRate,\n    osc2filterDepth: state.osc2filterDepth,\n    osc2filter2Bypass: state.osc2filter2Bypass,\n    osc2filter2Rate: state.osc2filter2Rate,\n    osc2filter2Depth: state.osc2filter2Depth,\n    osc2tremoloBypass: state.osc2tremoloBypass,\n    osc2tremoloIntensity: state.osc2tremoloIntensity,\n    osc2tremoloRate: state.osc2tremoloRate,\n    osc2bitcrusherBypass: state.osc2bitcrusherBypass,\n    osc2bitcrusherBits: state.osc2bitcrusherBits,\n    osc2bitcrusherBufferSize: state.osc2bitcrusherBufferSize,\n    osc2moogFilterBypass: state.osc2moogFilterBypass,\n    osc2moogFilterBufferSize: state.osc2moogFilterBufferSize,\n    osc2moogFilterCutoff: state.osc2moogFilterCutoff,\n    osc2moogFilterResonance: state.osc2moogFilterResonance,\n    osc2moogFilter2Bypass: state.osc2moogFilter2Bypass,\n    osc2moogFilter2BufferSize: state.osc2moogFilter2BufferSize,\n    osc2moogFilter2Cutoff: state.osc2moogFilter2Cutoff,\n    osc2moogFilter2Resonance: state.osc2moogFilter2Resonance,\n    osc2reverbBypass: state.osc2reverbBypass,\n    osc2reverbLevel: state.osc2reverbLevel,\n    osc2pannerBypass: state.osc2pannerBypass,\n    osc2pannerPan: state.osc2pannerPan,\n    osc2phaserBypass: state.osc2phaserBypass,\n    osc2phaserRate: state.osc2phaserRate,\n    osc2phaserDepth: state.osc2phaserDepth,\n    osc2phaserFeedback: state.osc2phaserFeedback,\n    osc2overdriveBypass: state.osc2overdriveBypass,\n    osc2overdriveDrive: state.osc2overdriveDrive,\n    osc2overdriveGain: state.osc2overdriveGain,\n    osc3Freq: state.osc3Freq,\n    isLFO3On: state.isLFO3On,\n    lfo3Freq: state.lfo3Freq,\n    lfo3Type: state.lfo3Type,\n    osc3chorusBypass: state.osc3chorusBypass,\n    osc3chorusDepth: state.osc3chorusDepth,\n    osc3chorusRate: state.osc3chorusRate,\n    osc3filterBypass: state.osc3filterBypass,\n    osc3filterRate: state.osc3filterRate,\n    osc3filterDepth: state.osc3filterDepth,\n    osc3filter2Bypass: state.osc3filter2Bypass,\n    osc3filter2Rate: state.osc3filter2Rate,\n    osc3filter2Depth: state.osc3filter2Depth,\n    osc3tremoloBypass: state.osc3tremoloBypass,\n    osc3tremoloIntensity: state.osc3tremoloIntensity,\n    osc3tremoloRate: state.osc3tremoloRate,\n    osc3bitcrusherBypass: state.osc3bitcrusherBypass,\n    osc3bitcrusherBits: state.osc3bitcrusherBits,\n    osc3bitcrusherBufferSize: state.osc3bitcrusherBufferSize,\n    osc3moogFilterBypass: state.osc3moogFilterBypass,\n    osc3moogFilterBufferSize: state.osc3moogFilterBufferSize,\n    osc3moogFilterCutoff: state.osc3moogFilterCutoff,\n    osc3moogFilterResonance: state.osc3moogFilterResonance,\n    osc3moogFilter2Bypass: state.osc3moogFilter2Bypass,\n    osc3moogFilter2BufferSize: state.osc3moogFilter2BufferSize,\n    osc3moogFilter2Cutoff: state.osc3moogFilter2Cutoff,\n    osc3moogFilter2Resonance: state.osc3moogFilter2Resonance,\n    osc3reverbBypass: state.osc3reverbBypass,\n    osc3reverbLevel: state.osc3reverbLevel,\n    osc3pannerBypass: state.osc3pannerBypass,\n    osc3pannerPan: state.osc3pannerPan,\n    osc3phaserBypass: state.osc3phaserBypass,\n    osc3phaserRate: state.osc3phaserRate,\n    osc3phaserDepth: state.osc3phaserDepth,\n    osc3phaserFeedback: state.osc3phaserFeedback,\n    osc3overdriveBypass: state.osc3overdriveBypass,\n    osc3overdriveDrive: state.osc3overdriveDrive,\n    osc3overdriveGain: state.osc3overdriveGain,\n    osc4Freq: state.osc4Freq,\n    isLFO4On: state.isLFO4On,\n    lfo4Freq: state.lfo4Freq,\n    lfo4Type: state.lfo4Type,\n    osc4chorusBypass: state.osc4chorusBypass,\n    osc4chorusDepth: state.osc4chorusDepth,\n    osc4chorusRate: state.osc4chorusRate,\n    osc4filterBypass: state.osc4filterBypass,\n    osc4filterRate: state.osc4filterRate,\n    osc4filterDepth: state.osc4filterDepth,\n    osc4filter2Bypass: state.osc4filter2Bypass,\n    osc4filter2Rate: state.osc4filter2Rate,\n    osc4filter2Depth: state.osc4filter2Depth,\n    osc4tremoloBypass: state.osc4tremoloBypass,\n    osc4tremoloIntensity: state.osc4tremoloIntensity,\n    osc4tremoloRate: state.osc4tremoloRate,\n    osc4bitcrusherBypass: state.osc4bitcrusherBypass,\n    osc4bitcrusherBits: state.osc4bitcrusherBits,\n    osc4bitcrusherBufferSize: state.osc4bitcrusherBufferSize,\n    osc4moogFilterBypass: state.osc4moogFilterBypass,\n    osc4moogFilterBufferSize: state.osc4moogFilterBufferSize,\n    osc4moogFilterCutoff: state.osc4moogFilterCutoff,\n    osc4moogFilterResonance: state.osc4moogFilterResonance,\n    osc4moogFilter2Bypass: state.osc4moogFilter2Bypass,\n    osc4moogFilter2BufferSize: state.osc4moogFilter2BufferSize,\n    osc4moogFilter2Cutoff: state.osc4moogFilter2Cutoff,\n    osc4moogFilter2Resonance: state.osc4moogFilter2Resonance,\n    osc4reverbBypass: state.osc4reverbBypass,\n    osc4reverbLevel: state.osc4reverbLevel,\n    osc4pannerBypass: state.osc4pannerBypass,\n    osc4pannerPan: state.osc4pannerPan,\n    osc4phaserBypass: state.osc4phaserBypass,\n    osc4phaserRate: state.osc4phaserRate,\n    osc4phaserDepth: state.osc4phaserDepth,\n    osc4phaserFeedback: state.osc4phaserFeedback,\n    osc4overdriveBypass: state.osc4overdriveBypass,\n    osc4overdriveDrive: state.osc4overdriveDrive,\n    osc4overdriveGain: state.osc4overdriveGain\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  console.log(dispatch);\n  return {\n    changeOSCFreq: value => dispatch(changeOSCFreq(value)),\n    turnOnLFO: () => dispatch(turnOnLFO()),\n    changeLFOType: wave => dispatch(changeLFOType(wave)),\n    changeLFOFreq: value => dispatch(changeLFOFreq(value)),\n    toggleOSC1chorusBypass: () => dispatch(toggleOSC1chorusBypass()),\n    changeOSC1chorusDepth: value => dispatch(changeOSC1chorusDepth(value)),\n    changeOSC1chorusRate: value => dispatch(changeOSC1chorusRate(value)),\n    toggleOSC1filterBypass: () => dispatch(toggleOSC1filterBypass()),\n    changeOSC1filterDepth: value => dispatch(changeOSC1filterDepth(value)),\n    changeOSC1filterRate: value => dispatch(changeOSC1filterRate(value)),\n    toggleOSC1filter2Bypass: () => dispatch(toggleOSC1filter2Bypass()),\n    changeOSC1filter2Depth: value => dispatch(changeOSC1filter2Depth(value)),\n    changeOSC1filter2Rate: value => dispatch(changeOSC1filter2Rate(value)),\n    toggleOSC1tremoloBypass: () => dispatch(toggleOSC1tremoloBypass()),\n    changeOSC1tremoloIntensity: value => dispatch(changeOSC1tremoloIntensity(value)),\n    changeOSC1tremoloRate: value => dispatch(changeOSC1tremoloRate(value)),\n    toggleOSC1bitcrusherBypass: () => dispatch(toggleOSC1bitcrusherBypass()),\n    changeOSC1bitcrusherBits: value => dispatch(changeOSC1bitcrusherBits(value)),\n    changeOSC1bitcrusherBufferSize: value => dispatch(changeOSC1bitcrusherBufferSize(value)),\n    toggleOSC1moogFilterBypass: () => dispatch(toggleOSC1moogFilterBypass()),\n    changeOSC1moogFilterCutoff: value => dispatch(changeOSC1moogFilterCutoff(value)),\n    changeOSC1moogFilterBufferSize: value => dispatch(changeOSC1moogFilterBufferSize(value)),\n    changeOSC1moogFilterResonance: value => dispatch(changeOSC1moogFilterResonance(value)),\n    toggleOSC1moogFilter2Bypass: () => dispatch(toggleOSC1moogFilter2Bypass()),\n    changeOSC1moogFilter2Cutoff: value => dispatch(changeOSC1moogFilter2Cutoff(value)),\n    changeOSC1moogFilter2BufferSize: value => dispatch(changeOSC1moogFilter2BufferSize(value)),\n    changeOSC1moogFilter2Resonance: value => dispatch(changeOSC1moogFilter2Resonance(value)),\n    toggleOSC1reverbBypass: () => dispatch(toggleOSC1reverbBypass()),\n    changeOSC1reverbLevel: value => dispatch(changeOSC1reverbLevel(value)),\n    toggleOSC1pannerBypass: () => dispatch(toggleOSC1pannerBypass()),\n    changeOSC1pannerPan: value => dispatch(changeOSC1pannerPan(value)),\n    toggleOSC1phaserBypass: () => dispatch(toggleOSC1phaserBypass()),\n    changeOSC1phaserRate: value => dispatch(changeOSC1phaserRate(value)),\n    changeOSC1phaserDepth: value => dispatch(changeOSC1phaserDepth(value)),\n    changeOSC1phaserFeedback: value => dispatch(changeOSC1phaserFeedback(value)),\n    toggleOSC1overdriveBypass: () => dispatch(toggleOSC1overdriveBypass()),\n    changeOSC1overdriveDrive: value => dispatch(changeOSC1overdriveDrive(value)),\n    changeOSC1overdriveGain: value => dispatch(changeOSC1overdriveGain(value)),\n    changeOSC2Freq: value => dispatch(changeOSC2Freq(value)),\n    turnOnLFO2: () => dispatch(turnOnLFO2()),\n    changeLFO2Type: wave => dispatch(changeLFO2Type(wave)),\n    changeLFO2Freq: value => dispatch(changeLFO2Freq(value)),\n    toggleOSC2chorusBypass: () => dispatch(toggleOSC2chorusBypass()),\n    changeOSC2chorusDepth: value => dispatch(changeOSC2chorusDepth(value)),\n    changeOSC2chorusRate: value => dispatch(changeOSC2chorusRate(value)),\n    toggleOSC2filterBypass: () => dispatch(toggleOSC2filterBypass()),\n    changeOSC2filterDepth: value => dispatch(changeOSC2filterDepth(value)),\n    changeOSC2filterRate: value => dispatch(changeOSC2filterRate(value)),\n    toggleOSC2filter2Bypass: () => dispatch(toggleOSC2filter2Bypass()),\n    changeOSC2filter2Depth: value => dispatch(changeOSC2filter2Depth(value)),\n    changeOSC2filter2Rate: value => dispatch(changeOSC2filter2Rate(value)),\n    toggleOSC2tremoloBypass: () => dispatch(toggleOSC2tremoloBypass()),\n    changeOSC2tremoloIntensity: value => dispatch(changeOSC2tremoloIntensity(value)),\n    changeOSC2tremoloRate: value => dispatch(changeOSC2tremoloRate(value)),\n    toggleOSC2bitcrusherBypass: () => dispatch(toggleOSC2bitcrusherBypass()),\n    changeOSC2bitcrusherBits: value => dispatch(changeOSC2bitcrusherBits(value)),\n    changeOSC2bitcrusherBufferSize: value => dispatch(changeOSC2bitcrusherBufferSize(value)),\n    toggleOSC2moogFilterBypass: () => dispatch(toggleOSC2moogFilterBypass()),\n    changeOSC2moogFilterCutoff: value => dispatch(changeOSC2moogFilterCutoff(value)),\n    changeOSC2moogFilterBufferSize: value => dispatch(changeOSC2moogFilterBufferSize(value)),\n    changeOSC2moogFilterResonance: value => dispatch(changeOSC2moogFilterResonance(value)),\n    toggleOSC2moogFilter2Bypass: () => dispatch(toggleOSC2moogFilter2Bypass()),\n    changeOSC2moogFilter2Cutoff: value => dispatch(changeOSC2moogFilter2Cutoff(value)),\n    changeOSC2moogFilter2BufferSize: value => dispatch(changeOSC2moogFilter2BufferSize(value)),\n    changeOSC2moogFilter2Resonance: value => dispatch(changeOSC2moogFilter2Resonance(value)),\n    toggleOSC2reverbBypass: () => dispatch(toggleOSC2reverbBypass()),\n    changeOSC2reverbLevel: value => dispatch(changeOSC2reverbLevel(value)),\n    toggleOSC2pannerBypass: () => dispatch(toggleOSC2pannerBypass()),\n    changeOSC2pannerPan: value => dispatch(changeOSC2pannerPan(value)),\n    toggleOSC2phaserBypass: () => dispatch(toggleOSC2phaserBypass()),\n    changeOSC2phaserRate: value => dispatch(changeOSC2phaserRate(value)),\n    changeOSC2phaserDepth: value => dispatch(changeOSC2phaserDepth(value)),\n    changeOSC2phaserFeedback: value => dispatch(changeOSC2phaserFeedback(value)),\n    toggleOSC2overdriveBypass: () => dispatch(toggleOSC2overdriveBypass()),\n    changeOSC2overdriveDrive: value => dispatch(changeOSC2overdriveDrive(value)),\n    changeOSC2overdriveGain: value => dispatch(changeOSC2overdriveGain(value)),\n    changeOSC3Freq: value => dispatch(changeOSC3Freq(value)),\n    turnOnLFO3: () => dispatch(turnOnLFO3()),\n    changeLFO3Type: wave => dispatch(changeLFO3Type(wave)),\n    changeLFO3Freq: value => dispatch(changeLFO3Freq(value)),\n    toggleOSC3chorusBypass: () => dispatch(toggleOSC3chorusBypass()),\n    changeOSC3chorusDepth: value => dispatch(changeOSC3chorusDepth(value)),\n    changeOSC3chorusRate: value => dispatch(changeOSC3chorusRate(value)),\n    toggleOSC3filterBypass: () => dispatch(toggleOSC3filterBypass()),\n    changeOSC3filterDepth: value => dispatch(changeOSC3filterDepth(value)),\n    changeOSC3filterRate: value => dispatch(changeOSC3filterRate(value)),\n    toggleOSC3filter2Bypass: () => dispatch(toggleOSC3filter2Bypass()),\n    changeOSC3filter2Depth: value => dispatch(changeOSC3filter2Depth(value)),\n    changeOSC3filter2Rate: value => dispatch(changeOSC3filter2Rate(value)),\n    toggleOSC3tremoloBypass: () => dispatch(toggleOSC3tremoloBypass()),\n    changeOSC3tremoloIntensity: value => dispatch(changeOSC3tremoloIntensity(value)),\n    changeOSC3tremoloRate: value => dispatch(changeOSC3tremoloRate(value)),\n    toggleOSC3bitcrusherBypass: () => dispatch(toggleOSC3bitcrusherBypass()),\n    changeOSC3bitcrusherBits: value => dispatch(changeOSC3bitcrusherBits(value)),\n    changeOSC3bitcrusherBufferSize: value => dispatch(changeOSC3bitcrusherBufferSize(value)),\n    toggleOSC3moogFilterBypass: () => dispatch(toggleOSC3moogFilterBypass()),\n    changeOSC3moogFilterCutoff: value => dispatch(changeOSC3moogFilterCutoff(value)),\n    changeOSC3moogFilterBufferSize: value => dispatch(changeOSC3moogFilterBufferSize(value)),\n    changeOSC3moogFilterResonance: value => dispatch(changeOSC3moogFilterResonance(value)),\n    toggleOSC3moogFilter2Bypass: () => dispatch(toggleOSC3moogFilter2Bypass()),\n    changeOSC3moogFilter2Cutoff: value => dispatch(changeOSC3moogFilter2Cutoff(value)),\n    changeOSC3moogFilter2BufferSize: value => dispatch(changeOSC3moogFilter2BufferSize(value)),\n    changeOSC3moogFilter2Resonance: value => dispatch(changeOSC3moogFilter2Resonance(value)),\n    toggleOSC3reverbBypass: () => dispatch(toggleOSC3reverbBypass()),\n    changeOSC3reverbLevel: value => dispatch(changeOSC3reverbLevel(value)),\n    toggleOSC3pannerBypass: () => dispatch(toggleOSC3pannerBypass()),\n    changeOSC3pannerPan: value => dispatch(changeOSC3pannerPan(value)),\n    toggleOSC3phaserBypass: () => dispatch(toggleOSC3phaserBypass()),\n    changeOSC3phaserRate: value => dispatch(changeOSC3phaserRate(value)),\n    changeOSC3phaserDepth: value => dispatch(changeOSC3phaserDepth(value)),\n    changeOSC3phaserFeedback: value => dispatch(changeOSC3phaserFeedback(value)),\n    toggleOSC3overdriveBypass: () => dispatch(toggleOSC3overdriveBypass()),\n    changeOSC3overdriveDrive: value => dispatch(changeOSC3overdriveDrive(value)),\n    changeOSC3overdriveGain: value => dispatch(changeOSC3overdriveGain(value)),\n    changeOSC4Freq: value => dispatch(changeOSC4Freq(value)),\n    turnOnLFO4: () => dispatch(turnOnLFO4()),\n    changeLFO4Type: wave => dispatch(changeLFO4Type(wave)),\n    changeLFO4Freq: value => dispatch(changeLFO4Freq(value)),\n    toggleOSC4chorusBypass: () => dispatch(toggleOSC4chorusBypass()),\n    changeOSC4chorusDepth: value => dispatch(changeOSC4chorusDepth(value)),\n    changeOSC4chorusRate: value => dispatch(changeOSC4chorusRate(value)),\n    toggleOSC4filterBypass: () => dispatch(toggleOSC4filterBypass()),\n    changeOSC4filterDepth: value => dispatch(changeOSC4filterDepth(value)),\n    changeOSC4filterRate: value => dispatch(changeOSC4filterRate(value)),\n    toggleOSC4filter2Bypass: () => dispatch(toggleOSC4filter2Bypass()),\n    changeOSC4filter2Depth: value => dispatch(changeOSC4filter2Depth(value)),\n    changeOSC4filter2Rate: value => dispatch(changeOSC4filter2Rate(value)),\n    toggleOSC4tremoloBypass: () => dispatch(toggleOSC4tremoloBypass()),\n    changeOSC4tremoloIntensity: value => dispatch(changeOSC4tremoloIntensity(value)),\n    changeOSC4tremoloRate: value => dispatch(changeOSC4tremoloRate(value)),\n    toggleOSC4bitcrusherBypass: () => dispatch(toggleOSC4bitcrusherBypass()),\n    changeOSC4bitcrusherBits: value => dispatch(changeOSC4bitcrusherBits(value)),\n    changeOSC4bitcrusherBufferSize: value => dispatch(changeOSC4bitcrusherBufferSize(value)),\n    toggleOSC4moogFilterBypass: () => dispatch(toggleOSC4moogFilterBypass()),\n    changeOSC4moogFilterCutoff: value => dispatch(changeOSC4moogFilterCutoff(value)),\n    changeOSC4moogFilterBufferSize: value => dispatch(changeOSC4moogFilterBufferSize(value)),\n    changeOSC4moogFilterResonance: value => dispatch(changeOSC4moogFilterResonance(value)),\n    toggleOSC4moogFilter2Bypass: () => dispatch(toggleOSC4moogFilter2Bypass()),\n    changeOSC4moogFilter2Cutoff: value => dispatch(changeOSC4moogFilter2Cutoff(value)),\n    changeOSC4moogFilter2BufferSize: value => dispatch(changeOSC4moogFilter2BufferSize(value)),\n    changeOSC4moogFilter2Resonance: value => dispatch(changeOSC4moogFilter2Resonance(value)),\n    toggleOSC4reverbBypass: () => dispatch(toggleOSC4reverbBypass()),\n    changeOSC4reverbLevel: value => dispatch(changeOSC4reverbLevel(value)),\n    toggleOSC4pannerBypass: () => dispatch(toggleOSC4pannerBypass()),\n    changeOSC4pannerPan: value => dispatch(changeOSC4pannerPan(value)),\n    toggleOSC4phaserBypass: () => dispatch(toggleOSC4phaserBypass()),\n    changeOSC4phaserRate: value => dispatch(changeOSC4phaserRate(value)),\n    changeOSC4phaserDepth: value => dispatch(changeOSC4phaserDepth(value)),\n    changeOSC4phaserFeedback: value => dispatch(changeOSC4phaserFeedback(value)),\n    toggleOSC4overdriveBypass: () => dispatch(toggleOSC4overdriveBypass()),\n    changeOSC4overdriveDrive: value => dispatch(changeOSC4overdriveDrive(value)),\n    changeOSC4overdriveGain: value => dispatch(changeOSC4overdriveGain(value))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(XYPad);","map":{"version":3,"sources":["/Users/Nanis/Flatiron/code/mod5/synth-builder/synth-builder/src/components/XYPad.js"],"names":["React","connect","d3","changeOSCFreq","turnOnLFO","changeLFOType","changeLFOFreq","toggleOSC1chorusBypass","changeOSC1chorusDepth","changeOSC1chorusRate","toggleOSC1filterBypass","changeOSC1filterDepth","changeOSC1filterRate","toggleOSC1filter2Bypass","changeOSC1filter2Depth","changeOSC1filter2Rate","toggleOSC1tremoloBypass","changeOSC1tremoloIntensity","changeOSC1tremoloRate","toggleOSC1bitcrusherBypass","changeOSC1bitcrusherBits","changeOSC1bitcrusherBufferSize","toggleOSC1moogFilterBypass","changeOSC1moogFilterCutoff","changeOSC1moogFilterBufferSize","changeOSC1moogFilterResonance","toggleOSC1moogFilter2Bypass","changeOSC1moogFilter2Cutoff","changeOSC1moogFilter2BufferSize","changeOSC1moogFilter2Resonance","toggleOSC1reverbBypass","changeOSC1reverbLevel","toggleOSC1pannerBypass","changeOSC1pannerPan","toggleOSC1phaserBypass","changeOSC1phaserRate","changeOSC1phaserDepth","changeOSC1phaserFeedback","toggleOSC1overdriveBypass","changeOSC1overdriveDrive","changeOSC1overdriveGain","changeOSC2Freq","turnOnLFO2","changeLFO2Type","changeLFO2Freq","toggleOSC2chorusBypass","changeOSC2chorusDepth","changeOSC2chorusRate","toggleOSC2filterBypass","changeOSC2filterDepth","changeOSC2filterRate","toggleOSC2filter2Bypass","changeOSC2filter2Depth","changeOSC2filter2Rate","toggleOSC2tremoloBypass","changeOSC2tremoloIntensity","changeOSC2tremoloRate","toggleOSC2bitcrusherBypass","changeOSC2bitcrusherBits","changeOSC2bitcrusherBufferSize","toggleOSC2moogFilterBypass","changeOSC2moogFilterCutoff","changeOSC2moogFilterBufferSize","changeOSC2moogFilterResonance","toggleOSC2moogFilter2Bypass","changeOSC2moogFilter2Cutoff","changeOSC2moogFilter2BufferSize","changeOSC2moogFilter2Resonance","toggleOSC2reverbBypass","changeOSC2reverbLevel","toggleOSC2pannerBypass","changeOSC2pannerPan","toggleOSC2phaserBypass","changeOSC2phaserRate","changeOSC2phaserDepth","changeOSC2phaserFeedback","toggleOSC2overdriveBypass","changeOSC2overdriveDrive","changeOSC2overdriveGain","changeOSC3Freq","turnOnLFO3","changeLFO3Type","changeLFO3Freq","toggleOSC3chorusBypass","changeOSC3chorusDepth","changeOSC3chorusRate","toggleOSC3filterBypass","changeOSC3filterDepth","changeOSC3filterRate","toggleOSC3filter2Bypass","changeOSC3filter2Depth","changeOSC3filter2Rate","toggleOSC3tremoloBypass","changeOSC3tremoloIntensity","changeOSC3tremoloRate","toggleOSC3bitcrusherBypass","changeOSC3bitcrusherBits","changeOSC3bitcrusherBufferSize","toggleOSC3moogFilterBypass","changeOSC3moogFilterCutoff","changeOSC3moogFilterBufferSize","changeOSC3moogFilterResonance","toggleOSC3moogFilter2Bypass","changeOSC3moogFilter2Cutoff","changeOSC3moogFilter2BufferSize","changeOSC3moogFilter2Resonance","toggleOSC3reverbBypass","changeOSC3reverbLevel","toggleOSC3pannerBypass","changeOSC3pannerPan","toggleOSC3phaserBypass","changeOSC3phaserRate","changeOSC3phaserDepth","changeOSC3phaserFeedback","toggleOSC3overdriveBypass","changeOSC3overdriveDrive","changeOSC3overdriveGain","changeOSC4Freq","turnOnLFO4","changeLFO4Type","changeLFO4Freq","toggleOSC4chorusBypass","changeOSC4chorusDepth","changeOSC4chorusRate","toggleOSC4filterBypass","changeOSC4filterDepth","changeOSC4filterRate","toggleOSC4filter2Bypass","changeOSC4filter2Depth","changeOSC4filter2Rate","toggleOSC4tremoloBypass","changeOSC4tremoloIntensity","changeOSC4tremoloRate","toggleOSC4bitcrusherBypass","changeOSC4bitcrusherBits","changeOSC4bitcrusherBufferSize","toggleOSC4moogFilterBypass","changeOSC4moogFilterCutoff","changeOSC4moogFilterBufferSize","changeOSC4moogFilterResonance","toggleOSC4moogFilter2Bypass","changeOSC4moogFilter2Cutoff","changeOSC4moogFilter2BufferSize","changeOSC4moogFilter2Resonance","toggleOSC4reverbBypass","changeOSC4reverbLevel","toggleOSC4pannerBypass","changeOSC4pannerPan","toggleOSC4phaserBypass","changeOSC4phaserRate","changeOSC4phaserDepth","changeOSC4phaserFeedback","toggleOSC4overdriveBypass","changeOSC4overdriveDrive","changeOSC4overdriveGain","XYPad","Component","constructor","props","console","log","width","circlePos1","Math","floor","random","height","circlePos2","circlePos3","circlePos4","squarePos1","squarePos2","squarePos3","squarePos4","squarePos5","squarePos6","squarePos7","squarePos8","squarePos9","squarePos10","squarePos11","squarePos12","squarePos13","squarePos14","squarePos15","squarePos16","square1distanceFromOsc1","sqrt","square1distanceFromOsc2","square1distanceFromOsc3","square1distanceFromOsc4","square2distanceFromOsc1","square2distanceFromOsc2","square2distanceFromOsc3","square2distanceFromOsc4","square3distanceFromOsc1","square3distanceFromOsc2","square3distanceFromOsc3","square3distanceFromOsc4","square4distanceFromOsc1","square4distanceFromOsc2","square4distanceFromOsc3","square4distanceFromOsc4","square5distanceFromOsc1","square5distanceFromOsc2","square5distanceFromOsc3","square5distanceFromOsc4","square6distanceFromOsc1","square6distanceFromOsc2","square6distanceFromOsc3","square6distanceFromOsc4","square7distanceFromOsc1","square7distanceFromOsc2","square7distanceFromOsc3","square7distanceFromOsc4","square8distanceFromOsc1","square8distanceFromOsc2","square8distanceFromOsc3","square8distanceFromOsc4","square9distanceFromOsc1","square9distanceFromOsc2","square9distanceFromOsc3","square9distanceFromOsc4","square10distanceFromOsc1","square10distanceFromOsc2","square10distanceFromOsc3","square10distanceFromOsc4","square11distanceFromOsc1","square11distanceFromOsc2","square11distanceFromOsc3","square11distanceFromOsc4","square12distanceFromOsc1","square12distanceFromOsc2","square12distanceFromOsc3","square12distanceFromOsc4","square13distanceFromOsc1","square13distanceFromOsc2","square13distanceFromOsc3","square13distanceFromOsc4","square14distanceFromOsc1","square14distanceFromOsc2","square14distanceFromOsc3","square14distanceFromOsc4","square15distanceFromOsc1","square15distanceFromOsc2","square15distanceFromOsc3","square15distanceFromOsc4","square16distanceFromOsc1","square16distanceFromOsc2","square16distanceFromOsc3","square16distanceFromOsc4","lfoWaveTypes","randomType","length","oscFreq","lfoFreq","lfoType","osc1chorusDepth","osc1chorusRate","osc1filterDepth","osc1filterRate","osc1filter2Rate","osc1filter2Depth","osc1tremoloIntensity","osc1tremoloRate","osc1bitcrusherBits","osc1bitcrusherBufferSize","osc1moogFilterBufferSize","osc1moogFilterCutoff","osc1moogFilterResonance","osc1moogFilter2BufferSize","osc1moogFilter2Cutoff","osc1moogFilter2Resonance","osc1reverbLevel","osc1pannerPan","osc1phaserDepth","osc1phaserRate","osc1phaserFeedback","osc1overdriveDrive","osc1overdriveGain","osc2Freq","lfo2Freq","lfo2Type","osc2chorusDepth","osc2chorusRate","osc2filterDepth","osc2filterRate","osc2filter2Rate","osc2filter2Depth","osc2tremoloIntensity","osc2tremoloRate","osc2bitcrusherBits","osc2bitcrusherBufferSize","osc2moogFilterBufferSize","osc2moogFilterCutoff","osc2moogFilterResonance","osc2moogFilter2BufferSize","osc2moogFilter2Cutoff","osc2moogFilter2Resonance","osc2reverbLevel","osc2pannerPan","osc2phaserDepth","osc2phaserRate","osc2phaserFeedback","osc2overdriveDrive","osc2overdriveGain","osc3Freq","lfo3Freq","lfo3Type","osc3chorusDepth","osc3chorusRate","osc3filterDepth","osc3filterRate","osc3filter2Rate","osc3filter2Depth","osc3tremoloIntensity","osc3tremoloRate","osc3bitcrusherBits","osc3bitcrusherBufferSize","osc3moogFilterBufferSize","osc3moogFilterCutoff","osc3moogFilterResonance","osc3moogFilter2BufferSize","osc3moogFilter2Cutoff","osc3moogFilter2Resonance","osc3reverbLevel","osc3pannerPan","osc3phaserDepth","osc3phaserRate","osc3phaserFeedback","osc3overdriveDrive","osc3overdriveGain","osc4Freq","lfo4Freq","lfo4Type","osc4chorusDepth","osc4chorusRate","osc4filterDepth","osc4filterRate","osc4filter2Rate","osc4filter2Depth","osc4tremoloIntensity","osc4tremoloRate","osc4bitcrusherBits","osc4bitcrusherBufferSize","osc4moogFilterBufferSize","osc4moogFilterCutoff","osc4moogFilterResonance","osc4moogFilter2BufferSize","osc4moogFilter2Cutoff","osc4moogFilter2Resonance","osc4reverbLevel","osc4pannerPan","osc4phaserDepth","osc4phaserRate","osc4phaserFeedback","osc4overdriveDrive","osc4overdriveGain","state","circle1Pos","prevCircle1Pos","oscFreqRange","start1Move","osc1Neighbors","circle2Pos","prevCircle2Pos","osc2FreqRange","start2Move","osc2Neighbors","circle3Pos","prevCircle3Pos","osc3FreqRange","start3Move","osc3Neighbors","circle4Pos","prevCircle4Pos","osc4FreqRange","start4Move","osc4Neighbors","square1Pos","prevSquare1Pos","start5Move","isLFOstarted","isLFO2started","isLFO3started","isLFO4started","square2Pos","prevSquare2Pos","start6Move","isOSC1chorusStarted","isOSC2chorusStarted","isOSC3chorusStarted","isOSC4chorusStarted","square3Pos","prevSquare3Pos","start7Move","isOSC1filterStarted","isOSC2filterStarted","isOSC3filterStarted","isOSC4filterStarted","square4Pos","prevSquare4Pos","start8Move","isOSC1filter2Started","isOSC2filter2Started","isOSC3filter2Started","isOSC4filter2Started","square5Pos","prevSquare5Pos","start9Move","isOSC1tremoloStarted","isOSC2tremoloStarted","isOSC3tremoloStarted","isOSC4tremoloStarted","square6Pos","prevSquare6Pos","start10Move","isOSC1bitcrusherStarted","isOSC2bitcrusherStarted","isOSC3bitcrusherStarted","isOSC4bitcrusherStarted","square7Pos","prevSquare7Pos","start11Move","isOSC1moogFilterStarted","isOSC2moogFilterStarted","isOSC3moogFilterStarted","isOSC4moogFilterStarted","square8Pos","prevSquare8Pos","start12Move","isOSC1moogFilter2Started","isOSC2moogFilter2Started","isOSC3moogFilter2Started","isOSC4moogFilter2Started","square9Pos","prevSquare9Pos","start13Move","isOSC1reverbStarted","isOSC2reverbStarted","isOSC3reverbStarted","isOSC4reverbStarted","square10Pos","prevSquare10Pos","start14Move","isOSC1pannerStarted","isOSC2pannerStarted","isOSC3pannerStarted","isOSC4pannerStarted","square11Pos","prevSquare11Pos","start15Move","isOSC1phaserStarted","isOSC2phaserStarted","isOSC3phaserStarted","isOSC4phaserStarted","square12Pos","prevSquare12Pos","start16Move","isOSC1overdriveStarted","isOSC2overdriveStarted","isOSC3overdriveStarted","isOSC4overdriveStarted","square13Pos","prevSquare13Pos","start17Move","square14Pos","prevSquare14Pos","start18Move","square15Pos","prevSquare15Pos","start19Move","square16Pos","prevSquare16Pos","start20Move","handleMouseEvent","bind","handleMouseDown","handleMouseUp","componentDidMount","document","addEventListener","rect","refs","canvas","getBoundingClientRect","canvasPos","left","top","ctx","getContext","fillStyle","color","beginPath","fillRect","drawLabel","updateCanvas","font","textAlign","fillText","round","rotate","arc","PI","closePath","points","delaunay","Delaunay","from","voronoi","render","strokeStyle","stroke","renderBounds","renderPoints","fill","neighbors","includes","setState","updateOSC1chorusBypass","updateOSC1filterBypass","updateOSC1filter2Bypass","updateOSC1tremoloBypass","updateOSC1bitcrusherBypass","updateOSC1moogFilterBypass","updateOSC1moogFilter2Bypass","updateOSC1reverbBypass","updateOSC1pannerBypass","updateOSC1phaserBypass","updateOSC1overdriveBypass","updateOSC2chorusBypass","updateOSC2filterBypass","updateOSC2filter2Bypass","updateOSC2tremoloBypass","updateOSC2bitcrusherBypass","updateOSC2moogFilterBypass","updateOSC2moogFilter2Bypass","updateOSC2reverbBypass","updateOSC2pannerBypass","updateOSC2phaserBypass","updateOSC2overdriveBypass","event","topRange1x","bottomRange1x","topRange1y","bottomRange1y","topRange2x","bottomRange2x","topRange2y","bottomRange2y","topRange3x","bottomRange3x","topRange3y","bottomRange3y","topRange4x","bottomRange4x","topRange4y","bottomRange4y","topRange5x","bottomRange5x","topRange5y","bottomRange5y","topRange6x","bottomRange6x","topRange6y","bottomRange6y","topRange7x","bottomRange7x","topRange7y","bottomRange7y","topRange8x","bottomRange8x","topRange8y","bottomRange8y","topRange9x","bottomRange9x","topRange9y","bottomRange9y","topRange10x","bottomRange10x","topRange10y","bottomRange10y","topRange11x","bottomRange11x","topRange11y","bottomRange11y","topRange12x","bottomRange12x","topRange12y","bottomRange12y","topRange13x","bottomRange13x","topRange13y","bottomRange13y","topRange14x","bottomRange14x","topRange14y","bottomRange14y","topRange15x","bottomRange15x","topRange15y","bottomRange15y","topRange16x","bottomRange16x","topRange16y","bottomRange16y","topRange17x","bottomRange17x","topRange17y","bottomRange17y","topRange18x","bottomRange18x","topRange18y","bottomRange18y","topRange19x","bottomRange19x","topRange19y","bottomRange19y","topRange20x","bottomRange20x","topRange20y","bottomRange20y","layerX","layerY","onmousemove","preventDefault","square1distance1FromOsc1","square2distance1FromOsc1","square3distance1FromOsc1","square4distance1FromOsc1","square5distance1FromOsc1","square6distance1FromOsc1","square7distance1FromOsc1","square8distance1FromOsc1","square9distance1FromOsc1","square10distance1FromOsc1","square11distance1FromOsc1","square12distance1FromOsc1","square13distance1FromOsc1","square14distance1FromOsc1","square15distance1FromOsc1","square16distance1FromOsc1","posX","posY","updateFrequencyOSC","square1distance2FromOsc2","square2distance2FromOsc2","square3distance2FromOsc2","square4distance2FromOsc2","square5distance2FromOsc2","square6distance2FromOsc2","square7distance2FromOsc2","square8distance2FromOsc2","square9distance2FromOsc2","square10distance2FromOsc2","square11distance2FromOsc2","square12distance2FromOsc2","square13distance2FromOsc2","square14distance2FromOsc2","square15distance2FromOsc2","square16distance2FromOsc2","updateFrequencyOSC2","square1distance3FromOsc3","square2distance3FromOsc3","square3distance3FromOsc3","square4distance3FromOsc3","square5distance3FromOsc3","square6distance3FromOsc3","square7distance3FromOsc3","square8distance3FromOsc3","square9distance3FromOsc3","square10distance3FromOsc3","square11distance3FromOsc3","square12distance3FromOsc3","square13distance3FromOsc3","square14distance3FromOsc3","square15distance3FromOsc3","square16distance3FromOsc3","updateFrequencyOSC3","square1distance4FromOsc4","square2distance4FromOsc4","square3distance4FromOsc4","square4distance4FromOsc4","square5distance4FromOsc4","square6distance4FromOsc4","square7distance4FromOsc4","square8distance4FromOsc4","square9distance4FromOsc4","square10distance4FromOsc4","square11distance4FromOsc4","square12distance4FromOsc4","square13distance4FromOsc4","square14distance4FromOsc4","square15distance4FromOsc4","square16distance4FromOsc4","updateFrequencyOSC4","square1distance5FromOsc1","square1distance5FromOsc2","square1distance5FromOsc3","square1distance5FromOsc4","updateLFOType","updateLFOFreq","updateLFO2Type","updateLFO2Freq","updateLFO3Type","updateLFO3Freq","updateLFO4Type","updateLFO4Freq","square2distance6FromOsc1","square2distance6FromOsc2","square2distance6FromOsc3","square2distance6FromOsc4","updateOSC1chorusDepth","updateOCS1chorusRate","updateOSC2chorusDepth","updateOCS2chorusRate","updateOSC3chorusDepth","updateOCS3chorusRate","updateOSC4chorusDepth","updateOCS4chorusRate","square3distance7FromOsc1","square3distance7FromOsc2","square3distance7FromOsc3","square3distance7FromOsc4","updateOSC1filterDepth","updateOSC1filterRate","updateOSC2filterDepth","updateOSC2filterRate","updateOSC3filterDepth","updateOSC3filterRate","updateOSC4filterDepth","updateOSC4filterRate","square4distance8FromOsc1","square4distance8FromOsc2","square4distance8FromOsc3","square4distance8FromOsc4","value","updateOSC1filter2Depth","updateOSC1filter2Rate","updateOSC2filter2Depth","updateOSC2filter2Rate","updateOSC3filter2Depth","updateOSC3filter2Rate","updateOSC4filter2Depth","updateOSC4filter2Rate","square5distance9FromOsc1","square5distance9FromOsc2","square5distance9FromOsc3","square5distance9FromOsc4","updateOSC1tremoloIntensity","updateOSC1tremoloRate","updateOSC2tremoloIntensity","updateOSC2tremoloRate","updateOSC3tremoloIntensity","updateOSC3tremoloRate","updateOSC4tremoloIntensity","updateOSC4tremoloRate","square6distance10FromOsc1","square6distance10FromOsc2","square6distance10FromOsc3","square6distance10FromOsc4","updateOSC1bitcrusherBits","updateOSC1bitcrusherBufferSize","updateOSC2bitcrusherBits","updateOSC2bitcrusherBufferSize","updateOSC3bitcrusherBits","updateOSC3bitcrusherBufferSize","updateOSC4bitcrusherBits","updateOSC4bitcrusherBufferSize","square7distance11FromOsc1","square7distance11FromOsc2","square7distance11FromOsc3","square7distance11FromOsc4","updateOSC1moogFilterCutoff","updateOSC1moogFilterBufferSize","updateOSC1moogFilterResonance","updateOSC2moogFilterCutoff","updateOSC2moogFilterBufferSize","updateOSC2moogFilterResonance","updateOSC3moogFilterCutoff","updateOSC3moogFilterBufferSize","updateOSC3moogFilterResonance","updateOSC4moogFilterCutoff","updateOSC4moogFilterBufferSize","updateOSC4moogFilterResonance","square8distance12FromOsc1","square8distance12FromOsc2","square8distance12FromOsc3","square8distance12FromOsc4","updateOSC1moogFilter2Cutoff","updateOSC1moogFilter2BufferSize","updateOSC1moogFilter2Resonance","updateOSC2moogFilter2Cutoff","updateOSC2moogFilter2BufferSize","updateOSC2moogFilter2Resonance","updateOSC3moogFilter2Cutoff","updateOSC3moogFilter2BufferSize","updateOSC3moogFilter2Resonance","updateOSC4moogFilter2Cutoff","updateOSC4moogFilter2BufferSize","updateOSC4moogFilter2Resonance","square9distance13FromOsc1","square9distance13FromOsc2","square9distance13FromOsc3","square9distance13FromOsc4","updateOSC1reverbLevel","updateOSC2reverbLevel","updateOSC3reverbLevel","updateOSC4reverbLevel","square10distance14FromOsc1","square10distance14FromOsc2","square10distance14FromOsc3","square10distance14FromOsc4","updateOSC1pannerPan","updateOSC2pannerPan","updateOSC3pannerPan","updateOSC4pannerPan","square11distance15FromOsc1","square11distance15FromOsc2","square11distance15FromOsc3","square11distance15FromOsc4","updateOSC1phaserDepth","updateOSC1phaserRate","updateOSC1phaserFeedback","updateOSC2phaserDepth","updateOSC2phaserRate","updateOSC2phaserFeedback","updateOSC3phaserDepth","updateOSC3phaserRate","updateOSC3phaserFeedback","updateOSC4phaserDepth","updateOSC4phaserRate","updateOSC4phaserFeedback","square12distance16FromOsc1","square12distance16FromOsc2","square12distance16FromOsc3","square12distance16FromOsc4","updateOSC1overdriveDrive","updateOSC1overdriveGain","updateOSC2overdriveDrive","updateOSC2overdriveGain","updateOSC3overdriveDrive","updateOSC3overdriveGain","updateOSC4overdriveDrive","updateOSC4overdriveGain","square13distance17FromOsc1","square13distance17FromOsc2","square13distance17FromOsc3","square13distance17FromOsc4","square14distance18FromOsc1","square14distance18FromOsc2","square14distance18FromOsc3","square14distance18FromOsc4","square15distance19FromOsc1","square15distance19FromOsc2","square15distance19FromOsc3","square15distance19FromOsc4","square16distance20FromOsc1","square16distance20FromOsc2","square16distance20FromOsc3","square16distance20FromOsc4","isLFOOn","anotherSquare1distance5FromOsc1","osc1chorusBypass","anotherSquare2distance6FromOsc1","updateOSC1chorusRate","osc1filterBypass","osc1filter2Bypass","osc1tremoloBypass","osc1bitcrusherBypass","osc1moogFilterBypass","osc1moogFilter2Bypass","osc1reverbBypass","osc1pannerBypass","osc1phaserBypass","osc1overdriveBypass","isLFO2On","anotherSquare1distance5FromOsc2","osc2chorusBypass","anotherSquare2distance6FromOsc2","updateOSC2chorusRate","anotherSquare2distanceFromOsc2","osc2filterBypass","osc2filter2Bypass","osc2tremoloBypass","osc2bitcrusherBypass","osc2moogFilterBypass","osc2moogFilter2Bypass","osc2reverbBypass","osc2pannerBypass","osc2phaserBypass","osc2overdriveBypass","isLFO3On","updateOSC3chorusBypass","osc3chorusBypass","updateOSC3chorusRate","updateOSC3filterBypass","osc3filterBypass","updateOSC3filter2Bypass","osc3filter2Bypass","updateOSC3tremoloBypass","osc3tremoloBypass","updateOSC3bitcrusherBypass","osc3bitcrusherBypass","updateOSC3moogFilterBypass","osc3moogFilterBypass","updateOSC3moogFilter2Bypass","osc3moogFilter2Bypass","updateOSC3reverbBypass","osc3reverbBypass","updateOSC3pannerBypass","osc3pannerBypass","updateOSC3phaserBypass","osc3phaserBypass","updateOSC3overdriveBypass","osc3overdriveBypass","isLFO4On","updateOSC4chorusBypass","osc4chorusBypass","updateOSC4chorusRate","updateOSC4filterBypass","osc4filterBypass","updateOSC4filter2Bypass","osc4filter2Bypass","updateOSC4tremoloBypass","osc4tremoloBypass","updateOSC4bitcrusherBypass","osc4bitcrusherBypass","updateOSC4moogFilterBypass","osc4moogFilterBypass","updateOSC4moogFilter2Bypass","osc4moogFilter2Bypass","updateOSC4reverbBypass","osc4reverbBypass","updateOSC4pannerBypass","osc4pannerBypass","updateOSC4phaserBypass","osc4phaserBypass","updateOSC4overdriveBypass","osc4overdriveBypass","mapStateToProps","mapDispatchToProps","dispatch","wave"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport '../index.css';\nimport * as d3 from 'd3-delaunay';\nimport { \n  changeOSCFreq, \n\n  turnOnLFO,\n  changeLFOType,\n  changeLFOFreq,\n\n  toggleOSC1chorusBypass,\n  changeOSC1chorusDepth,\n  changeOSC1chorusRate,\n\n  toggleOSC1filterBypass,\n  changeOSC1filterDepth,\n  changeOSC1filterRate,\n\n  toggleOSC1filter2Bypass,\n  changeOSC1filter2Depth,\n  changeOSC1filter2Rate,\n\n  toggleOSC1tremoloBypass,\n  changeOSC1tremoloIntensity,\n  changeOSC1tremoloRate,\n\n  toggleOSC1bitcrusherBypass,\n  changeOSC1bitcrusherBits,\n  changeOSC1bitcrusherBufferSize,\n\n  toggleOSC1moogFilterBypass,\n  changeOSC1moogFilterCutoff,\n  changeOSC1moogFilterBufferSize,\n  changeOSC1moogFilterResonance,\n\n  toggleOSC1moogFilter2Bypass,\n  changeOSC1moogFilter2Cutoff,\n  changeOSC1moogFilter2BufferSize,\n  changeOSC1moogFilter2Resonance,\n\n  toggleOSC1reverbBypass,\n  changeOSC1reverbLevel,\n\n  toggleOSC1pannerBypass,\n  changeOSC1pannerPan,\n\n  toggleOSC1phaserBypass,\n  changeOSC1phaserRate,\n  changeOSC1phaserDepth,\n  changeOSC1phaserFeedback,\n\n  toggleOSC1overdriveBypass,\n  changeOSC1overdriveDrive,\n  changeOSC1overdriveGain,\n\n ///OSC2/////////////////// \n  changeOSC2Freq, \n  \n  turnOnLFO2,\n  changeLFO2Type,\n  changeLFO2Freq,\n\n  toggleOSC2chorusBypass,\n  changeOSC2chorusDepth,\n  changeOSC2chorusRate,\n\n  toggleOSC2filterBypass,\n  changeOSC2filterDepth,\n  changeOSC2filterRate,\n\n  toggleOSC2filter2Bypass,\n  changeOSC2filter2Depth,\n  changeOSC2filter2Rate,\n\n  toggleOSC2tremoloBypass,\n  changeOSC2tremoloIntensity,\n  changeOSC2tremoloRate,\n\n  toggleOSC2bitcrusherBypass,\n  changeOSC2bitcrusherBits,\n  changeOSC2bitcrusherBufferSize,\n\n  toggleOSC2moogFilterBypass,\n  changeOSC2moogFilterCutoff,\n  changeOSC2moogFilterBufferSize,\n  changeOSC2moogFilterResonance,\n\n  toggleOSC2moogFilter2Bypass,\n  changeOSC2moogFilter2Cutoff,\n  changeOSC2moogFilter2BufferSize,\n  changeOSC2moogFilter2Resonance,\n\n  toggleOSC2reverbBypass,\n  changeOSC2reverbLevel,\n\n  toggleOSC2pannerBypass,\n  changeOSC2pannerPan,\n\n  toggleOSC2phaserBypass,\n  changeOSC2phaserRate,\n  changeOSC2phaserDepth,\n  changeOSC2phaserFeedback,\n\n  toggleOSC2overdriveBypass,\n  changeOSC2overdriveDrive,\n  changeOSC2overdriveGain,\n\n\n   ///OSC3/////////////////// \n  changeOSC3Freq, \n  \n  turnOnLFO3,\n  changeLFO3Type,\n  changeLFO3Freq,\n\n  toggleOSC3chorusBypass,\n  changeOSC3chorusDepth,\n  changeOSC3chorusRate,\n\n  toggleOSC3filterBypass,\n  changeOSC3filterDepth,\n  changeOSC3filterRate,\n\n  toggleOSC3filter2Bypass,\n  changeOSC3filter2Depth,\n  changeOSC3filter2Rate,\n\n  toggleOSC3tremoloBypass,\n  changeOSC3tremoloIntensity,\n  changeOSC3tremoloRate,\n\n  toggleOSC3bitcrusherBypass,\n  changeOSC3bitcrusherBits,\n  changeOSC3bitcrusherBufferSize,\n\n  toggleOSC3moogFilterBypass,\n  changeOSC3moogFilterCutoff,\n  changeOSC3moogFilterBufferSize,\n  changeOSC3moogFilterResonance,\n\n  toggleOSC3moogFilter2Bypass,\n  changeOSC3moogFilter2Cutoff,\n  changeOSC3moogFilter2BufferSize,\n  changeOSC3moogFilter2Resonance,\n\n  toggleOSC3reverbBypass,\n  changeOSC3reverbLevel,\n\n  toggleOSC3pannerBypass,\n  changeOSC3pannerPan,\n\n  toggleOSC3phaserBypass,\n  changeOSC3phaserRate,\n  changeOSC3phaserDepth,\n  changeOSC3phaserFeedback,\n\n  toggleOSC3overdriveBypass,\n  changeOSC3overdriveDrive,\n  changeOSC3overdriveGain,\n\n\n   ///OSC4/////////////////// \n  changeOSC4Freq, \n  \n  turnOnLFO4,\n  changeLFO4Type,\n  changeLFO4Freq,\n\n  toggleOSC4chorusBypass,\n  changeOSC4chorusDepth,\n  changeOSC4chorusRate,\n\n  toggleOSC4filterBypass,\n  changeOSC4filterDepth,\n  changeOSC4filterRate,\n\n  toggleOSC4filter2Bypass,\n  changeOSC4filter2Depth,\n  changeOSC4filter2Rate,\n\n  toggleOSC4tremoloBypass,\n  changeOSC4tremoloIntensity,\n  changeOSC4tremoloRate,\n\n  toggleOSC4bitcrusherBypass,\n  changeOSC4bitcrusherBits,\n  changeOSC4bitcrusherBufferSize,\n\n  toggleOSC4moogFilterBypass,\n  changeOSC4moogFilterCutoff,\n  changeOSC4moogFilterBufferSize,\n  changeOSC4moogFilterResonance,\n\n  toggleOSC4moogFilter2Bypass,\n  changeOSC4moogFilter2Cutoff,\n  changeOSC4moogFilter2BufferSize,\n  changeOSC4moogFilter2Resonance,\n\n  toggleOSC4reverbBypass,\n  changeOSC4reverbLevel,\n\n  toggleOSC4pannerBypass,\n  changeOSC4pannerPan,\n\n  toggleOSC4phaserBypass,\n  changeOSC4phaserRate,\n  changeOSC4phaserDepth,\n  changeOSC4phaserFeedback,\n\n  toggleOSC4overdriveBypass,\n  changeOSC4overdriveDrive,\n  changeOSC4overdriveGain,\n\n  \n} from './actions';\n\n\nclass XYPad extends React.Component {\n  constructor(props) {\n  \tsuper(props);\n    console.log(this.props.width)\n\n    let circlePos1 = [Math.floor(Math.random() * (this.props.width) - 1 + 1) + 1, Math.floor(Math.random() * (this.props.height) - 1 + 1) + 10];\n    let circlePos2 = [Math.floor(Math.random() * (this.props.width) - 1 + 1) + 1, Math.floor(Math.random() * (this.props.height) - 1 + 1) + 10];\n    let circlePos3 = [Math.floor(Math.random() * (this.props.width) - 1 + 1) + 1, Math.floor(Math.random() * (this.props.height) - 1 + 1) + 10];\n    let circlePos4 = [Math.floor(Math.random() * (this.props.width) - 1 + 1) + 1, Math.floor(Math.random() * (this.props.height) - 1 + 1) + 10];\n    let squarePos1 = [Math.floor(Math.random() * (this.props.width) - 1 + 1) + 1, Math.floor(Math.random() * (this.props.height) - 1 + 1) + 10];\n    let squarePos2 = [Math.floor(Math.random() * (this.props.width) - 1 + 1) + 1, Math.floor(Math.random() * (this.props.height) - 1 + 1) + 10];\n    let squarePos3 = [Math.floor(Math.random() * (this.props.width) - 1 + 1) + 1, Math.floor(Math.random() * (this.props.height) - 1 + 1) + 10];\n    let squarePos4 = [Math.floor(Math.random() * (this.props.width) - 1 + 1) + 1, Math.floor(Math.random() * (this.props.height) - 1 + 1) + 10];\n    let squarePos5 = [Math.floor(Math.random() * (this.props.width) - 1 + 1) + 1, Math.floor(Math.random() * (this.props.height) - 1 + 1) + 10];\n    let squarePos6 = [Math.floor(Math.random() * (this.props.width) - 1 + 1) + 1, Math.floor(Math.random() * (this.props.height) - 1 + 1) + 10];\n    let squarePos7 = [Math.floor(Math.random() * (this.props.width) - 1 + 1) + 1, Math.floor(Math.random() * (this.props.height) - 1 + 1) + 10];\n    let squarePos8 = [Math.floor(Math.random() * (this.props.width) - 1 + 1) + 1, Math.floor(Math.random() * (this.props.height) - 1 + 1) + 10];\n    let squarePos9 = [Math.floor(Math.random() * (this.props.width) - 1 + 1) + 1, Math.floor(Math.random() * (this.props.height) - 1 + 1) + 10];\n    let squarePos10 = [Math.floor(Math.random() * (this.props.width) - 1 + 1) + 1, Math.floor(Math.random() * (this.props.height) - 1 + 1) + 10];\n    let squarePos11 = [Math.floor(Math.random() * (this.props.width) - 1 + 1) + 1, Math.floor(Math.random() * (this.props.height) - 1 + 1) + 10];\n    let squarePos12 = [Math.floor(Math.random() * (this.props.width) - 1 + 1) + 1, Math.floor(Math.random() * (this.props.height) - 1 + 1) + 10];\n    let squarePos13 = [Math.floor(Math.random() * (this.props.width) - 1 + 1) + 1, Math.floor(Math.random() * (this.props.height) - 1 + 1) + 10];\n    let squarePos14 = [Math.floor(Math.random() * (this.props.width) - 1 + 1) + 1, Math.floor(Math.random() * (this.props.height) - 1 + 1) + 10];\n    let squarePos15 = [Math.floor(Math.random() * (this.props.width) - 1 + 1) + 1, Math.floor(Math.random() * (this.props.height) - 1 + 1) + 10];\n    let squarePos16 = [Math.floor(Math.random() * (this.props.width) - 1 + 1) + 1, Math.floor(Math.random() * (this.props.height) - 1 + 1) + 10];\n\n    let square1distanceFromOsc1 = Math.sqrt(((circlePos1[0] - squarePos1[0]) * (circlePos1[0] - squarePos1[0])) + ((circlePos1[1] - squarePos1[1]) * (circlePos1[1] - squarePos1[1])))\n    let square1distanceFromOsc2 = Math.sqrt(((circlePos2[0] - squarePos1[0]) * (circlePos2[0] - squarePos1[0])) + ((circlePos2[1] - squarePos1[1]) * (circlePos2[1] - squarePos1[1])))\n    let square1distanceFromOsc3 = Math.sqrt(((circlePos3[0] - squarePos1[0]) * (circlePos3[0] - squarePos1[0])) + ((circlePos3[1] - squarePos1[1]) * (circlePos3[1] - squarePos1[1])))\n    let square1distanceFromOsc4 = Math.sqrt(((circlePos4[0] - squarePos1[0]) * (circlePos4[0] - squarePos1[0])) + ((circlePos4[1] - squarePos1[1]) * (circlePos4[1] - squarePos1[1])))\n\n    let square2distanceFromOsc1 = Math.sqrt(((circlePos1[0] - squarePos2[0]) * (circlePos1[0] - squarePos2[0])) + ((circlePos1[1] - squarePos2[1]) * (circlePos1[1] - squarePos2[1])))\n    let square2distanceFromOsc2 = Math.sqrt(((circlePos2[0] - squarePos2[0]) * (circlePos2[0] - squarePos2[0])) + ((circlePos2[1] - squarePos2[1]) * (circlePos2[1] - squarePos2[1])))\n    let square2distanceFromOsc3 = Math.sqrt(((circlePos3[0] - squarePos2[0]) * (circlePos3[0] - squarePos2[0])) + ((circlePos3[1] - squarePos2[1]) * (circlePos3[1] - squarePos2[1])))\n    let square2distanceFromOsc4 = Math.sqrt(((circlePos4[0] - squarePos2[0]) * (circlePos4[0] - squarePos2[0])) + ((circlePos4[1] - squarePos2[1]) * (circlePos4[1] - squarePos2[1])))\n\n    let square3distanceFromOsc1 = Math.sqrt(((circlePos1[0] - squarePos3[0]) * (circlePos1[0] - squarePos3[0])) + ((circlePos1[1] - squarePos3[1]) * (circlePos1[1] - squarePos3[1])))\n    let square3distanceFromOsc2 = Math.sqrt(((circlePos2[0] - squarePos3[0]) * (circlePos2[0] - squarePos3[0])) + ((circlePos2[1] - squarePos3[1]) * (circlePos2[1] - squarePos3[1])))\n    let square3distanceFromOsc3 = Math.sqrt(((circlePos3[0] - squarePos3[0]) * (circlePos3[0] - squarePos3[0])) + ((circlePos3[1] - squarePos3[1]) * (circlePos3[1] - squarePos3[1])))\n    let square3distanceFromOsc4 = Math.sqrt(((circlePos4[0] - squarePos3[0]) * (circlePos4[0] - squarePos3[0])) + ((circlePos4[1] - squarePos3[1]) * (circlePos4[1] - squarePos3[1])))\n\n    let square4distanceFromOsc1 = Math.sqrt(((circlePos1[0] - squarePos4[0]) * (circlePos1[0] - squarePos4[0])) + ((circlePos1[1] - squarePos4[1]) * (circlePos1[1] - squarePos4[1])))\n    let square4distanceFromOsc2 = Math.sqrt(((circlePos2[0] - squarePos4[0]) * (circlePos2[0] - squarePos4[0])) + ((circlePos2[1] - squarePos4[1]) * (circlePos2[1] - squarePos4[1])))\n    let square4distanceFromOsc3 = Math.sqrt(((circlePos3[0] - squarePos4[0]) * (circlePos3[0] - squarePos4[0])) + ((circlePos3[1] - squarePos4[1]) * (circlePos3[1] - squarePos4[1])))\n    let square4distanceFromOsc4 = Math.sqrt(((circlePos4[0] - squarePos4[0]) * (circlePos4[0] - squarePos4[0])) + ((circlePos4[1] - squarePos4[1]) * (circlePos4[1] - squarePos4[1])))\n\n    let square5distanceFromOsc1 = Math.sqrt(((circlePos1[0] - squarePos5[0]) * (circlePos1[0] - squarePos5[0])) + ((circlePos1[1] - squarePos5[1]) * (circlePos1[1] - squarePos5[1])))\n    let square5distanceFromOsc2 = Math.sqrt(((circlePos2[0] - squarePos5[0]) * (circlePos2[0] - squarePos5[0])) + ((circlePos2[1] - squarePos5[1]) * (circlePos2[1] - squarePos5[1])))\n    let square5distanceFromOsc3 = Math.sqrt(((circlePos3[0] - squarePos5[0]) * (circlePos3[0] - squarePos5[0])) + ((circlePos3[1] - squarePos5[1]) * (circlePos3[1] - squarePos5[1])))\n    let square5distanceFromOsc4 = Math.sqrt(((circlePos4[0] - squarePos5[0]) * (circlePos4[0] - squarePos5[0])) + ((circlePos4[1] - squarePos5[1]) * (circlePos4[1] - squarePos5[1])))\n\n    let square6distanceFromOsc1 = Math.sqrt(((circlePos1[0] - squarePos6[0]) * (circlePos1[0] - squarePos6[0])) + ((circlePos1[1] - squarePos6[1]) * (circlePos1[1] - squarePos6[1])))\n    let square6distanceFromOsc2 = Math.sqrt(((circlePos2[0] - squarePos6[0]) * (circlePos2[0] - squarePos6[0])) + ((circlePos2[1] - squarePos6[1]) * (circlePos2[1] - squarePos6[1])))\n    let square6distanceFromOsc3 = Math.sqrt(((circlePos3[0] - squarePos6[0]) * (circlePos3[0] - squarePos6[0])) + ((circlePos3[1] - squarePos6[1]) * (circlePos3[1] - squarePos6[1])))\n    let square6distanceFromOsc4 = Math.sqrt(((circlePos4[0] - squarePos6[0]) * (circlePos4[0] - squarePos6[0])) + ((circlePos4[1] - squarePos6[1]) * (circlePos4[1] - squarePos6[1])))\n\n    let square7distanceFromOsc1 = Math.sqrt(((circlePos1[0] - squarePos7[0]) * (circlePos1[0] - squarePos7[0])) + ((circlePos1[1] - squarePos7[1]) * (circlePos1[1] - squarePos7[1])))\n    let square7distanceFromOsc2 = Math.sqrt(((circlePos2[0] - squarePos7[0]) * (circlePos2[0] - squarePos7[0])) + ((circlePos2[1] - squarePos7[1]) * (circlePos2[1] - squarePos7[1])))\n    let square7distanceFromOsc3 = Math.sqrt(((circlePos3[0] - squarePos7[0]) * (circlePos3[0] - squarePos7[0])) + ((circlePos3[1] - squarePos7[1]) * (circlePos3[1] - squarePos7[1])))\n    let square7distanceFromOsc4 = Math.sqrt(((circlePos4[0] - squarePos7[0]) * (circlePos4[0] - squarePos7[0])) + ((circlePos4[1] - squarePos7[1]) * (circlePos4[1] - squarePos7[1])))\n\n    let square8distanceFromOsc1 = Math.sqrt(((circlePos1[0] - squarePos8[0]) * (circlePos1[0] - squarePos8[0])) + ((circlePos1[1] - squarePos8[1]) * (circlePos1[1] - squarePos8[1])))\n    let square8distanceFromOsc2 = Math.sqrt(((circlePos2[0] - squarePos8[0]) * (circlePos2[0] - squarePos8[0])) + ((circlePos2[1] - squarePos8[1]) * (circlePos2[1] - squarePos8[1])))\n    let square8distanceFromOsc3 = Math.sqrt(((circlePos3[0] - squarePos8[0]) * (circlePos3[0] - squarePos8[0])) + ((circlePos3[1] - squarePos8[1]) * (circlePos3[1] - squarePos8[1])))\n    let square8distanceFromOsc4 = Math.sqrt(((circlePos4[0] - squarePos8[0]) * (circlePos4[0] - squarePos8[0])) + ((circlePos4[1] - squarePos8[1]) * (circlePos4[1] - squarePos8[1])))\n\n    let square9distanceFromOsc1 = Math.sqrt(((circlePos1[0] - squarePos9[0]) * (circlePos1[0] - squarePos9[0])) + ((circlePos1[1] - squarePos9[1]) * (circlePos1[1] - squarePos9[1])))\n    let square9distanceFromOsc2 = Math.sqrt(((circlePos2[0] - squarePos9[0]) * (circlePos2[0] - squarePos9[0])) + ((circlePos2[1] - squarePos9[1]) * (circlePos2[1] - squarePos9[1])))\n    let square9distanceFromOsc3 = Math.sqrt(((circlePos3[0] - squarePos9[0]) * (circlePos3[0] - squarePos9[0])) + ((circlePos3[1] - squarePos9[1]) * (circlePos3[1] - squarePos9[1])))\n    let square9distanceFromOsc4 = Math.sqrt(((circlePos4[0] - squarePos9[0]) * (circlePos4[0] - squarePos9[0])) + ((circlePos4[1] - squarePos9[1]) * (circlePos4[1] - squarePos9[1])))\n\n    let square10distanceFromOsc1 = Math.sqrt(((circlePos1[0] - squarePos10[0]) * (circlePos1[0] - squarePos10[0])) + ((circlePos1[1] - squarePos10[1]) * (circlePos1[1] - squarePos10[1])))\n    let square10distanceFromOsc2 = Math.sqrt(((circlePos2[0] - squarePos10[0]) * (circlePos2[0] - squarePos10[0])) + ((circlePos2[1] - squarePos10[1]) * (circlePos2[1] - squarePos10[1])))\n    let square10distanceFromOsc3 = Math.sqrt(((circlePos3[0] - squarePos10[0]) * (circlePos3[0] - squarePos10[0])) + ((circlePos3[1] - squarePos10[1]) * (circlePos3[1] - squarePos10[1])))\n    let square10distanceFromOsc4 = Math.sqrt(((circlePos4[0] - squarePos10[0]) * (circlePos4[0] - squarePos10[0])) + ((circlePos4[1] - squarePos10[1]) * (circlePos4[1] - squarePos10[1])))\n\n    let square11distanceFromOsc1 = Math.sqrt(((circlePos1[0] - squarePos11[0]) * (circlePos1[0] - squarePos11[0])) + ((circlePos1[1] - squarePos11[1]) * (circlePos1[1] - squarePos11[1])))\n    let square11distanceFromOsc2 = Math.sqrt(((circlePos2[0] - squarePos11[0]) * (circlePos2[0] - squarePos11[0])) + ((circlePos2[1] - squarePos11[1]) * (circlePos2[1] - squarePos11[1])))\n    let square11distanceFromOsc3 = Math.sqrt(((circlePos3[0] - squarePos11[0]) * (circlePos3[0] - squarePos11[0])) + ((circlePos3[1] - squarePos11[1]) * (circlePos3[1] - squarePos11[1])))\n    let square11distanceFromOsc4 = Math.sqrt(((circlePos4[0] - squarePos11[0]) * (circlePos4[0] - squarePos11[0])) + ((circlePos4[1] - squarePos11[1]) * (circlePos4[1] - squarePos11[1])))\n\n    let square12distanceFromOsc1 = Math.sqrt(((circlePos1[0] - squarePos12[0]) * (circlePos1[0] - squarePos12[0])) + ((circlePos1[1] - squarePos12[1]) * (circlePos1[1] - squarePos12[1])))\n    let square12distanceFromOsc2 = Math.sqrt(((circlePos2[0] - squarePos12[0]) * (circlePos2[0] - squarePos12[0])) + ((circlePos2[1] - squarePos12[1]) * (circlePos2[1] - squarePos12[1])))\n    let square12distanceFromOsc3 = Math.sqrt(((circlePos3[0] - squarePos12[0]) * (circlePos3[0] - squarePos12[0])) + ((circlePos3[1] - squarePos12[1]) * (circlePos3[1] - squarePos12[1])))\n    let square12distanceFromOsc4 = Math.sqrt(((circlePos4[0] - squarePos12[0]) * (circlePos4[0] - squarePos12[0])) + ((circlePos4[1] - squarePos12[1]) * (circlePos4[1] - squarePos12[1])))\n\n    let square13distanceFromOsc1 = Math.sqrt(((circlePos1[0] - squarePos13[0]) * (circlePos1[0] - squarePos13[0])) + ((circlePos1[1] - squarePos13[1]) * (circlePos1[1] - squarePos14[1])))\n    let square13distanceFromOsc2 = Math.sqrt(((circlePos2[0] - squarePos13[0]) * (circlePos2[0] - squarePos13[0])) + ((circlePos2[1] - squarePos13[1]) * (circlePos2[1] - squarePos14[1])))\n    let square13distanceFromOsc3 = Math.sqrt(((circlePos3[0] - squarePos13[0]) * (circlePos3[0] - squarePos13[0])) + ((circlePos3[1] - squarePos13[1]) * (circlePos3[1] - squarePos14[1])))\n    let square13distanceFromOsc4 = Math.sqrt(((circlePos4[0] - squarePos13[0]) * (circlePos4[0] - squarePos13[0])) + ((circlePos4[1] - squarePos13[1]) * (circlePos4[1] - squarePos14[1])))\n\n    let square14distanceFromOsc1 = Math.sqrt(((circlePos1[0] - squarePos14[0]) * (circlePos1[0] - squarePos14[0])) + ((circlePos1[1] - squarePos14[1]) * (circlePos1[1] - squarePos14[1])))\n    let square14distanceFromOsc2 = Math.sqrt(((circlePos2[0] - squarePos14[0]) * (circlePos2[0] - squarePos14[0])) + ((circlePos2[1] - squarePos14[1]) * (circlePos2[1] - squarePos14[1])))\n    let square14distanceFromOsc3 = Math.sqrt(((circlePos3[0] - squarePos14[0]) * (circlePos3[0] - squarePos14[0])) + ((circlePos3[1] - squarePos14[1]) * (circlePos3[1] - squarePos14[1])))\n    let square14distanceFromOsc4 = Math.sqrt(((circlePos4[0] - squarePos14[0]) * (circlePos4[0] - squarePos14[0])) + ((circlePos4[1] - squarePos14[1]) * (circlePos4[1] - squarePos14[1])))\n\n    let square15distanceFromOsc1 = Math.sqrt(((circlePos1[0] - squarePos15[0]) * (circlePos1[0] - squarePos15[0])) + ((circlePos1[1] - squarePos15[1]) * (circlePos1[1] - squarePos15[1])))\n    let square15distanceFromOsc2 = Math.sqrt(((circlePos2[0] - squarePos15[0]) * (circlePos2[0] - squarePos15[0])) + ((circlePos2[1] - squarePos15[1]) * (circlePos2[1] - squarePos15[1])))\n    let square15distanceFromOsc3 = Math.sqrt(((circlePos3[0] - squarePos15[0]) * (circlePos3[0] - squarePos15[0])) + ((circlePos3[1] - squarePos15[1]) * (circlePos3[1] - squarePos15[1])))\n    let square15distanceFromOsc4 = Math.sqrt(((circlePos4[0] - squarePos15[0]) * (circlePos4[0] - squarePos15[0])) + ((circlePos4[1] - squarePos15[1]) * (circlePos4[1] - squarePos15[1])))\n\n    let square16distanceFromOsc1 = Math.sqrt(((circlePos1[0] - squarePos16[0]) * (circlePos1[0] - squarePos16[0])) + ((circlePos1[1] - squarePos16[1]) * (circlePos1[1] - squarePos16[1])))\n    let square16distanceFromOsc2 = Math.sqrt(((circlePos2[0] - squarePos16[0]) * (circlePos2[0] - squarePos16[0])) + ((circlePos2[1] - squarePos16[1]) * (circlePos2[1] - squarePos16[1])))\n    let square16distanceFromOsc3 = Math.sqrt(((circlePos3[0] - squarePos16[0]) * (circlePos3[0] - squarePos16[0])) + ((circlePos3[1] - squarePos16[1]) * (circlePos3[1] - squarePos16[1])))\n    let square16distanceFromOsc4 = Math.sqrt(((circlePos4[0] - squarePos16[0]) * (circlePos4[0] - squarePos16[0])) + ((circlePos4[1] - squarePos16[1]) * (circlePos4[1] - squarePos16[1])))\n    \n\n    console.log(square1distanceFromOsc1)\n    console.log(square2distanceFromOsc1)\n    console.log(square3distanceFromOsc1)\n    console.log(square4distanceFromOsc1)\n    console.log(square5distanceFromOsc1)\n    console.log(square6distanceFromOsc1)\n    console.log(square7distanceFromOsc1)\n    console.log(square8distanceFromOsc1)\n    console.log(square9distanceFromOsc1)\n    console.log(square10distanceFromOsc1)\n    console.log(square11distanceFromOsc1)\n    console.log(square12distanceFromOsc1)\n    console.log(square13distanceFromOsc1)\n    console.log(square14distanceFromOsc1)\n    console.log(square15distanceFromOsc1)\n    console.log(square16distanceFromOsc1)\n\n  let lfoWaveTypes = ['sine', 'square', 'triangle', 'sawtooth']\n  let randomType = Math.floor(Math.random()*lfoWaveTypes.length)\n\n/////OSC 1 SETTINGS/////////////////////\n    let oscFreq = circlePos1[1] * Math.floor(Math.random() * (7) - 1 + 1) + 20\n\n    let lfoFreq = Math.floor((square1distanceFromOsc1 * .002) * Math.floor(Math.random() * (12) - 1 + 1) + 1)\n    let lfoType = lfoWaveTypes[randomType]\n  \n    \n    let osc1chorusDepth = (1000 - square2distanceFromOsc1) * .001\n    let osc1chorusRate = Math.floor(square2distanceFromOsc1 * .008)\n    \n    let osc1filterDepth = (1000 - square3distanceFromOsc1) * .001\n    let osc1filterRate = Math.floor(square3distanceFromOsc1 * .008)\n\n    let osc1filter2Rate = square4distanceFromOsc1 * .001\n    let osc1filter2Depth = Math.floor((1000 - square4distanceFromOsc1) * .008)\n\n    let osc1tremoloIntensity = (1000 - square5distanceFromOsc1) * .001\n    let osc1tremoloRate = square5distanceFromOsc1 * .011\n\n    let osc1bitcrusherBits = Math.floor((1000 - square6distanceFromOsc1) * .016)\n    let osc1bitcrusherBufferSize = square6distanceFromOsc1 * Math.floor(Math.random() * (16) -1 + 1) + 256\n\n    let osc1moogFilterBufferSize = square7distanceFromOsc1 * Math.floor(Math.random() * (16) -1 + 1) + 256\n    let osc1moogFilterCutoff = (1000 - square7distanceFromOsc1) * .001\n    let osc1moogFilterResonance = Math.floor(square7distanceFromOsc1 * .004)\n\n    let osc1moogFilter2BufferSize = square8distanceFromOsc1 * Math.floor(Math.random() * (16) -1 + 1) + 256\n    let osc1moogFilter2Cutoff = square8distanceFromOsc1 * .001\n    let osc1moogFilter2Resonance = Math.floor((1000 - square8distanceFromOsc1) * .004)\n\n    let osc1reverbLevel = (1000 - square9distanceFromOsc1) * .001\n\n    let osc1pannerPan = 1 - ((1000 - square10distanceFromOsc1) * .002)\n\n    let osc1phaserDepth = (1000 - square11distanceFromOsc1) * .001\n    let osc1phaserRate = Math.floor(square11distanceFromOsc1 * .008)\n    let osc1phaserFeedback = square11distanceFromOsc1 * .001\n\n    let osc1overdriveDrive = (1000 - square12distanceFromOsc1) * .001\n    let osc1overdriveGain = Math.floor(46 - ((1000 - square12distanceFromOsc1) * .046)) * -1\n    \n    \n    \n\n\n    \n\n\n\n/////OSC 2 SETTINGS/////////////////////\n    let osc2Freq = circlePos2[1] * Math.floor(Math.random() * (7.5) - 1 + 1) + 20\n\n    let lfo2Freq = Math.floor((square1distanceFromOsc2 * .002) * Math.floor(Math.random() * (12) - 1 + 1) + 1)\n    let lfo2Type = lfoWaveTypes[randomType]\n  \n    \n    let osc2chorusDepth = (1000 - square2distanceFromOsc2) * .001\n    let osc2chorusRate = Math.floor(square2distanceFromOsc2 * .008)\n    \n    let osc2filterDepth = (1000 - square3distanceFromOsc2) * .001\n    let osc2filterRate = Math.floor(square3distanceFromOsc2 * .008)\n\n    let osc2filter2Rate = square4distanceFromOsc2 * .001\n    let osc2filter2Depth = Math.floor((1000 - square4distanceFromOsc2) * .008)\n\n    let osc2tremoloIntensity = (1000 - square5distanceFromOsc2) * .001\n    let osc2tremoloRate = square5distanceFromOsc2 * .011\n\n    let osc2bitcrusherBits = Math.floor((1000 - square6distanceFromOsc2) * .016)\n    let osc2bitcrusherBufferSize = square6distanceFromOsc2 * Math.floor(Math.random() * (16) -1 + 1) + 256\n\n    let osc2moogFilterBufferSize = square7distanceFromOsc2 * Math.floor(Math.random() * (16) -1 + 1) + 256\n    let osc2moogFilterCutoff = (1000 - square7distanceFromOsc2) * .001\n    let osc2moogFilterResonance = Math.floor(square7distanceFromOsc2 * .004)\n\n    let osc2moogFilter2BufferSize = square8distanceFromOsc2 * Math.floor(Math.random() * (16) -1 + 1) + 256\n    let osc2moogFilter2Cutoff = square8distanceFromOsc2 * .001\n    let osc2moogFilter2Resonance = Math.floor((1000 - square8distanceFromOsc2) * .004)\n\n    let osc2reverbLevel = (1000 - square9distanceFromOsc2) * .001\n\n    let osc2pannerPan = 1 - ((1000 - square10distanceFromOsc2) * .002)\n\n    let osc2phaserDepth = (1000 - square11distanceFromOsc2) * .001\n    let osc2phaserRate = Math.floor(square11distanceFromOsc2 * .008)\n    let osc2phaserFeedback = square11distanceFromOsc2 * .001\n\n    let osc2overdriveDrive = (1000 - square12distanceFromOsc2) * .001\n    let osc2overdriveGain = Math.floor(46 - ((1000 - square12distanceFromOsc2) * .046)) * -1\n    \n\n\n\n/////OSC 3 SETTINGS/////////////////////\n    let osc3Freq = circlePos3[1] * Math.floor(Math.random() * (8) - 1 + 1) + 20\n\n    let lfo3Freq = Math.floor((square1distanceFromOsc3 * .002) * Math.floor(Math.random() * (12) - 1 + 1) + 1)\n    let lfo3Type = lfoWaveTypes[randomType]\n  \n    \n    let osc3chorusDepth = (1000 - square2distanceFromOsc3) * .001\n    let osc3chorusRate = Math.floor(square2distanceFromOsc3 * .008)\n    \n    let osc3filterDepth = (1000 - square3distanceFromOsc3) * .001\n    let osc3filterRate = Math.floor(square3distanceFromOsc3 * .008)\n\n    let osc3filter2Rate = square4distanceFromOsc3 * .001\n    let osc3filter2Depth = Math.floor((1000 - square4distanceFromOsc3) * .008)\n\n    let osc3tremoloIntensity = (1000 - square5distanceFromOsc3) * .001\n    let osc3tremoloRate = square5distanceFromOsc3 * .011\n\n    let osc3bitcrusherBits = Math.floor((1000 - square6distanceFromOsc3) * .016)\n    let osc3bitcrusherBufferSize = square6distanceFromOsc3 * Math.floor(Math.random() * (16) -1 + 1) + 256\n\n    let osc3moogFilterBufferSize = square7distanceFromOsc3 * Math.floor(Math.random() * (16) -1 + 1) + 256\n    let osc3moogFilterCutoff = (1000 - square7distanceFromOsc3) * .001\n    let osc3moogFilterResonance = Math.floor(square7distanceFromOsc3 * .004)\n\n    let osc3moogFilter2BufferSize = square8distanceFromOsc3 * Math.floor(Math.random() * (16) -1 + 1) + 256\n    let osc3moogFilter2Cutoff = square8distanceFromOsc3 * .001\n    let osc3moogFilter2Resonance = Math.floor((1000 - square8distanceFromOsc3) * .004)\n\n    let osc3reverbLevel = (1000 - square9distanceFromOsc3) * .001\n\n    let osc3pannerPan = 1 - ((1000 - square10distanceFromOsc3) * .002)\n\n    let osc3phaserDepth = (1000 - square11distanceFromOsc3) * .001\n    let osc3phaserRate = Math.floor(square11distanceFromOsc3 * .008)\n    let osc3phaserFeedback = square11distanceFromOsc3 * .001\n\n    let osc3overdriveDrive = (1000 - square12distanceFromOsc3) * .001\n    let osc3overdriveGain = Math.floor(46 - ((1000 - square12distanceFromOsc3) * .046)) * -1\n    \n\n\n\n/////OSC 4 SETTINGS/////////////////////\n    let osc4Freq = circlePos4[1] * Math.floor(Math.random() * (9.5) - 1 + 1) + 20\n    \n    let lfo4Freq = Math.floor((square1distanceFromOsc4 * .002) * Math.floor(Math.random() * (12) - 1 + 1) + 1)\n    let lfo4Type = lfoWaveTypes[randomType]\n  \n    \n    let osc4chorusDepth = (1000 - square2distanceFromOsc4) * .001\n    let osc4chorusRate = Math.floor(square2distanceFromOsc4 * .008)\n    \n    let osc4filterDepth = (1000 - square3distanceFromOsc4) * .001\n    let osc4filterRate = Math.floor(square3distanceFromOsc4 * .008)\n\n    let osc4filter2Rate = square4distanceFromOsc4 * .001\n    let osc4filter2Depth = Math.floor((1000 - square4distanceFromOsc4) * .008)\n\n    let osc4tremoloIntensity = (1000 - square5distanceFromOsc4) * .001\n    let osc4tremoloRate = square5distanceFromOsc4 * .011\n\n    let osc4bitcrusherBits = Math.floor((1000 - square6distanceFromOsc4) * .016)\n    let osc4bitcrusherBufferSize = square6distanceFromOsc4 * Math.floor(Math.random() * (16) -1 + 1) + 256\n\n    let osc4moogFilterBufferSize = square7distanceFromOsc4 * Math.floor(Math.random() * (16) -1 + 1) + 256\n    let osc4moogFilterCutoff = (1000 - square7distanceFromOsc4) * .001\n    let osc4moogFilterResonance = Math.floor(square7distanceFromOsc4 * .004)\n\n    let osc4moogFilter2BufferSize = square8distanceFromOsc4 * Math.floor(Math.random() * (16) -1 + 1) + 256\n    let osc4moogFilter2Cutoff = square8distanceFromOsc4 * .001\n    let osc4moogFilter2Resonance = Math.floor((1000 - square8distanceFromOsc4) * .004)\n\n    let osc4reverbLevel = (1000 - square9distanceFromOsc4) * .001\n\n    let osc4pannerPan = 1 - ((1000 - square10distanceFromOsc4) * .002)\n\n    let osc4phaserDepth = (1000 - square11distanceFromOsc4) * .001\n    let osc4phaserRate = Math.floor(square11distanceFromOsc4 * .008)\n    let osc4phaserFeedback = square11distanceFromOsc4 * .001\n\n    let osc4overdriveDrive = (1000 - square12distanceFromOsc4) * .001\n    let osc4overdriveGain = Math.floor(46 - ((1000 - square12distanceFromOsc4) * .046)) * -1\n    \n\n\n\n\n\n/////////////////////////////////////////////////////////////////////////////////\n///////////////////SETTING STATE NOW////////////////////////////////////////////\n    console.log(oscFreq, lfoFreq, osc2Freq, osc3Freq, osc4Freq, circlePos1[0], circlePos4[0])\n    this.state = {\n\n      circle1Pos: circlePos1,\n      prevCircle1Pos: circlePos1,\n      oscFreq: oscFreq,\n      oscFreqRange: [15, 5000],\n      lfoFreq: lfoFreq,\n      start1Move: false,\n      osc1Neighbors: [],\n\n      circle2Pos: circlePos2,\n      prevCircle2Pos: circlePos2,\n      osc2Freq: osc2Freq,\n      osc2FreqRange: [15, 5000],\n      lfo2Freq: lfo2Freq,\n      start2Move: false,\n      osc2Neighbors: [],\n\n      circle3Pos: circlePos3,\n      prevCircle3Pos: circlePos3,\n      osc3Freq: osc3Freq,\n      osc3FreqRange: [15, 5000],\n      lfo3Freq: lfo3Freq,\n      start3Move: false,\n      osc3Neighbors: [],\n\n      circle4Pos: circlePos4,\n      prevCircle4Pos: circlePos4,\n      osc4Freq: osc4Freq,\n      osc4FreqRange: [15, 5000],\n      lfo4Freq: lfo4Freq,\n      start4Move: false,\n      osc4Neighbors: [],\n\n/////EFFECT NODE 1//////////////////////\n      square1Pos: squarePos1,\n      prevSquare1Pos: squarePos1,\n      start5Move: false,\n      square1distanceFromOsc1: square1distanceFromOsc1,\n      square1distanceFromOsc2: square1distanceFromOsc2,\n      square1distanceFromOsc3: square1distanceFromOsc3,\n      square1distanceFromOsc4: square1distanceFromOsc4,\n\n      isLFOstarted: false,\n      lfoType: lfoType,\n      lfoFreq: lfoFreq,\n\n      isLFO2started: false,\n      lfo2Type: lfo2Type,\n      lfo2Freq: lfo2Freq,\n\n      isLFO3started: false,\n      lfo3Type: lfo3Type,\n      lfo3Freq: lfo3Freq,\n\n      isLFO4started: false,\n      lfo4Type: lfo4Type,\n      lfo4Freq: lfo4Freq,\n\n/////EFFECT NODE 2//////////////////////      \n      square2Pos: squarePos2,\n      prevSquare2Pos: squarePos2,\n      start6Move: false,\n      square2distanceFromOsc1: square2distanceFromOsc1,\n      square2distanceFromOsc2: square2distanceFromOsc2,\n      square2distanceFromOsc3: square2distanceFromOsc3,\n      square2distanceFromOsc4: square2distanceFromOsc4,\n\n      isOSC1chorusStarted: false,\n      osc1chorusDepth: osc1chorusDepth,\n      osc1chorusRate: osc1chorusRate,\n\n      isOSC2chorusStarted: false,\n      osc2chorusDepth: osc2chorusDepth,\n      osc2chorusRate: osc2chorusRate,\n\n      isOSC3chorusStarted: false,\n      osc3chorusDepth: osc3chorusDepth,\n      osc3chorusRate: osc3chorusRate,\n\n      isOSC4chorusStarted: false,\n      osc4chorusDepth: osc4chorusDepth,\n      osc4chorusRate: osc4chorusRate,\n\n\n/////EFFECT NODE 3////////////////////// \n      square3Pos: squarePos3,\n      prevSquare3Pos: squarePos3,\n      start7Move: false,\n      square3distanceFromOsc1: square3distanceFromOsc1,\n      square3distanceFromOsc2: square3distanceFromOsc2,\n      square3distanceFromOsc3: square3distanceFromOsc3,\n      square3distanceFromOsc4: square3distanceFromOsc4,\n\n      isOSC1filterStarted: false,\n      osc1filterDepth: osc1filterDepth,\n      osc1filterRate: osc1filterRate,\n\n      isOSC2filterStarted: false,\n      osc2filterDepth: osc2filterDepth,\n      osc2filterRate: osc2filterRate,\n\n      isOSC3filterStarted: false,\n      osc3filterDepth: osc3filterDepth,\n      osc3filterRate: osc3filterRate,\n\n      isOSC4filterStarted: false,\n      osc4filterDepth: osc4filterDepth,\n      osc4filterRate: osc4filterRate,\n\n\n/////EFFECT NODE 4////////////////////// \n      square4Pos: squarePos4,\n      prevSquare4Pos: squarePos4,\n      start8Move: false,\n      square4distanceFromOsc1: square4distanceFromOsc1,\n      square4distanceFromOsc2: square4distanceFromOsc2,\n      square4distanceFromOsc3: square4distanceFromOsc3,\n      square4distanceFromOsc4: square4distanceFromOsc4,\n\n      isOSC1filter2Started: false,\n      osc1filter2Depth: osc1filter2Depth,\n      osc1filter2Rate: osc1filter2Rate,\n\n      isOSC2filter2Started: false,\n      osc2filter2Depth: osc2filter2Depth,\n      osc2filter2Rate: osc2filter2Rate,\n\n      isOSC3filter2Started: false,\n      osc3filter2Depth: osc3filter2Depth,\n      osc3filter2Rate: osc3filter2Rate,\n\n      isOSC4filter2Started: false,\n      osc4filter2Depth: osc4filter2Depth,\n      osc4filter2Rate: osc4filter2Rate,\n\n\n/////EFFECT NODE 5////////////////////// \n      square5Pos: squarePos5,\n      prevSquare5Pos: squarePos5,\n      start9Move: false,\n      square5distanceFromOsc1: square5distanceFromOsc1,\n      square5distanceFromOsc2: square5distanceFromOsc2,\n      square5distanceFromOsc3: square5distanceFromOsc3,\n      square5distanceFromOsc4: square5distanceFromOsc4,\n\n\n      isOSC1tremoloStarted: false,\n      osc1tremoloIntensity: osc1tremoloIntensity,\n      osc1tremoloRate: osc1tremoloRate,\n\n      isOSC2tremoloStarted: false,\n      osc2tremoloIntensity: osc2tremoloIntensity,\n      osc2tremoloRate: osc2tremoloRate,\n\n      isOSC3tremoloStarted: false,\n      osc3tremoloIntensity: osc3tremoloIntensity,\n      osc3tremoloRate:  osc3tremoloRate,\n\n      isOSC4tremoloStarted: false,\n      osc4tremoloIntensity: osc4tremoloIntensity,\n      osc4tremoloRate: osc4tremoloRate,\n\n\n/////EFFECT NODE 6////////////////////// \n      square6Pos: squarePos6,\n      prevSquare6Pos: squarePos6,\n      start10Move: false,\n      square6distanceFromOsc1: square6distanceFromOsc1,\n      square6distanceFromOsc2: square6distanceFromOsc2,\n      square6distanceFromOsc3: square6distanceFromOsc3,\n      square6distanceFromOsc4: square6distanceFromOsc4,\n\n      isOSC1bitcrusherStarted: false,\n      osc1bitcrusherBits: osc1bitcrusherBits,\n      osc1bitcrusherBufferSize: osc1bitcrusherBufferSize,\n\n      isOSC2bitcrusherStarted: false,\n      osc2bitcrusherBits: osc2bitcrusherBits,\n      osc2bitcrusherBufferSize: osc2bitcrusherBufferSize,\n\n      isOSC3bitcrusherStarted: false,\n      osc3bitcrusherBits: osc3bitcrusherBits,\n      osc3bitcrusherBufferSize: osc3bitcrusherBufferSize,\n\n      isOSC4bitcrusherStarted: false,\n      osc4bitcrusherBits: osc4bitcrusherBits,\n      osc4bitcrusherBufferSize: osc4bitcrusherBufferSize,\n\n\n/////EFFECT NODE 7////////////////////// \n      square7Pos: squarePos7,\n      prevSquare7Pos: squarePos7,\n      start11Move: false,\n      square7distanceFromOsc1: square7distanceFromOsc1,\n      square7distanceFromOsc2: square7distanceFromOsc2,\n      square7distanceFromOsc3: square7distanceFromOsc3,\n      square7distanceFromOsc4: square7distanceFromOsc4,\n\n      isOSC1moogFilterStarted: false,\n      osc1moogFilterBufferSize: osc1moogFilterBufferSize,\n      osc1moogFilterCutoff: osc1moogFilterCutoff,\n      osc1moogFilterResonance: osc1moogFilterResonance,\n\n      isOSC2moogFilterStarted: false,\n      osc2moogFilterBufferSize: osc2moogFilterBufferSize,\n      osc2moogFilterCutoff: osc2moogFilterCutoff,\n      osc2moogFilterResonance: osc2moogFilterResonance,\n\n      isOSC3moogFilterStarted: false,\n      osc3moogFilterBufferSize: osc3moogFilterBufferSize,\n      osc3moogFilterCutoff: osc3moogFilterCutoff,\n      osc3moogFilterResonance: osc3moogFilterResonance,\n\n      isOSC4moogFilterStarted: false,\n      osc4moogFilterBufferSize: osc4moogFilterBufferSize,\n      osc4moogFilterCutoff: osc4moogFilterCutoff,\n      osc4moogFilterResonance: osc4moogFilterResonance,\n\n\n/////EFFECT NODE 8////////////////////// \n      square8Pos: squarePos8,\n      prevSquare8Pos: squarePos8,\n      start12Move: false,\n      square8distanceFromOsc1: square8distanceFromOsc1,\n      square8distanceFromOsc2: square8distanceFromOsc2,\n      square8distanceFromOsc3: square8distanceFromOsc3,\n      square8distanceFromOsc4: square8distanceFromOsc4,\n\n\n      isOSC1moogFilter2Started: false,\n      osc1moogFilter2BufferSize: osc1moogFilter2BufferSize,\n      osc1moogFilter2Cutoff: osc1moogFilter2Cutoff,\n      osc1moogFilter2Resonance: osc1moogFilter2Resonance,\n\n      isOSC2moogFilter2Started: false,\n      osc2moogFilter2BufferSize: osc2moogFilter2BufferSize,\n      osc2moogFilter2Cutoff: osc2moogFilter2Cutoff,\n      osc2moogFilter2Resonance: osc2moogFilter2Resonance,\n\n      isOSC3moogFilter2Started: false,\n      osc3moogFilter2BufferSize: osc3moogFilter2BufferSize,\n      osc3moogFilter2Cutoff: osc3moogFilter2Cutoff,\n      osc3moogFilter2Resonance: osc3moogFilter2Resonance,\n\n      isOSC4moogFilter2Started: false,\n      osc4moogFilter2BufferSize: osc4moogFilter2BufferSize,\n      osc4moogFilter2Cutoff: osc4moogFilter2Cutoff,\n      osc4moogFilter2Resonance: osc4moogFilter2Resonance,\n\n\n/////EFFECT NODE 9////////////////////// \n      square9Pos: squarePos9,\n      prevSquare9Pos: squarePos9,\n      start13Move: false,\n      square9distanceFromOsc1: square9distanceFromOsc1,\n      square9distanceFromOsc2: square9distanceFromOsc2,\n      square9distanceFromOsc3: square9distanceFromOsc3,\n      square9distanceFromOsc4: square9distanceFromOsc4,\n\n      isOSC1reverbStarted: false,\n      osc1reverbLevel: osc1reverbLevel,\n\n      isOSC2reverbStarted: false,\n      osc2reverbLevel: osc2reverbLevel,\n\n      isOSC3reverbStarted: false,\n      osc3reverbLevel: osc3reverbLevel,\n\n      isOSC4reverbStarted: false,\n      osc4reverbLevel: osc4reverbLevel,\n\n\n/////EFFECT NODE 10////////////////////// \n      square10Pos: squarePos10,\n      prevSquare10Pos: squarePos10,\n      start14Move: false,\n      square10distanceFromOsc1: square10distanceFromOsc1,\n      square10distanceFromOsc2: square10distanceFromOsc2,\n      square10distanceFromOsc3: square10distanceFromOsc3,\n      square10distanceFromOsc4: square10distanceFromOsc4,\n\n      isOSC1pannerStarted: false,\n      osc1pannerPan: osc1pannerPan,\n\n      isOSC2pannerStarted: false,\n      osc2pannerPan: osc2pannerPan,\n\n      isOSC3pannerStarted: false,\n      osc3pannerPan: osc3pannerPan,\n\n      isOSC4pannerStarted: false,\n      osc4pannerPan: osc4pannerPan,\n\n\n\n  \n/////EFFECT NODE 11////////////////////// \n      square11Pos: squarePos11,\n      prevSquare11Pos: squarePos11,\n      start15Move: false,\n      square11distanceFromOsc1: square11distanceFromOsc1,\n      square11distanceFromOsc2: square11distanceFromOsc2,\n      square11distanceFromOsc3: square11distanceFromOsc3,\n      square11distanceFromOsc4: square11distanceFromOsc4,\n\n      isOSC1phaserStarted: false,\n      osc1phaserRate: osc1phaserRate,\n      osc1phaserDepth: osc1phaserDepth,\n      osc1phaserFeedback: osc1phaserFeedback,\n\n      isOSC2phaserStarted: false,\n      osc2phaserRate: osc2phaserRate,\n      osc2phaserDepth: osc2phaserDepth,\n      osc2phaserFeedback: osc2phaserFeedback,\n\n      isOSC3phaserStarted: false,\n      osc3phaserRate: osc3phaserRate,\n      osc3phaserDepth: osc3phaserDepth,\n      osc3phaserFeedback: osc3phaserFeedback,\n\n      isOSC4phaserStarted: false,\n      osc4phaserRate: osc4phaserRate,\n      osc4phaserDepth: osc4phaserDepth,\n      osc4phaserFeedback: osc4phaserFeedback,\n\n\n/////EFFECT NODE 12////////////////////// \n      square12Pos: squarePos12,\n      prevSquare12Pos: squarePos12,\n      start16Move: false,\n      square12distanceFromOsc1: square12distanceFromOsc1,\n      square12distanceFromOsc2: square12distanceFromOsc2,\n      square12distanceFromOsc3: square12distanceFromOsc3,\n      square12distanceFromOsc4: square12distanceFromOsc4,\n\n      isOSC1overdriveStarted: false,\n      osc1overdriveDrive: osc1overdriveDrive,\n      osc1overdriveGain: osc1overdriveGain,\n\n      isOSC2overdriveStarted: false,\n      osc2overdriveDrive: osc2overdriveDrive,\n      osc2overdriveGain: osc2overdriveGain,\n\n      isOSC3overdriveStarted: false,\n      osc3overdriveDrive: osc3overdriveDrive,\n      osc3overdriveGain: osc3overdriveGain,\n\n      isOSC4overdriveStarted: false,\n      osc4overdriveDrive: osc4overdriveDrive,\n      osc4overdriveGain: osc4overdriveGain,\n\n\n/////EFFECT NODE 13////////////////////// \n      square13Pos: squarePos13,\n      prevSquare13Pos: squarePos13,\n      start17Move: false,\n      square13distanceFromOsc1: square13distanceFromOsc1,\n      square13distanceFromOsc2: square13distanceFromOsc2,\n      square13distanceFromOsc3: square13distanceFromOsc3,\n      square13distanceFromOsc4: square13distanceFromOsc4,\n\n\n/////EFFECT NODE 14////////////////////// \n      square14Pos: squarePos14,\n      prevSquare14Pos: squarePos14,\n      start18Move: false,\n      square14distanceFromOsc1: square14distanceFromOsc1,\n      square14distanceFromOsc2: square14distanceFromOsc2,\n      square14distanceFromOsc3: square14distanceFromOsc3,\n      square14distanceFromOsc4: square14distanceFromOsc4,\n\n\n/////EFFECT NODE 15////////////////////// \n      square15Pos: squarePos15,\n      prevSquare15Pos: squarePos15,\n      start19Move: false,\n      square15distanceFromOsc1: square15distanceFromOsc1,\n      square15distanceFromOsc2: square15distanceFromOsc2,\n      square15distanceFromOsc3: square15distanceFromOsc3,\n      square15distanceFromOsc4: square15distanceFromOsc4,\n\n\n/////EFFECT NODE 16////////////////////// \n      square16Pos: squarePos16,\n      prevSquare16Pos: squarePos16,\n      start20Move: false,\n      square16distanceFromOsc1: square16distanceFromOsc1,\n      square16distanceFromOsc2: square16distanceFromOsc2,\n      square16distanceFromOsc3: square16distanceFromOsc3,\n      square16distanceFromOsc4: square16distanceFromOsc4,\n      \n    };\n   \n    // this.updateFrequencyOSC();\n    // // this.updateFrequencyOSC2();\n    // this.updateFrequencyOSC3();\n    // this.updateFrequencyOSC4();\n    // this.turnOnLFO();\n    // this.turnOnLFO2();\n    \n    \n    this.handleMouseEvent = this.handleMouseEvent.bind(this);\n    this.handleMouseDown = this.handleMouseDown.bind(this);\n    this.handleMouseUp = this.handleMouseUp.bind(this);\n  }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleMouseDown, false);\n        document.addEventListener('mouseup', this.handleMouseUp, false);\n        document.addEventListener('mousemove', this.handleMouseEvent, false);\n        var rect = this.refs.canvas.getBoundingClientRect();\n        this.canvasPos = [rect.left, rect.top];\n        this.ctx = this.refs.canvas.getContext('2d');\n        \n        this.ctx.fillStyle = this.props.color;\n        this.ctx.beginPath();\n        this.ctx.fillRect(0,0, this.props.width, this.props.height);\n        \n      \n        this.drawLabel();\n        \n        this.updateCanvas();\n    }\n\n    drawLabel() {\n        this.ctx.font = '10px consolas';\n        this.ctx.textAlign = 'center';\n        this.ctx.fillStyle = '#CC0720';\n        this.ctx.fillText('OSCILLATOR FREQUENCY', Math.round(this.props.width/2), 10 + 5);\n        this.ctx.beginPath();\n        this.ctx.rotate(1.5708);\n        this.ctx.fillText(\n          'LFO FREQUENCY', \n          Math.round(this.props.width / 2), \n          -this.props.width + 10 + 5);\n        this.ctx.rotate(-1.5708);\n    }\n\n    updateCanvas() {\n      \n      this.ctx.beginPath();\n      this.ctx.arc(this.state.prevCircle1Pos[0], this.state.prevCircle1Pos[1], 7, false, Math.PI * 2, false);\n      this.ctx.arc(this.state.prevCircle2Pos[0], this.state.prevCircle2Pos[1], 7, false, Math.PI * 2, false);\n      this.ctx.arc(this.state.prevCircle3Pos[0], this.state.prevCircle3Pos[1], 7, false, Math.PI * 2, false);\n      this.ctx.arc(this.state.prevCircle4Pos[0], this.state.prevCircle4Pos[1], 7, false, Math.PI * 2, false);\n      this.ctx.closePath();\n      this.ctx.fillStyle = this.props.color;\n      \n\n      this.drawLabel();\n\n      \n      let points = [\n        this.state.circle1Pos, \n        this.state.circle2Pos, \n        this.state.circle3Pos, \n        this.state.circle4Pos, \n        this.state.square1Pos,\n        this.state.square2Pos,\n        this.state.square3Pos,\n        this.state.square4Pos,\n        this.state.square5Pos,\n        this.state.square6Pos,\n        this.state.square7Pos,\n        this.state.square8Pos,\n        this.state.square9Pos,\n        this.state.square10Pos,\n        this.state.square11Pos,\n        this.state.square12Pos,\n        this.state.square13Pos,\n        this.state.square14Pos,\n        this.state.square15Pos,\n        this.state.square16Pos,\n      ]\n\n      // console.log(points)\n      const delaunay = d3.Delaunay.from(points);\n      \n      const voronoi = delaunay.voronoi([0.5, 0.5, this.props.width - 0.5, this.props.height])\n      this.ctx.fillStyle = this.props.color;\n      this.ctx.fillRect(0, 0, this.props.width, this.props.height)\n      this.ctx.beginPath();\n      delaunay.render(this.ctx);\n      this.ctx.strokeStyle = \"#C0392B\";\n      this.ctx.stroke();\n      this.ctx.closePath();\n      // console.log(voronoi.neighbors(), delaunay.neighbors())\n      this.ctx.beginPath();\n      voronoi.render(this.ctx);\n      voronoi.renderBounds(this.ctx);\n      this.ctx.strokeStyle = \"#C0C0C0\";\n      this.ctx.stroke();\n      this.ctx.closePath();\n      this.ctx.beginPath();\n      delaunay.renderPoints(this.ctx);\n      this.ctx.fill();\n\n      //turn effects on of neighboring oscillators with this\n      const osc1Neighbors = [...delaunay.neighbors(0)]\n      this.state.osc1Neighbors = osc1Neighbors;\n      const osc2Neighbors = [...delaunay.neighbors(1)]\n      this.state.osc2Neighbors = osc2Neighbors;\n      const osc3Neighbors = [...delaunay.neighbors(2)]\n      this.state.osc3Neighbors = osc3Neighbors;\n      const osc4Neighbors = [...delaunay.neighbors(3)]\n      this.state.osc4Neighbors = osc4Neighbors;\n      // console.log(osc2Neighbors)\n      if (this.state.osc1Neighbors.includes(5)) {\n        this.setState({isLFOstarted: true})\n        this.turnOnLFO();\n      }\n      else if (this.state.osc1Neighbors.includes(6)) {\n        this.setState({isOSC1chorusStarted: true})\n        this.updateOSC1chorusBypass();\n      }\n      else if (this.state.osc1Neighbors.includes(7)) {\n        this.setState({isOSC1filterStarted: true})\n        this.updateOSC1filterBypass();\n      }  \n      else if (this.state.osc1Neighbors.includes(8)) {\n        this.setState({isOSC1filter2Started: true})\n        this.updateOSC1filter2Bypass();\n      } \n      else if (this.state.osc1Neighbors.includes(9)) {\n        this.setState({isOSC1tremoloStarted: true})\n        this.updateOSC1tremoloBypass();\n      }   \n      else if (this.state.osc1Neighbors.includes(10)) {\n        this.setState({isOSC1bitcrusherStarted: true})\n        this.updateOSC1bitcrusherBypass();\n      }\n      else if (this.state.osc1Neighbors.includes(11)) {\n        this.setState({isOSC1moogFilterStarted: true})\n        this.updateOSC1moogFilterBypass();\n      }\n      else if (this.state.osc1Neighbors.includes(12)) {\n        this.setState({isOSC1moogFilter2Started: true})\n        this.updateOSC1moogFilter2Bypass();\n      }  \n      else if (this.state.osc1Neighbors.includes(13)) {\n        this.setState({isOSC1reverbStarted: true})\n        this.updateOSC1reverbBypass();\n      } \n      else if (this.state.osc1Neighbors.includes(14)) {\n        this.setState({isOSC1pannerStarted: true})\n        this.updateOSC1pannerBypass();\n      }   \n      else if (this.state.osc1Neighbors.includes(15)) {\n        this.setState({isOSC1phaserStarted: true})\n        this.updateOSC1phaserBypass();\n      }\n      else if (this.state.osc1Neighbors.includes(16)) {\n        this.setState({isOSC1overdriveStarted: true})\n        this.updateOSC1overdriveBypass();\n      }\n      else {\n        this.setState({\n          isLFOstarted: false,\n          isOSC1chorusStarted: false,\n          isOSC1filterStarted: false,\n          isOSC1filter2Started: false,\n          isOSC1tremoloStarted: false,\n          isOSC1bitcrusherStarted: false,\n          isOSC1moogFilterStarted: false,\n          isOSC1moogFilter2Started: false,\n          isOSC1reverbStarted: false,\n          isOSC1pannerStarted: false,\n          isOSC1phaserStarted: false,\n          isOSC1overdriveStarted: false\n        })\n      }\n\n      if (this.state.osc2Neighbors.includes(5)) {\n        this.setState({isLFO2started: true})\n        this.turnOnLFO2();\n      }\n      else if (this.state.osc2Neighbors.includes(6)) {\n        this.setState({isOSC2chorusStarted: true})\n        this.updateOSC2chorusBypass();\n      }\n      else if (this.state.osc2Neighbors.includes(7)) {\n        this.setState({isOSC2filterStarted: true})\n        this.updateOSC2filterBypass();\n      }  \n      else if (this.state.osc2Neighbors.includes(8)) {\n        this.setState({isOSC2filter2Started: true})\n        this.updateOSC2filter2Bypass();\n      } \n      else if (this.state.osc2Neighbors.includes(9)) {\n        this.setState({isOSC2tremoloStarted: true})\n        this.updateOSC2tremoloBypass();\n      }   \n      else if (this.state.osc2Neighbors.includes(10)) {\n        this.setState({isOSC2bitcrusherStarted: true})\n        this.updateOSC2bitcrusherBypass();\n      }\n      else if (this.state.osc2Neighbors.includes(11)) {\n        this.setState({isOSC2moogFilterStarted: true})\n        this.updateOSC2moogFilterBypass();\n      }\n      else if (this.state.osc2Neighbors.includes(12)) {\n        this.setState({isOSC2moogFilter2Started: true})\n        this.updateOSC2moogFilter2Bypass();\n      }  \n      else if (this.state.osc2Neighbors.includes(13)) {\n        this.setState({isOSC2reverbStarted: true})\n        this.updateOSC2reverbBypass();\n      } \n      else if (this.state.osc2Neighbors.includes(14)) {\n        this.setState({isOSC2pannerStarted: true})\n        this.updateOSC2pannerBypass();\n      }   \n      else if (this.state.osc2Neighbors.includes(15)) {\n        this.setState({isOSC2phaserStarted: true})\n        this.updateOSC2phaserBypass();\n      }\n      else if (this.state.osc2Neighbors.includes(16)) {\n        this.setState({isOSC2overdriveStarted: true})\n        this.updateOSC2overdriveBypass();\n      }\n      else {\n        this.setState({\n          isLFO2started: false,\n          isOSC2chorusStarted: false,\n          isOSC2filterStarted: false,\n          isOSC2filter2Started: false,\n          isOSC2tremoloStarted: false,\n          isOSC2bitcrusherStarted: false,\n          isOSC2moogFilterStarted: false,\n          isOSC2moogFilter2Started: false,\n          isOSC2reverbStarted: false,\n          isOSC2pannerStarted: false,\n          isOSC2phaserStarted: false,\n          isOSC2overdriveStarted: false\n        })\n      }\n\n      if (this.state.osc3Neighbors.includes(5)) {\n        this.setState({isLFO3started: true})\n        this.turnOnLFO3();\n      }\n      else if (this.state.osc3Neighbors.includes(6)) {\n        this.setState({isOSC3chorusStarted: true})\n        this.updateOSC2chorusBypass();\n      }\n      else if (this.state.osc3Neighbors.includes(7)) {\n        this.setState({isOSC3filterStarted: true})\n        this.updateOSC2filterBypass();\n      }  \n      else if (this.state.osc3Neighbors.includes(8)) {\n        this.setState({isOSC3filter2Started: true})\n        this.updateOSC2filter2Bypass();\n      } \n      else if (this.state.osc3Neighbors.includes(9)) {\n        this.setState({isOSC3tremoloStarted: true})\n      }   \n      else if (this.state.osc3Neighbors.includes(10)) {\n        this.setState({isOSC3bitcrusherStarted: true})\n      }\n      else if (this.state.osc3Neighbors.includes(11)) {\n        this.setState({isOSC3moogFilterStarted: true})\n      }\n      else if (this.state.osc3Neighbors.includes(12)) {\n        this.setState({isOSC3moogFilter2Started: true})\n      }  \n      else if (this.state.osc3Neighbors.includes(13)) {\n        this.setState({isOSC3reverbStarted: true})\n      } \n      else if (this.state.osc3Neighbors.includes(14)) {\n        this.setState({isOSC3pannerStarted: true})\n      }   \n      else if (this.state.osc3Neighbors.includes(15)) {\n        this.setState({isOSC3phaserStarted: true})\n      }\n      else if (this.state.osc3Neighbors.includes(16)) {\n        this.setState({isOSC3overdriveStarted: true})\n      }\n      else {\n        this.setState({\n          isLFO3started: false,\n          isOSC3chorusStarted: false,\n          isOSC3filterStarted: false,\n          isOSC3filter2Started: false,\n          isOSC3tremoloStarted: false,\n          isOSC3bitcrusherStarted: false,\n          isOSC3moogFilterStarted: false,\n          isOSC3moogFilter2Started: false,\n          isOSC3reverbStarted: false,\n          isOSC3pannerStarted: false,\n          isOSC3phaserStarted: false,\n          isOSC3overdriveStarted: false\n        })\n      }\n\n      if (this.state.osc4Neighbors.includes(5)) {\n        this.setState({isLFO4started: true})\n      }\n      else if (this.state.osc4Neighbors.includes(6)) {\n        this.setState({isOSC4chorusStarted: true})\n      }\n      else if (this.state.osc4Neighbors.includes(7)) {\n        this.setState({isOSC4filterStarted: true})\n      }  \n      else if (this.state.osc4Neighbors.includes(8)) {\n        this.setState({isOSC4filter2Started: true})\n      } \n      else if (this.state.osc4Neighbors.includes(9)) {\n        this.setState({isOSC4tremoloStarted: true})\n      }   \n      else if (this.state.osc4Neighbors.includes(10)) {\n        this.setState({isOSC4bitcrusherStarted: true})\n      }\n      else if (this.state.osc4Neighbors.includes(11)) {\n        this.setState({isOSC4moogFilterStarted: true})\n      }\n      else if (this.state.osc4Neighbors.includes(12)) {\n        this.setState({isOSC4moogFilter2Started: true})\n      }  \n      else if (this.state.osc4Neighbors.includes(13)) {\n        this.setState({isOSC4reverbStarted: true})\n      } \n      else if (this.state.osc4Neighbors.includes(14)) {\n        this.setState({isOSC4pannerStarted: true})\n      }   \n      else if (this.state.osc4Neighbors.includes(15)) {\n        this.setState({isOSC4phaserStarted: true})\n      }\n      else if (this.state.osc4Neighbors.includes(16)) {\n        this.setState({isOSC4overdriveStarted: true})\n      }\n      else {\n        this.setState({\n          isLFO4started: false,\n          isOSC4chorusStarted: false,\n          isOSC4filterStarted: false,\n          isOSC4filter2Started: false,\n          isOSC4tremoloStarted: false,\n          isOSC4bitcrusherStarted: false,\n          isOSC4moogFilterStarted: false,\n          isOSC4moogFilter2Started: false,\n          isOSC4reverbStarted: false,\n          isOSC4pannerStarted: false,\n          isOSC4phaserStarted: false,\n          isOSC4overdriveStarted: false\n        })\n      }\n\n      \n\n\n\n      // console.log(this.state)\n      // console.log(osc2Neighbors)\n\n\n      // distance function: \n      // if osc1Neighbors.includes(5) {}\n      \n\n      this.ctx.beginPath();\n      \n      this.ctx.arc(this.state.circle1Pos[0], this.state.circle1Pos[1], 7.5, false, Math.PI * 2, false);\n      this.ctx.closePath();\n      this.ctx.fillStyle = \"#808080\";\n      // this.ctx.stroke();\n      this.ctx.fill();\n\n\n      this.ctx.beginPath();\n      \n      this.ctx.arc(this.state.circle2Pos[0], this.state.circle2Pos[1], 7.5, false, Math.PI * 2, false);\n      this.ctx.closePath();\n      this.ctx.fillStyle = \"#808080\";\n      // this.ctx.stroke();\n      this.ctx.fill();\n\n      this.ctx.beginPath();\n      \n      this.ctx.arc(this.state.circle3Pos[0], this.state.circle3Pos[1], 7.5, false, Math.PI * 2, false);\n      this.ctx.closePath();\n      this.ctx.fillStyle = \"#808080\";\n      // this.ctx.stroke();\n      this.ctx.fill();\n\n      this.ctx.beginPath();\n      \n      this.ctx.arc(this.state.circle4Pos[0], this.state.circle4Pos[1], 7.5, false, Math.PI * 2, false);\n      this.ctx.closePath();\n      this.ctx.fillStyle = \"#808080\";\n      // this.ctx.stroke();\n      this.ctx.fill();\n\n\n      //square 1\n      this.ctx.beginPath();\n      this.ctx.arc(this.state.square1Pos[0], this.state.square1Pos[1], 4, false, Math.PI * 2, false);\n      this.ctx.closePath();\n      this.ctx.fillStyle = \"#808080\";\n      // this.ctx.stroke();\n      this.ctx.fill();\n\n      this.ctx.arc(this.state.square2Pos[0], this.state.square2Pos[1], 4, false, Math.PI * 2, false);\n      this.ctx.closePath();\n      this.ctx.fillStyle = \"#808080\";\n      // this.ctx.stroke();\n      this.ctx.fill();\n\n      this.ctx.arc(this.state.square3Pos[0], this.state.square3Pos[1], 4, false, Math.PI * 2, false);\n      this.ctx.closePath();\n      this.ctx.fillStyle = \"#808080\";\n      // this.ctx.stroke();\n      this.ctx.fill();\n\n      this.ctx.arc(this.state.square4Pos[0], this.state.square4Pos[1], 4, false, Math.PI * 2, false);\n      this.ctx.closePath();\n      this.ctx.fillStyle = \"#808080\";\n      // this.ctx.stroke();\n      this.ctx.fill();\n\n      this.ctx.arc(this.state.square5Pos[0], this.state.square5Pos[1], 4, false, Math.PI * 2, false);\n      this.ctx.closePath();\n      this.ctx.fillStyle = \"#808080\";\n      // this.ctx.stroke();\n      this.ctx.fill();\n\n      this.ctx.arc(this.state.square6Pos[0], this.state.square6Pos[1], 4, false, Math.PI * 2, false);\n      this.ctx.closePath();\n      this.ctx.fillStyle = \"#808080\";\n      // this.ctx.stroke();\n      this.ctx.fill();\n\n      this.ctx.arc(this.state.square7Pos[0], this.state.square7Pos[1], 4, false, Math.PI * 2, false);\n      this.ctx.closePath();\n      this.ctx.fillStyle = \"#808080\";\n      // this.ctx.stroke();\n      this.ctx.fill();\n\n      this.ctx.arc(this.state.square8Pos[0], this.state.square8Pos[1], 4, false, Math.PI * 2, false);\n      this.ctx.closePath();\n      this.ctx.fillStyle = \"#808080\";\n      // this.ctx.stroke();\n      this.ctx.fill();\n\n      this.ctx.arc(this.state.square9Pos[0], this.state.square9Pos[1], 4, false, Math.PI * 2, false);\n      this.ctx.closePath();\n      this.ctx.fillStyle = \"#808080\";\n      // this.ctx.stroke();\n      this.ctx.fill();\n\n      this.ctx.arc(this.state.square10Pos[0], this.state.square10Pos[1], 4, false, Math.PI * 2, false);\n      this.ctx.closePath();\n      this.ctx.fillStyle = \"#808080\";\n      // this.ctx.stroke();\n      this.ctx.fill();\n\n      this.ctx.arc(this.state.square11Pos[0], this.state.square11Pos[1], 4, false, Math.PI * 2, false);\n      this.ctx.closePath();\n      this.ctx.fillStyle = \"#808080\";\n      // this.ctx.stroke();\n      this.ctx.fill();\n\n      this.ctx.arc(this.state.square12Pos[0], this.state.square12Pos[1], 4, false, Math.PI * 2, false);\n      this.ctx.closePath();\n      this.ctx.fillStyle = \"#808080\";\n      // this.ctx.stroke();\n      this.ctx.fill();\n\n      this.ctx.arc(this.state.square13Pos[0], this.state.square13Pos[1], 4, false, Math.PI * 2, false);\n      this.ctx.closePath();\n      this.ctx.fillStyle = \"#808080\";\n      // this.ctx.stroke();\n      this.ctx.fill();\n\n      this.ctx.arc(this.state.square14Pos[0], this.state.square14Pos[1], 4, false, Math.PI * 2, false);\n      this.ctx.closePath();\n      this.ctx.fillStyle = \"#808080\";\n      // this.ctx.stroke();\n      this.ctx.fill();\n\n      this.ctx.arc(this.state.square15Pos[0], this.state.square15Pos[1], 4, false, Math.PI * 2, false);\n      this.ctx.closePath();\n      this.ctx.fillStyle = \"#808080\";\n      // this.ctx.stroke();\n      this.ctx.fill();\n\n      this.ctx.arc(this.state.square16Pos[0], this.state.square16Pos[1], 4, false, Math.PI * 2, false);\n      this.ctx.closePath();\n      this.ctx.fillStyle = \"#808080\";\n      // this.ctx.stroke();\n      this.ctx.fill();\n\n    }\n\n    handleMouseUp() {\n      this.setState({\n        start1Move: false,\n        start2Move: false,\n        start3Move: false,\n        start4Move: false,\n        start5Move: false,\n        start6Move: false,\n        start7Move: false,\n        start8Move: false,\n        start9Move: false,\n        start10Move: false,\n        start11Move: false,\n        start12Move: false,\n        start13Move: false,\n        start14Move: false,\n        start15Move: false,\n        start16Move: false,\n        start17Move: false,\n        start18Move: false,\n        start19Move: false,\n        start20Move: false,\n      })\n    }\n\n    handleMouseDown(event) {\n      // when this event starts check that pos X = node at pos X and you're finding the exact node you clicked\n      //  filter to return the state \n      //find which node was clicked and update x and y coords\n      // var posX = event.clientX - this.canvasPos[0];\n      // var posY = event.clientY - this.canvasPos[1];\n      // console.log(event.layerX, event.layerY, '-- event layers X & Y')\n      // console.log(this.state.circle1Pos[0], this.state.circle1Pos[1], '--circle1pos')\n      // console.log(this.state.circle2Pos[0], this.state.circle2Pos[1], '--circle2pos')\n      // console.log(this.state.circle3Pos[0], this.state.circle3Pos[1], '--circle3pos')\n      // console.log(this.state.circle4Pos[0], this.state.circle4Pos[1], '--circle4pos')\n      \n      let topRange1x = this.state.circle1Pos[0] + 5\n      let bottomRange1x = this.state.circle1Pos[0] - 5\n      let topRange1y = this.state.circle1Pos[1] + 5\n      let bottomRange1y = this.state.circle1Pos[1] - 5\n      let topRange2x = this.state.circle2Pos[0] + 5\n      let bottomRange2x = this.state.circle2Pos[0] - 5\n      let topRange2y = this.state.circle2Pos[1] + 5\n      let bottomRange2y = this.state.circle2Pos[1] - 5\n      let topRange3x = this.state.circle3Pos[0] + 5\n      let bottomRange3x = this.state.circle3Pos[0] - 5\n      let topRange3y = this.state.circle3Pos[1] + 5\n      let bottomRange3y = this.state.circle3Pos[1] - 5\n      let topRange4x = this.state.circle4Pos[0] + 5\n      let bottomRange4x = this.state.circle4Pos[0] - 5\n      let topRange4y = this.state.circle4Pos[1] + 5\n      let bottomRange4y = this.state.circle4Pos[1] - 5\n\n      let topRange5x = this.state.square1Pos[0] + 5\n      let bottomRange5x = this.state.square1Pos[0] - 5\n      let topRange5y = this.state.square1Pos[1] + 5\n      let bottomRange5y = this.state.square1Pos[1] - 5\n      let topRange6x = this.state.square2Pos[0] + 5\n      let bottomRange6x = this.state.square2Pos[0] - 5\n      let topRange6y = this.state.square2Pos[1] + 5\n      let bottomRange6y = this.state.square2Pos[1] - 5\n      let topRange7x = this.state.square3Pos[0] + 5\n      let bottomRange7x = this.state.square3Pos[0] - 5\n      let topRange7y = this.state.square3Pos[1] + 5\n      let bottomRange7y = this.state.square3Pos[1] - 5\n      let topRange8x = this.state.square4Pos[0] + 5\n      let bottomRange8x = this.state.square4Pos[0] - 5\n      let topRange8y = this.state.square4Pos[1] + 5\n      let bottomRange8y = this.state.square4Pos[1] - 5\n\n      let topRange9x = this.state.square5Pos[0] + 5\n      let bottomRange9x = this.state.square5Pos[0] - 5\n      let topRange9y = this.state.square5Pos[1] + 5\n      let bottomRange9y = this.state.square5Pos[1] - 5\n      let topRange10x = this.state.square6Pos[0] + 5\n      let bottomRange10x = this.state.square6Pos[0] - 5\n      let topRange10y = this.state.square6Pos[1] + 5\n      let bottomRange10y = this.state.square6Pos[1] - 5\n      let topRange11x = this.state.square7Pos[0] + 5\n      let bottomRange11x = this.state.square7Pos[0] - 5\n      let topRange11y = this.state.square7Pos[1] + 5\n      let bottomRange11y = this.state.square7Pos[1] - 5\n      let topRange12x = this.state.square8Pos[0] + 5\n      let bottomRange12x = this.state.square8Pos[0] - 5\n      let topRange12y = this.state.square8Pos[1] + 5\n      let bottomRange12y = this.state.square8Pos[1] - 5\n\n      let topRange13x = this.state.square9Pos[0] + 5\n      let bottomRange13x = this.state.square9Pos[0] - 5\n      let topRange13y = this.state.square9Pos[1] + 5\n      let bottomRange13y = this.state.square9Pos[1] - 5\n      let topRange14x = this.state.square10Pos[0] + 5\n      let bottomRange14x = this.state.square10Pos[0] - 5\n      let topRange14y = this.state.square10Pos[1] + 5\n      let bottomRange14y = this.state.square10Pos[1] - 5\n      let topRange15x = this.state.square11Pos[0] + 5\n      let bottomRange15x = this.state.square11Pos[0] - 5\n      let topRange15y = this.state.square11Pos[1] + 5\n      let bottomRange15y = this.state.square11Pos[1] - 5\n      let topRange16x = this.state.square12Pos[0] + 5\n      let bottomRange16x = this.state.square12Pos[0] - 5\n      let topRange16y = this.state.square12Pos[1] + 5\n      let bottomRange16y = this.state.square12Pos[1] - 5\n\n      let topRange17x = this.state.square13Pos[0] + 5\n      let bottomRange17x = this.state.square13Pos[0] - 5\n      let topRange17y = this.state.square13Pos[1] + 5\n      let bottomRange17y = this.state.square13Pos[1] - 5\n      let topRange18x = this.state.square14Pos[0] + 5\n      let bottomRange18x = this.state.square14Pos[0] - 5\n      let topRange18y = this.state.square14Pos[1] + 5\n      let bottomRange18y = this.state.square14Pos[1] - 5\n      let topRange19x = this.state.square15Pos[0] + 5\n      let bottomRange19x = this.state.square15Pos[0] - 5\n      let topRange19y = this.state.square15Pos[1] + 5\n      let bottomRange19y = this.state.square15Pos[1] - 5\n      let topRange20x = this.state.square16Pos[0] + 5\n      let bottomRange20x = this.state.square16Pos[0] - 5\n      let topRange20y = this.state.square16Pos[1] + 5\n      let bottomRange20y = this.state.square16Pos[1] - 5\n\n      if (event.layerX >= bottomRange1x && event.layerX <= topRange1x && event.layerY >= bottomRange1y && event.layerY <= topRange1y) { \n        this.setState({start1Move: true})\n      } \n      else if (event.layerX >= bottomRange2x && event.layerX <= topRange2x && event.layerY >= bottomRange2y && event.layerY <= topRange2y) {\n        this.setState({start2Move: true})\n      }\n      else if  (event.layerX >= bottomRange3x && event.layerX <= topRange3x && event.layerY >= bottomRange3y && event.layerY <= topRange3y) {\n        this.setState({start3Move: true})\n      }\n      else if  (event.layerX >= bottomRange4x && event.layerX <= topRange4x && event.layerY >= bottomRange4y && event.layerY <= topRange4y) {\n        this.setState({start4Move: true})\n      } \n      else if  (event.layerX >= bottomRange5x && event.layerX <= topRange5x && event.layerY >= bottomRange5y && event.layerY <= topRange5y) {\n        this.setState({start5Move: true})\n      } \n      else if  (event.layerX >= bottomRange6x && event.layerX <= topRange6x && event.layerY >= bottomRange6y && event.layerY <= topRange6y) {\n        this.setState({start6Move: true}) \n      }\n      else if  (event.layerX >= bottomRange7x && event.layerX <= topRange7x && event.layerY >= bottomRange7y && event.layerY <= topRange7y) {\n        this.setState({start7Move: true}) \n      }\n      else if  (event.layerX >= bottomRange8x && event.layerX <= topRange8x && event.layerY >= bottomRange8y && event.layerY <= topRange8y) {\n        this.setState({start8Move: true}) \n      }\n      else if  (event.layerX >= bottomRange9x && event.layerX <= topRange9x && event.layerY >= bottomRange9y && event.layerY <= topRange9y) {\n        this.setState({start9Move: true}) \n      }\n      else if  (event.layerX >= bottomRange10x && event.layerX <= topRange10x && event.layerY >= bottomRange10y && event.layerY <= topRange10y) {\n        this.setState({start10Move: true}) \n      }\n      else if  (event.layerX >= bottomRange11x && event.layerX <= topRange11x && event.layerY >= bottomRange11y && event.layerY <= topRange11y) {\n        this.setState({start11Move: true}) \n      }\n      else if  (event.layerX >= bottomRange12x && event.layerX <= topRange12x && event.layerY >= bottomRange12y && event.layerY <= topRange12y) {\n        this.setState({start12Move: true}) \n      }\n      else if  (event.layerX >= bottomRange13x && event.layerX <= topRange13x && event.layerY >= bottomRange13y && event.layerY <= topRange13y) {\n        this.setState({start13Move: true}) \n      }\n      else if  (event.layerX >= bottomRange14x && event.layerX <= topRange14x && event.layerY >= bottomRange14y && event.layerY <= topRange14y) {\n        this.setState({start14Move: true}) \n      }\n      else if  (event.layerX >= bottomRange15x && event.layerX <= topRange15x && event.layerY >= bottomRange15y && event.layerY <= topRange15y) {\n        this.setState({start15Move: true}) \n      }\n      else if  (event.layerX >= bottomRange16x && event.layerX <= topRange16x && event.layerY >= bottomRange16y && event.layerY <= topRange16y) {\n        this.setState({start16Move: true}) \n      }\n      else if  (event.layerX >= bottomRange17x && event.layerX <= topRange17x && event.layerY >= bottomRange17y && event.layerY <= topRange17y) {\n        this.setState({start17Move: true}) \n      }\n      else if  (event.layerX >= bottomRange18x && event.layerX <= topRange18x && event.layerY >= bottomRange18y && event.layerY <= topRange18y) {\n        this.setState({start18Move: true}) \n      }\n      else if  (event.layerX >= bottomRange19x && event.layerX <= topRange19x && event.layerY >= bottomRange19y && event.layerY <= topRange19y) {\n        this.setState({start19Move: true}) \n      }\n      else if  (event.layerX >= bottomRange20x && event.layerX <= topRange20x && event.layerY >= bottomRange20y && event.layerY <= topRange20y) {\n        this.setState({start20Move: true}) \n      }\n      else {\n        this.setState({\n          start1Move: false,\n          start2Move: false,\n          start3Move: false,\n          start4Move: false,\n          start5Move: false,\n          start6Move: false,\n          start7Move: false,\n          start8Move: false,\n          start9Move: false,\n          start10Move: false,\n          start11Move: false,\n          start12Move: false,\n          start13Move: false,\n          start14Move: false,\n          start15Move: false,\n          start16Move: false,\n          start17Move: false,\n          start18Move: false,\n          start19Move: false,\n          start20Move: false,\n        })\n      }\n\n      this.updateCanvas();\n      this.handleMouseEvent(event);\n    }\n   \n    //   points.find(point => { if (event.layerX && event.layerY === point + -5 || point + 5) {\n    //     console.log(point)\n    //     //  points.filter(clickedPoint => { if (clickedPoint[0] === point[0] + -5 || point[0] + 5) {\n    //       this.setState({\n    //         startMove: true,\n    //       })\n    //     })\n    //   }\n    \n\n    handleMouseEvent(event) {\n      let points = [this.state.circle1Pos, this.state.circle2Pos, this.state.circle3Pos, this.state.circle4Pos]\n      this.ctx.canvas.onmousemove = event => {\n        event.preventDefault();\n        points[0] = [event.layerX, event.layerY];\n        this.updateCanvas();\n      }\n\n      if (this.state.start1Move) {\n        console.log(this.state)\n        this.state.prevCircle1Pos = this.state.circle1Pos;\n        let square1distance1FromOsc1 = Math.sqrt(((this.state.circle1Pos[0] - this.state.square1Pos[0]) * (this.state.circle1Pos[0] - this.state.square1Pos[0])) + ((this.state.circle1Pos[1] - this.state.square1Pos[1]) * (this.state.circle1Pos[1] - this.state.square1Pos[1])))\n        let square2distance1FromOsc1 = Math.sqrt(((this.state.circle1Pos[0] - this.state.square2Pos[0]) * (this.state.circle1Pos[0] - this.state.square2Pos[0])) + ((this.state.circle1Pos[1] - this.state.square2Pos[1]) * (this.state.circle1Pos[1] - this.state.square2Pos[1])))\n        let square3distance1FromOsc1 = Math.sqrt(((this.state.circle1Pos[0] - this.state.square3Pos[0]) * (this.state.circle1Pos[0] - this.state.square3Pos[0])) + ((this.state.circle1Pos[1] - this.state.square3Pos[1]) * (this.state.circle1Pos[1] - this.state.square3Pos[1])))\n        let square4distance1FromOsc1 = Math.sqrt(((this.state.circle1Pos[0] - this.state.square4Pos[0]) * (this.state.circle1Pos[0] - this.state.square4Pos[0])) + ((this.state.circle1Pos[1] - this.state.square4Pos[1]) * (this.state.circle1Pos[1] - this.state.square4Pos[1])))\n        let square5distance1FromOsc1 = Math.sqrt(((this.state.circle1Pos[0] - this.state.square5Pos[0]) * (this.state.circle1Pos[0] - this.state.square5Pos[0])) + ((this.state.circle1Pos[1] - this.state.square5Pos[1]) * (this.state.circle1Pos[1] - this.state.square5Pos[1])))\n        let square6distance1FromOsc1 = Math.sqrt(((this.state.circle1Pos[0] - this.state.square6Pos[0]) * (this.state.circle1Pos[0] - this.state.square6Pos[0])) + ((this.state.circle1Pos[1] - this.state.square6Pos[1]) * (this.state.circle1Pos[1] - this.state.square6Pos[1])))\n        let square7distance1FromOsc1 = Math.sqrt(((this.state.circle1Pos[0] - this.state.square7Pos[0]) * (this.state.circle1Pos[0] - this.state.square7Pos[0])) + ((this.state.circle1Pos[1] - this.state.square7Pos[1]) * (this.state.circle1Pos[1] - this.state.square7Pos[1])))\n        let square8distance1FromOsc1 = Math.sqrt(((this.state.circle1Pos[0] - this.state.square8Pos[0]) * (this.state.circle1Pos[0] - this.state.square8Pos[0])) + ((this.state.circle1Pos[1] - this.state.square8Pos[1]) * (this.state.circle1Pos[1] - this.state.square8Pos[1])))\n        let square9distance1FromOsc1 = Math.sqrt(((this.state.circle1Pos[0] - this.state.square9Pos[0]) * (this.state.circle1Pos[0] - this.state.square9Pos[0])) + ((this.state.circle1Pos[1] - this.state.square9Pos[1]) * (this.state.circle1Pos[1] - this.state.square9Pos[1])))\n        let square10distance1FromOsc1 = Math.sqrt(((this.state.circle1Pos[0] - this.state.square10Pos[0]) * (this.state.circle1Pos[0] - this.state.square10Pos[0])) + ((this.state.circle1Pos[1] - this.state.square10Pos[1]) * (this.state.circle1Pos[1] - this.state.square10Pos[1])))\n        let square11distance1FromOsc1 = Math.sqrt(((this.state.circle1Pos[0] - this.state.square11Pos[0]) * (this.state.circle1Pos[0] - this.state.square11Pos[0])) + ((this.state.circle1Pos[1] - this.state.square11Pos[1]) * (this.state.circle1Pos[1] - this.state.square11Pos[1])))\n        let square12distance1FromOsc1 = Math.sqrt(((this.state.circle1Pos[0] - this.state.square12Pos[0]) * (this.state.circle1Pos[0] - this.state.square12Pos[0])) + ((this.state.circle1Pos[1] - this.state.square12Pos[1]) * (this.state.circle1Pos[1] - this.state.square12Pos[1])))\n        let square13distance1FromOsc1 = Math.sqrt(((this.state.circle1Pos[0] - this.state.square13Pos[0]) * (this.state.circle1Pos[0] - this.state.square13Pos[0])) + ((this.state.circle1Pos[1] - this.state.square13Pos[1]) * (this.state.circle1Pos[1] - this.state.square13Pos[1])))\n        let square14distance1FromOsc1 = Math.sqrt(((this.state.circle1Pos[0] - this.state.square14Pos[0]) * (this.state.circle1Pos[0] - this.state.square14Pos[0])) + ((this.state.circle1Pos[1] - this.state.square14Pos[1]) * (this.state.circle1Pos[1] - this.state.square14Pos[1])))\n        let square15distance1FromOsc1 = Math.sqrt(((this.state.circle1Pos[0] - this.state.square15Pos[0]) * (this.state.circle1Pos[0] - this.state.square15Pos[0])) + ((this.state.circle1Pos[1] - this.state.square15Pos[1]) * (this.state.circle1Pos[1] - this.state.square15Pos[1])))\n        let square16distance1FromOsc1 = Math.sqrt(((this.state.circle1Pos[0] - this.state.square15Pos[0]) * (this.state.circle1Pos[0] - this.state.square16Pos[0])) + ((this.state.circle1Pos[1] - this.state.square16Pos[1]) * (this.state.circle1Pos[1] - this.state.square16Pos[1])))\n        \n        var posX = event.layerX;\n        var posY = event.layerY;\n         if (posX < 0) {\n          posX = 0;\n        }\n\n        if (posY < 0) {\n          posY = 0;\n        }\n\n        if (posX > this.props.width) {\n          posX = this.props.width;\n        }\n\n        if (posY > this.props.height) {\n          posY = this.props.height;\n        }\n\n        this.setState({\n          circle1Pos: [posX, posY],\n          square1distanceFromOsc1: square1distance1FromOsc1,\n          square2distanceFromOsc1: square2distance1FromOsc1,\n          square3distanceFromOsc1: square3distance1FromOsc1,\n          square4distanceFromOsc1: square4distance1FromOsc1,\n          square5distanceFromOsc1: square5distance1FromOsc1,\n          square6distanceFromOsc1: square6distance1FromOsc1,\n          square7distanceFromOsc1: square7distance1FromOsc1,\n          square8distanceFromOsc1: square8distance1FromOsc1,\n          square9distanceFromOsc1: square9distance1FromOsc1,\n          square10distanceFromOsc1: square10distance1FromOsc1,\n          square11distanceFromOsc1: square11distance1FromOsc1,\n          square12distanceFromOsc1: square12distance1FromOsc1,\n          square13distanceFromOsc1: square13distance1FromOsc1,\n          square14distanceFromOsc1: square14distance1FromOsc1,\n          square15distanceFromOsc1: square15distance1FromOsc1,\n          square16distanceFromOsc1: square16distance1FromOsc1,\n        });\n        console.log(this.square1distance1FromOsc1)\n        this.updateCanvas();\n        this.updateFrequencyOSC(posY)\n        // this.changeOSC1filter2Depth(square4distance1FromOsc1);\n        // this.changeOSC1filter2Rate(square4distance1FromOsc1);\n        \n      }\n\n      if (this.state.start2Move) {\n        console.log('heyyyyyyyyyyyyyyy')\n        console.log(this.state.circle2Pos, this.state.square1Pos)\n        this.state.prevCircle2Pos = this.state.circle2Pos;\n        let square1distance2FromOsc2 = Math.sqrt(((this.state.circle2Pos[0] - this.state.square1Pos[0]) * (this.state.circle2Pos[0] - this.state.square1Pos[0])) + ((this.state.circle2Pos[1] - this.state.square1Pos[1]) * (this.state.circle2Pos[1] - this.state.square1Pos[1])))\n        let square2distance2FromOsc2 = Math.sqrt(((this.state.circle2Pos[0] - this.state.square2Pos[0]) * (this.state.circle2Pos[0] - this.state.square2Pos[0])) + ((this.state.circle2Pos[1] - this.state.square2Pos[1]) * (this.state.circle2Pos[1] - this.state.square2Pos[1])))\n        let square3distance2FromOsc2 = Math.sqrt(((this.state.circle2Pos[0] - this.state.square3Pos[0]) * (this.state.circle2Pos[0] - this.state.square3Pos[0])) + ((this.state.circle2Pos[1] - this.state.square3Pos[1]) * (this.state.circle2Pos[1] - this.state.square3Pos[1])))\n        let square4distance2FromOsc2 = Math.sqrt(((this.state.circle2Pos[0] - this.state.square4Pos[0]) * (this.state.circle2Pos[0] - this.state.square4Pos[0])) + ((this.state.circle2Pos[1] - this.state.square4Pos[1]) * (this.state.circle2Pos[1] - this.state.square4Pos[1])))\n        let square5distance2FromOsc2 = Math.sqrt(((this.state.circle2Pos[0] - this.state.square5Pos[0]) * (this.state.circle2Pos[0] - this.state.square5Pos[0])) + ((this.state.circle2Pos[1] - this.state.square5Pos[1]) * (this.state.circle2Pos[1] - this.state.square5Pos[1])))\n        let square6distance2FromOsc2 = Math.sqrt(((this.state.circle2Pos[0] - this.state.square6Pos[0]) * (this.state.circle2Pos[0] - this.state.square6Pos[0])) + ((this.state.circle2Pos[1] - this.state.square6Pos[1]) * (this.state.circle2Pos[1] - this.state.square6Pos[1])))\n        let square7distance2FromOsc2 = Math.sqrt(((this.state.circle2Pos[0] - this.state.square7Pos[0]) * (this.state.circle2Pos[0] - this.state.square7Pos[0])) + ((this.state.circle2Pos[1] - this.state.square7Pos[1]) * (this.state.circle2Pos[1] - this.state.square7Pos[1])))\n        let square8distance2FromOsc2 = Math.sqrt(((this.state.circle2Pos[0] - this.state.square8Pos[0]) * (this.state.circle2Pos[0] - this.state.square8Pos[0])) + ((this.state.circle2Pos[1] - this.state.square8Pos[1]) * (this.state.circle2Pos[1] - this.state.square8Pos[1])))\n        let square9distance2FromOsc2 = Math.sqrt(((this.state.circle2Pos[0] - this.state.square9Pos[0]) * (this.state.circle2Pos[0] - this.state.square9Pos[0])) + ((this.state.circle2Pos[1] - this.state.square9Pos[1]) * (this.state.circle2Pos[1] - this.state.square9Pos[1])))\n        let square10distance2FromOsc2 = Math.sqrt(((this.state.circle2Pos[0] - this.state.square10Pos[0]) * (this.state.circle2Pos[0] - this.state.square10Pos[0])) + ((this.state.circle2Pos[1] - this.state.square10Pos[1]) * (this.state.circle2Pos[1] - this.state.square10Pos[1])))\n        let square11distance2FromOsc2 = Math.sqrt(((this.state.circle2Pos[0] - this.state.square11Pos[0]) * (this.state.circle2Pos[0] - this.state.square11Pos[0])) + ((this.state.circle2Pos[1] - this.state.square11Pos[1]) * (this.state.circle2Pos[1] - this.state.square11Pos[1])))\n        let square12distance2FromOsc2 = Math.sqrt(((this.state.circle2Pos[0] - this.state.square12Pos[0]) * (this.state.circle2Pos[0] - this.state.square12Pos[0])) + ((this.state.circle2Pos[1] - this.state.square12Pos[1]) * (this.state.circle2Pos[1] - this.state.square12Pos[1])))\n        let square13distance2FromOsc2 = Math.sqrt(((this.state.circle2Pos[0] - this.state.square13Pos[0]) * (this.state.circle2Pos[0] - this.state.square13Pos[0])) + ((this.state.circle2Pos[1] - this.state.square13Pos[1]) * (this.state.circle2Pos[1] - this.state.square13Pos[1])))\n        let square14distance2FromOsc2 = Math.sqrt(((this.state.circle2Pos[0] - this.state.square14Pos[0]) * (this.state.circle2Pos[0] - this.state.square14Pos[0])) + ((this.state.circle2Pos[1] - this.state.square14Pos[1]) * (this.state.circle2Pos[1] - this.state.square14Pos[1])))\n        let square15distance2FromOsc2 = Math.sqrt(((this.state.circle2Pos[0] - this.state.square15Pos[0]) * (this.state.circle2Pos[0] - this.state.square15Pos[0])) + ((this.state.circle2Pos[1] - this.state.square15Pos[1]) * (this.state.circle2Pos[1] - this.state.square15Pos[1])))\n        let square16distance2FromOsc2 = Math.sqrt(((this.state.circle2Pos[0] - this.state.square15Pos[0]) * (this.state.circle2Pos[0] - this.state.square16Pos[0])) + ((this.state.circle2Pos[1] - this.state.square16Pos[1]) * (this.state.circle2Pos[1] - this.state.square16Pos[1])))\n        console.log(square1distance2FromOsc2)\n        var posX = event.layerX;\n        var posY = event.layerY;\n         if (posX < 0) {\n          posX = 0;\n        }\n\n        if (posY < 0) {\n          posY = 0;\n        }\n\n        if (posX > this.props.width) {\n          posX = this.props.width;\n        }\n\n        if (posY > this.props.height) {\n          posY = this.props.height;\n        }\n\n        this.setState({\n          circle2Pos: [posX, posY],\n          square1distanceFromOsc2: square1distance2FromOsc2,\n          square2distanceFromOsc2: square2distance2FromOsc2,\n          square3distanceFromOsc2: square3distance2FromOsc2,\n          square4distanceFromOsc2: square4distance2FromOsc2,\n          square5distanceFromOsc2: square5distance2FromOsc2,\n          square6distanceFromOsc2: square6distance2FromOsc2,\n          square7distanceFromOsc2: square7distance2FromOsc2,\n          square8distanceFromOsc2: square8distance2FromOsc2,\n          square9distanceFromOsc2: square9distance2FromOsc2,\n          square10distanceFromOsc2: square10distance2FromOsc2,\n          square11distanceFromOsc2: square11distance2FromOsc2,\n          square12distanceFromOsc2: square12distance2FromOsc2,\n          square13distanceFromOsc2: square13distance2FromOsc2,\n          square14distanceFromOsc2: square14distance2FromOsc2,\n          square15distanceFromOsc2: square15distance2FromOsc2,\n          square16distanceFromOsc2: square16distance2FromOsc2,\n\n        });\n        console.log(square10distance2FromOsc2)\n        this.updateCanvas();\n        this.updateFrequencyOSC2(posY)\n      }\n\n      if (this.state.start3Move) {\n        this.state.prevCircle3Pos = this.state.circle3Pos;\n        let square1distance3FromOsc3 = Math.sqrt(((this.state.circle3Pos[0] - this.state.square1Pos[0]) * (this.state.circle3Pos[0] - this.state.square1Pos[0])) + ((this.state.circle3Pos[1] - this.state.square1Pos[1]) * (this.state.circle3Pos[1] - this.state.square1Pos[1])))\n        let square2distance3FromOsc3 = Math.sqrt(((this.state.circle3Pos[0] - this.state.square2Pos[0]) * (this.state.circle3Pos[0] - this.state.square2Pos[0])) + ((this.state.circle3Pos[1] - this.state.square2Pos[1]) * (this.state.circle3Pos[1] - this.state.square2Pos[1])))\n        let square3distance3FromOsc3 = Math.sqrt(((this.state.circle3Pos[0] - this.state.square3Pos[0]) * (this.state.circle3Pos[0] - this.state.square3Pos[0])) + ((this.state.circle3Pos[1] - this.state.square3Pos[1]) * (this.state.circle3Pos[1] - this.state.square3Pos[1])))\n        let square4distance3FromOsc3 = Math.sqrt(((this.state.circle3Pos[0] - this.state.square4Pos[0]) * (this.state.circle3Pos[0] - this.state.square4Pos[0])) + ((this.state.circle3Pos[1] - this.state.square4Pos[1]) * (this.state.circle3Pos[1] - this.state.square4Pos[1])))\n        let square5distance3FromOsc3 = Math.sqrt(((this.state.circle3Pos[0] - this.state.square5Pos[0]) * (this.state.circle3Pos[0] - this.state.square5Pos[0])) + ((this.state.circle3Pos[1] - this.state.square5Pos[1]) * (this.state.circle3Pos[1] - this.state.square5Pos[1])))\n        let square6distance3FromOsc3 = Math.sqrt(((this.state.circle3Pos[0] - this.state.square6Pos[0]) * (this.state.circle3Pos[0] - this.state.square6Pos[0])) + ((this.state.circle3Pos[1] - this.state.square6Pos[1]) * (this.state.circle3Pos[1] - this.state.square6Pos[1])))\n        let square7distance3FromOsc3 = Math.sqrt(((this.state.circle3Pos[0] - this.state.square7Pos[0]) * (this.state.circle3Pos[0] - this.state.square7Pos[0])) + ((this.state.circle3Pos[1] - this.state.square7Pos[1]) * (this.state.circle3Pos[1] - this.state.square7Pos[1])))\n        let square8distance3FromOsc3 = Math.sqrt(((this.state.circle3Pos[0] - this.state.square8Pos[0]) * (this.state.circle3Pos[0] - this.state.square8Pos[0])) + ((this.state.circle3Pos[1] - this.state.square8Pos[1]) * (this.state.circle3Pos[1] - this.state.square8Pos[1])))\n        let square9distance3FromOsc3 = Math.sqrt(((this.state.circle3Pos[0] - this.state.square9Pos[0]) * (this.state.circle3Pos[0] - this.state.square9Pos[0])) + ((this.state.circle3Pos[1] - this.state.square9Pos[1]) * (this.state.circle3Pos[1] - this.state.square9Pos[1])))\n        let square10distance3FromOsc3 = Math.sqrt(((this.state.circle3Pos[0] - this.state.square10Pos[0]) * (this.state.circle3Pos[0] - this.state.square10Pos[0])) + ((this.state.circle3Pos[1] - this.state.square10Pos[1]) * (this.state.circle3Pos[1] - this.state.square10Pos[1])))\n        let square11distance3FromOsc3 = Math.sqrt(((this.state.circle3Pos[0] - this.state.square11Pos[0]) * (this.state.circle3Pos[0] - this.state.square11Pos[0])) + ((this.state.circle3Pos[1] - this.state.square11Pos[1]) * (this.state.circle3Pos[1] - this.state.square11Pos[1])))\n        let square12distance3FromOsc3 = Math.sqrt(((this.state.circle3Pos[0] - this.state.square12Pos[0]) * (this.state.circle3Pos[0] - this.state.square12Pos[0])) + ((this.state.circle3Pos[1] - this.state.square12Pos[1]) * (this.state.circle3Pos[1] - this.state.square12Pos[1])))\n        let square13distance3FromOsc3 = Math.sqrt(((this.state.circle3Pos[0] - this.state.square13Pos[0]) * (this.state.circle3Pos[0] - this.state.square13Pos[0])) + ((this.state.circle3Pos[1] - this.state.square13Pos[1]) * (this.state.circle3Pos[1] - this.state.square13Pos[1])))\n        let square14distance3FromOsc3 = Math.sqrt(((this.state.circle3Pos[0] - this.state.square14Pos[0]) * (this.state.circle3Pos[0] - this.state.square14Pos[0])) + ((this.state.circle3Pos[1] - this.state.square14Pos[1]) * (this.state.circle3Pos[1] - this.state.square14Pos[1])))\n        let square15distance3FromOsc3 = Math.sqrt(((this.state.circle3Pos[0] - this.state.square15Pos[0]) * (this.state.circle3Pos[0] - this.state.square15Pos[0])) + ((this.state.circle3Pos[1] - this.state.square15Pos[1]) * (this.state.circle3Pos[1] - this.state.square15Pos[1])))\n        let square16distance3FromOsc3 = Math.sqrt(((this.state.circle3Pos[0] - this.state.square15Pos[0]) * (this.state.circle3Pos[0] - this.state.square16Pos[0])) + ((this.state.circle3Pos[1] - this.state.square16Pos[1]) * (this.state.circle3Pos[1] - this.state.square16Pos[1])))\n        var posX = event.layerX;\n        var posY = event.layerY;\n         if (posX < 0) {\n          posX = 0;\n        }\n\n        if (posY < 0) {\n          posY = 0;\n        }\n\n        if (posX > this.props.width) {\n          posX = this.props.width;\n        }\n\n        if (posY > this.props.height) {\n          posY = this.props.height;\n        }\n\n        this.setState({\n          circle3Pos: [posX, posY],\n          square1distanceFromOsc3: square1distance3FromOsc3,\n          square2distanceFromOsc3: square2distance3FromOsc3,\n          square3distanceFromOsc3: square3distance3FromOsc3,\n          square4distanceFromOsc3: square4distance3FromOsc3,\n          square5distanceFromOsc3: square5distance3FromOsc3,\n          square6distanceFromOsc3: square6distance3FromOsc3,\n          square7distanceFromOsc3: square7distance3FromOsc3,\n          square8distanceFromOsc3: square8distance3FromOsc3,\n          square9distanceFromOsc3: square9distance3FromOsc3,\n          square10distanceFromOsc3: square10distance3FromOsc3,\n          square11distanceFromOsc3: square11distance3FromOsc3,\n          square12distanceFromOsc3: square12distance3FromOsc3,\n          square13distanceFromOsc3: square13distance3FromOsc3,\n          square14distanceFromOsc3: square14distance3FromOsc3,\n          square15distanceFromOsc3: square15distance3FromOsc3,\n          square16distanceFromOsc3: square16distance3FromOsc3,\n\n        });\n        \n        this.updateCanvas();\n        this.updateFrequencyOSC3(posY)\n      }\n\n      if (this.state.start4Move) {\n        \n        this.state.prevCircle4Pos = this.state.circle4Pos;\n        let square1distance4FromOsc4 = Math.sqrt(((this.state.circle4Pos[0] - this.state.square1Pos[0]) * (this.state.circle4Pos[0] - this.state.square1Pos[0])) + ((this.state.circle4Pos[1] - this.state.square1Pos[1]) * (this.state.circle4Pos[1] - this.state.square1Pos[1])))\n        let square2distance4FromOsc4 = Math.sqrt(((this.state.circle4Pos[0] - this.state.square2Pos[0]) * (this.state.circle4Pos[0] - this.state.square2Pos[0])) + ((this.state.circle4Pos[1] - this.state.square2Pos[1]) * (this.state.circle4Pos[1] - this.state.square2Pos[1])))\n        let square3distance4FromOsc4 = Math.sqrt(((this.state.circle4Pos[0] - this.state.square3Pos[0]) * (this.state.circle4Pos[0] - this.state.square3Pos[0])) + ((this.state.circle4Pos[1] - this.state.square3Pos[1]) * (this.state.circle4Pos[1] - this.state.square3Pos[1])))\n        let square4distance4FromOsc4 = Math.sqrt(((this.state.circle4Pos[0] - this.state.square4Pos[0]) * (this.state.circle4Pos[0] - this.state.square4Pos[0])) + ((this.state.circle4Pos[1] - this.state.square4Pos[1]) * (this.state.circle4Pos[1] - this.state.square4Pos[1])))\n        let square5distance4FromOsc4 = Math.sqrt(((this.state.circle4Pos[0] - this.state.square5Pos[0]) * (this.state.circle4Pos[0] - this.state.square5Pos[0])) + ((this.state.circle4Pos[1] - this.state.square5Pos[1]) * (this.state.circle4Pos[1] - this.state.square5Pos[1])))\n        let square6distance4FromOsc4 = Math.sqrt(((this.state.circle4Pos[0] - this.state.square6Pos[0]) * (this.state.circle4Pos[0] - this.state.square6Pos[0])) + ((this.state.circle4Pos[1] - this.state.square6Pos[1]) * (this.state.circle4Pos[1] - this.state.square6Pos[1])))\n        let square7distance4FromOsc4 = Math.sqrt(((this.state.circle4Pos[0] - this.state.square7Pos[0]) * (this.state.circle4Pos[0] - this.state.square7Pos[0])) + ((this.state.circle4Pos[1] - this.state.square7Pos[1]) * (this.state.circle4Pos[1] - this.state.square7Pos[1])))\n        let square8distance4FromOsc4 = Math.sqrt(((this.state.circle4Pos[0] - this.state.square8Pos[0]) * (this.state.circle4Pos[0] - this.state.square8Pos[0])) + ((this.state.circle4Pos[1] - this.state.square8Pos[1]) * (this.state.circle4Pos[1] - this.state.square8Pos[1])))\n        let square9distance4FromOsc4 = Math.sqrt(((this.state.circle4Pos[0] - this.state.square9Pos[0]) * (this.state.circle4Pos[0] - this.state.square9Pos[0])) + ((this.state.circle4Pos[1] - this.state.square9Pos[1]) * (this.state.circle4Pos[1] - this.state.square9Pos[1])))\n        let square10distance4FromOsc4 = Math.sqrt(((this.state.circle4Pos[0] - this.state.square10Pos[0]) * (this.state.circle4Pos[0] - this.state.square10Pos[0])) + ((this.state.circle4Pos[1] - this.state.square10Pos[1]) * (this.state.circle4Pos[1] - this.state.square10Pos[1])))\n        let square11distance4FromOsc4 = Math.sqrt(((this.state.circle4Pos[0] - this.state.square11Pos[0]) * (this.state.circle4Pos[0] - this.state.square11Pos[0])) + ((this.state.circle4Pos[1] - this.state.square11Pos[1]) * (this.state.circle4Pos[1] - this.state.square11Pos[1])))\n        let square12distance4FromOsc4 = Math.sqrt(((this.state.circle4Pos[0] - this.state.square12Pos[0]) * (this.state.circle4Pos[0] - this.state.square12Pos[0])) + ((this.state.circle4Pos[1] - this.state.square12Pos[1]) * (this.state.circle4Pos[1] - this.state.square12Pos[1])))\n        let square13distance4FromOsc4 = Math.sqrt(((this.state.circle4Pos[0] - this.state.square13Pos[0]) * (this.state.circle4Pos[0] - this.state.square13Pos[0])) + ((this.state.circle4Pos[1] - this.state.square13Pos[1]) * (this.state.circle4Pos[1] - this.state.square13Pos[1])))\n        let square14distance4FromOsc4 = Math.sqrt(((this.state.circle4Pos[0] - this.state.square14Pos[0]) * (this.state.circle4Pos[0] - this.state.square14Pos[0])) + ((this.state.circle4Pos[1] - this.state.square14Pos[1]) * (this.state.circle4Pos[1] - this.state.square14Pos[1])))\n        let square15distance4FromOsc4 = Math.sqrt(((this.state.circle4Pos[0] - this.state.square15Pos[0]) * (this.state.circle4Pos[0] - this.state.square15Pos[0])) + ((this.state.circle4Pos[1] - this.state.square15Pos[1]) * (this.state.circle4Pos[1] - this.state.square15Pos[1])))\n        let square16distance4FromOsc4 = Math.sqrt(((this.state.circle4Pos[0] - this.state.square15Pos[0]) * (this.state.circle4Pos[0] - this.state.square16Pos[0])) + ((this.state.circle4Pos[1] - this.state.square16Pos[1]) * (this.state.circle4Pos[1] - this.state.square16Pos[1])))\n        var posX = event.layerX;\n        var posY = event.layerY;\n         if (posX < 0) {\n          posX = 0;\n        }\n\n        if (posY < 0) {\n          posY = 0;\n        }\n\n        if (posX > this.props.width) {\n          posX = this.props.width;\n        }\n\n        if (posY > this.props.height) {\n          posY = this.props.height;\n        }\n\n        this.setState({\n          circle4Pos: [posX, posY],\n          square1distanceFromOsc4: square1distance4FromOsc4,\n          square2distanceFromOsc4: square2distance4FromOsc4,\n          square3distanceFromOsc4: square3distance4FromOsc4,\n          square4distanceFromOsc4: square4distance4FromOsc4,\n          square5distanceFromOsc4: square5distance4FromOsc4,\n          square6distanceFromOsc4: square6distance4FromOsc4,\n          square7distanceFromOsc4: square7distance4FromOsc4,\n          square8distanceFromOsc4: square8distance4FromOsc4,\n          square9distanceFromOsc4: square9distance4FromOsc4,\n          square10distanceFromOsc4: square10distance4FromOsc4,\n          square11distanceFromOsc4: square11distance4FromOsc4,\n          square12distanceFromOsc4: square12distance4FromOsc4,\n          square13distanceFromOsc4: square13distance4FromOsc4,\n          square14distanceFromOsc4: square14distance4FromOsc4,\n          square15distanceFromOsc4: square15distance4FromOsc4,\n          square16distanceFromOsc4: square16distance4FromOsc4,\n        });\n        console.log(this.state)\n        this.updateCanvas();\n        this.updateFrequencyOSC4(posY)\n      }\n\n      if (this.state.start5Move) {\n        this.state.prevSquare1Pos = this.state.square1Pos;\n        \n        console.log(this.state.square1Pos, this.state.circle1Pos)\n        let square1distance5FromOsc1 = Math.sqrt(((this.state.circle1Pos[0] - this.state.square1Pos[0]) * (this.state.circle1Pos[0] - this.state.square1Pos[0])) + ((this.state.circle1Pos[1] - this.state.square1Pos[1]) * (this.state.circle1Pos[1] - this.state.square1Pos[1])))\n        let square1distance5FromOsc2 = Math.sqrt(((this.state.circle2Pos[0] - this.state.square1Pos[0]) * (this.state.circle2Pos[0] - this.state.square1Pos[0])) + ((this.state.circle2Pos[1] - this.state.square1Pos[1]) * (this.state.circle2Pos[1] - this.state.square1Pos[1])))\n        let square1distance5FromOsc3 = Math.sqrt(((this.state.circle3Pos[0] - this.state.square1Pos[0]) * (this.state.circle3Pos[0] - this.state.square1Pos[0])) + ((this.state.circle3Pos[1] - this.state.square1Pos[1]) * (this.state.circle3Pos[1] - this.state.square1Pos[1])))\n        let square1distance5FromOsc4 = Math.sqrt(((this.state.circle4Pos[0] - this.state.square1Pos[0]) * (this.state.circle4Pos[0] - this.state.square1Pos[0])) + ((this.state.circle4Pos[1] - this.state.square1Pos[1]) * (this.state.circle4Pos[1] - this.state.square1Pos[1])))\n        var posX = event.layerX;\n        var posY = event.layerY;\n         if (posX < 0) {\n          posX = 0;\n        }\n\n        if (posY < 0) {\n          posY = 0;\n        }\n\n        if (posX > this.props.width) {\n          posX = this.props.width;\n        }\n\n        if (posY > this.props.height) {\n          posY = this.props.height;\n        }\n\n        this.setState({\n          square1Pos: [posX, posY],\n          square1distanceFromOsc1: square1distance5FromOsc1,\n          square1distanceFromOsc2: square1distance5FromOsc2,\n          square1distanceFromOsc3: square1distance5FromOsc3,\n          square1distanceFromOsc4: square1distance5FromOsc4,\n        });\n        console.log(square1distance5FromOsc1)\n        this.updateCanvas();\n        this.updateLFOType();\n        this.updateLFOFreq(square1distance5FromOsc1);\n        this.updateLFO2Type();\n        this.updateLFO2Freq(square1distance5FromOsc2);\n        this.updateLFO3Type();\n        this.updateLFO3Freq(square1distance5FromOsc3);\n        this.updateLFO4Type();\n        this.updateLFO4Freq(square1distance5FromOsc4);\n      }\n\n      if (this.state.start6Move) {\n        this.state.prevSquare2Pos = this.state.square2Pos;\n        \n        let square2distance6FromOsc1 = Math.sqrt(((this.state.circle1Pos[0] - this.state.square2Pos[0]) * (this.state.circle1Pos[0] - this.state.square2Pos[0])) + ((this.state.circle1Pos[1] - this.state.square2Pos[1]) * (this.state.circle1Pos[1] - this.state.square2Pos[1])))\n        let square2distance6FromOsc2 = Math.sqrt(((this.state.circle2Pos[0] - this.state.square2Pos[0]) * (this.state.circle2Pos[0] - this.state.square2Pos[0])) + ((this.state.circle2Pos[1] - this.state.square2Pos[1]) * (this.state.circle2Pos[1] - this.state.square2Pos[1])))\n        let square2distance6FromOsc3 = Math.sqrt(((this.state.circle3Pos[0] - this.state.square2Pos[0]) * (this.state.circle3Pos[0] - this.state.square2Pos[0])) + ((this.state.circle3Pos[1] - this.state.square2Pos[1]) * (this.state.circle3Pos[1] - this.state.square2Pos[1])))\n        let square2distance6FromOsc4 = Math.sqrt(((this.state.circle4Pos[0] - this.state.square2Pos[0]) * (this.state.circle4Pos[0] - this.state.square2Pos[0])) + ((this.state.circle4Pos[1] - this.state.square2Pos[1]) * (this.state.circle4Pos[1] - this.state.square2Pos[1])))\n        var posX = event.layerX;\n        var posY = event.layerY;\n         if (posX < 0) {\n          posX = 0;\n        }\n\n        if (posY < 0) {\n          posY = 0;\n        }\n\n        if (posX > this.props.width) {\n          posX = this.props.width;\n        }\n\n        if (posY > this.props.height) {\n          posY = this.props.height;\n        }\n\n        this.setState({\n          square2Pos: [posX, posY],\n          square2distanceFromOsc1: square2distance6FromOsc1,\n          square2distanceFromOsc2: square2distance6FromOsc2,\n          square2distanceFromOsc3: square2distance6FromOsc3,\n          square2distanceFromOsc4: square2distance6FromOsc4,\n        });\n\n        console.log(square2distance6FromOsc3)\n        \n        this.updateOSC1chorusDepth(square2distance6FromOsc1);\n        this.updateOCS1chorusRate(square2distance6FromOsc1);\n        this.updateOSC2chorusDepth(square2distance6FromOsc2);\n        this.updateOCS2chorusRate(square2distance6FromOsc2);\n        this.updateOSC3chorusDepth(square2distance6FromOsc3);\n        this.updateOCS3chorusRate(square2distance6FromOsc3);\n        this.updateOSC4chorusDepth(square2distance6FromOsc4);\n        this.updateOCS4chorusRate(square2distance6FromOsc4);\n        this.updateCanvas();\n      }\n\n      if (this.state.start7Move) {\n        this.state.prevSquare3Pos = this.state.square3Pos;\n        \n        let square3distance7FromOsc1 = Math.sqrt(((this.state.circle1Pos[0] - this.state.square3Pos[0]) * (this.state.circle1Pos[0] - this.state.square3Pos[0])) + ((this.state.circle1Pos[1] - this.state.square3Pos[1]) * (this.state.circle1Pos[1] - this.state.square3Pos[1])))\n        let square3distance7FromOsc2 = Math.sqrt(((this.state.circle2Pos[0] - this.state.square3Pos[0]) * (this.state.circle2Pos[0] - this.state.square3Pos[0])) + ((this.state.circle2Pos[1] - this.state.square3Pos[1]) * (this.state.circle2Pos[1] - this.state.square3Pos[1])))\n        let square3distance7FromOsc3 = Math.sqrt(((this.state.circle3Pos[0] - this.state.square3Pos[0]) * (this.state.circle3Pos[0] - this.state.square3Pos[0])) + ((this.state.circle3Pos[1] - this.state.square3Pos[1]) * (this.state.circle3Pos[1] - this.state.square3Pos[1])))\n        let square3distance7FromOsc4 = Math.sqrt(((this.state.circle4Pos[0] - this.state.square3Pos[0]) * (this.state.circle4Pos[0] - this.state.square3Pos[0])) + ((this.state.circle4Pos[1] - this.state.square3Pos[1]) * (this.state.circle4Pos[1] - this.state.square3Pos[1])))\n        var posX = event.layerX;\n        var posY = event.layerY;\n         if (posX < 0) {\n          posX = 0;\n        }\n\n        if (posY < 0) {\n          posY = 0;\n        }\n\n        if (posX > this.props.width) {\n          posX = this.props.width;\n        }\n\n        if (posY > this.props.height) {\n          posY = this.props.height;\n        }\n\n        this.setState({\n          square3Pos: [posX, posY],\n          square3distanceFromOsc1: square3distance7FromOsc1,\n          square3distanceFromOsc2: square3distance7FromOsc2,\n          square3distanceFromOsc3: square3distance7FromOsc3,\n          square3distanceFromOsc4: square3distance7FromOsc4,\n        });\n\n        console.log(square3distance7FromOsc4)\n\n        this.updateOSC1filterDepth(square3distance7FromOsc1);\n        this.updateOSC1filterRate(square3distance7FromOsc1);\n        this.updateOSC2filterDepth(square3distance7FromOsc2);\n        this.updateOSC2filterRate(square3distance7FromOsc2);\n        this.updateOSC3filterDepth(square3distance7FromOsc3);\n        this.updateOSC3filterRate(square3distance7FromOsc3);\n        this.updateOSC4filterDepth(square3distance7FromOsc4);\n        this.updateOSC4filterRate(square3distance7FromOsc4);\n\n        this.updateCanvas();\n      }  \n\n      if (this.state.start8Move) {\n        this.state.prevSquare4Pos = this.state.square4Pos;\n        \n        let square4distance8FromOsc1 = Math.sqrt(((this.state.circle1Pos[0] - this.state.square4Pos[0]) * (this.state.circle1Pos[0] - this.state.square4Pos[0])) + ((this.state.circle1Pos[1] - this.state.square4Pos[1]) * (this.state.circle1Pos[1] - this.state.square4Pos[1])))\n        let square4distance8FromOsc2 = Math.sqrt(((this.state.circle2Pos[0] - this.state.square4Pos[0]) * (this.state.circle2Pos[0] - this.state.square4Pos[0])) + ((this.state.circle2Pos[1] - this.state.square4Pos[1]) * (this.state.circle2Pos[1] - this.state.square4Pos[1])))\n        let square4distance8FromOsc3 = Math.sqrt(((this.state.circle3Pos[0] - this.state.square4Pos[0]) * (this.state.circle3Pos[0] - this.state.square4Pos[0])) + ((this.state.circle3Pos[1] - this.state.square4Pos[1]) * (this.state.circle3Pos[1] - this.state.square4Pos[1])))\n        let square4distance8FromOsc4 = Math.sqrt(((this.state.circle4Pos[0] - this.state.square4Pos[0]) * (this.state.circle4Pos[0] - this.state.square4Pos[0])) + ((this.state.circle4Pos[1] - this.state.square4Pos[1]) * (this.state.circle4Pos[1] - this.state.square4Pos[1])))\n        var posX = event.layerX;\n        var posY = event.layerY;\n         if (posX < 0) {\n          posX = 0;\n        }\n\n        if (posY < 0) {\n          posY = 0;\n        }\n\n        if (posX > this.props.width) {\n          posX = this.props.width;\n        }\n\n        if (posY > this.props.height) {\n          posY = this.props.height;\n        }\n\n        this.setState({\n          square4Pos: [posX, posY],\n          square4distanceFromOsc1: square4distance8FromOsc1,\n          square4distanceFromOsc2: square4distance8FromOsc2,\n          square4distanceFromOsc3: square4distance8FromOsc3,\n          square4distanceFromOsc4: square4distance8FromOsc4,\n        });\n\n        console.log(square4distance8FromOsc4.value)\n\n        this.updateOSC1filter2Depth(square4distance8FromOsc1);\n        this.updateOSC1filter2Rate(square4distance8FromOsc1);\n        this.updateOSC2filter2Depth(square4distance8FromOsc2);\n        this.updateOSC2filter2Rate(square4distance8FromOsc2);\n        this.updateOSC3filter2Depth(square4distance8FromOsc3);\n        this.updateOSC3filter2Rate(square4distance8FromOsc3);\n        this.updateOSC4filter2Depth(square4distance8FromOsc4);\n        this.updateOSC4filter2Rate(square4distance8FromOsc4);\n        \n        \n        this.updateCanvas();\n      }\n\n      if (this.state.start9Move) {\n        this.state.prevSquare5Pos = this.state.square5Pos\n        console.log('=========================================================================')\n        let square5distance9FromOsc1 = Math.sqrt(((this.state.circle1Pos[0] - this.state.square5Pos[0]) * (this.state.circle1Pos[0] - this.state.square5Pos[0])) + ((this.state.circle1Pos[1] - this.state.square5Pos[1]) * (this.state.circle1Pos[1] - this.state.square5Pos[1])))\n        let square5distance9FromOsc2 = Math.sqrt(((this.state.circle2Pos[0] - this.state.square5Pos[0]) * (this.state.circle2Pos[0] - this.state.square5Pos[0])) + ((this.state.circle2Pos[1] - this.state.square5Pos[1]) * (this.state.circle2Pos[1] - this.state.square5Pos[1])))\n        let square5distance9FromOsc3 = Math.sqrt(((this.state.circle3Pos[0] - this.state.square5Pos[0]) * (this.state.circle3Pos[0] - this.state.square5Pos[0])) + ((this.state.circle3Pos[1] - this.state.square5Pos[1]) * (this.state.circle3Pos[1] - this.state.square5Pos[1])))\n        let square5distance9FromOsc4 = Math.sqrt(((this.state.circle4Pos[0] - this.state.square5Pos[0]) * (this.state.circle4Pos[0] - this.state.square5Pos[0])) + ((this.state.circle4Pos[1] - this.state.square5Pos[1]) * (this.state.circle4Pos[1] - this.state.square5Pos[1])))\n        var posX = event.layerX;\n        var posY = event.layerY;\n         if (posX < 0) {\n          posX = 0;\n        }\n\n        if (posY < 0) {\n          posY = 0;\n        }\n\n        if (posX > this.props.width) {\n          posX = this.props.width;\n        }\n\n        if (posY > this.props.height) {\n          posY = this.props.height;\n        }\n\n        this.setState({\n          square5Pos: [posX, posY],\n          square5distanceFromOsc1: square5distance9FromOsc1,\n          square5distanceFromOsc2: square5distance9FromOsc2,\n          square5distanceFromOsc3: square5distance9FromOsc3,\n          square5distanceFromOsc4: square5distance9FromOsc4,\n        });\n        console.log(square5distance9FromOsc4)\n        this.updateCanvas();\n\n        this.updateOSC1tremoloIntensity(square5distance9FromOsc1)\n        this.updateOSC1tremoloRate(square5distance9FromOsc1)\n        this.updateOSC2tremoloIntensity(square5distance9FromOsc2)\n        this.updateOSC2tremoloRate(square5distance9FromOsc2)\n        this.updateOSC3tremoloIntensity(square5distance9FromOsc3)\n        this.updateOSC3tremoloRate(square5distance9FromOsc3)\n        this.updateOSC4tremoloIntensity(square5distance9FromOsc4)\n        this.updateOSC4tremoloRate(square5distance9FromOsc4)\n      }\n\n      if (this.state.start10Move) {\n        this.state.prevSquare6Pos = this.state.square6Pos;\n        let square6distance10FromOsc1 = Math.sqrt(((this.state.circle1Pos[0] - this.state.square6Pos[0]) * (this.state.circle1Pos[0] - this.state.square6Pos[0])) + ((this.state.circle1Pos[1] - this.state.square6Pos[1]) * (this.state.circle1Pos[1] - this.state.square6Pos[1])))\n        let square6distance10FromOsc2 = Math.sqrt(((this.state.circle2Pos[0] - this.state.square6Pos[0]) * (this.state.circle2Pos[0] - this.state.square6Pos[0])) + ((this.state.circle2Pos[1] - this.state.square6Pos[1]) * (this.state.circle2Pos[1] - this.state.square6Pos[1])))\n        let square6distance10FromOsc3 = Math.sqrt(((this.state.circle3Pos[0] - this.state.square6Pos[0]) * (this.state.circle3Pos[0] - this.state.square6Pos[0])) + ((this.state.circle3Pos[1] - this.state.square6Pos[1]) * (this.state.circle3Pos[1] - this.state.square6Pos[1])))\n        let square6distance10FromOsc4 = Math.sqrt(((this.state.circle4Pos[0] - this.state.square6Pos[0]) * (this.state.circle4Pos[0] - this.state.square6Pos[0])) + ((this.state.circle4Pos[1] - this.state.square6Pos[1]) * (this.state.circle4Pos[1] - this.state.square6Pos[1])))\n        var posX = event.layerX;\n        var posY = event.layerY;\n         if (posX < 0) {\n          posX = 0;\n        }\n\n        if (posY < 0) {\n          posY = 0;\n        }\n\n        if (posX > this.props.width) {\n          posX = this.props.width;\n        }\n\n        if (posY > this.props.height) {\n          posY = this.props.height;\n        }\n\n        this.setState({\n          square6Pos: [posX, posY],\n          square6distanceFromOsc1: square6distance10FromOsc1,\n          square6distanceFromOsc2: square6distance10FromOsc2,\n          square6distanceFromOsc3: square6distance10FromOsc3,\n          square6distanceFromOsc4: square6distance10FromOsc4,\n        });\n        this.updateOSC1bitcrusherBits(square6distance10FromOsc1)\n        this.updateOSC1bitcrusherBufferSize(square6distance10FromOsc1)\n        this.updateOSC2bitcrusherBits(square6distance10FromOsc2)\n        this.updateOSC2bitcrusherBufferSize(square6distance10FromOsc2)\n        this.updateOSC3bitcrusherBits(square6distance10FromOsc3)\n        this.updateOSC3bitcrusherBufferSize(square6distance10FromOsc3)\n        this.updateOSC4bitcrusherBits(square6distance10FromOsc4)\n        this.updateOSC4bitcrusherBufferSize(square6distance10FromOsc4)\n        this.updateCanvas();\n      }\n\n      if (this.state.start11Move) {\n        this.state.prevSquare7Pos = this.state.square7Pos;\n        let square7distance11FromOsc1 = Math.sqrt(((this.state.circle1Pos[0] - this.state.square7Pos[0]) * (this.state.circle1Pos[0] - this.state.square7Pos[0])) + ((this.state.circle1Pos[1] - this.state.square7Pos[1]) * (this.state.circle1Pos[1] - this.state.square7Pos[1])))\n        let square7distance11FromOsc2 = Math.sqrt(((this.state.circle2Pos[0] - this.state.square7Pos[0]) * (this.state.circle2Pos[0] - this.state.square7Pos[0])) + ((this.state.circle2Pos[1] - this.state.square7Pos[1]) * (this.state.circle2Pos[1] - this.state.square7Pos[1])))\n        let square7distance11FromOsc3 = Math.sqrt(((this.state.circle3Pos[0] - this.state.square7Pos[0]) * (this.state.circle3Pos[0] - this.state.square7Pos[0])) + ((this.state.circle3Pos[1] - this.state.square7Pos[1]) * (this.state.circle3Pos[1] - this.state.square7Pos[1])))\n        let square7distance11FromOsc4 = Math.sqrt(((this.state.circle4Pos[0] - this.state.square7Pos[0]) * (this.state.circle4Pos[0] - this.state.square7Pos[0])) + ((this.state.circle4Pos[1] - this.state.square7Pos[1]) * (this.state.circle4Pos[1] - this.state.square7Pos[1])))\n        var posX = event.layerX;\n        var posY = event.layerY;\n         if (posX < 0) {\n          posX = 0;\n        }\n\n        if (posY < 0) {\n          posY = 0;\n        }\n\n        if (posX > this.props.width) {\n          posX = this.props.width;\n        }\n\n        if (posY > this.props.height) {\n          posY = this.props.height;\n        }\n\n        this.setState({\n          square7Pos: [posX, posY],\n          square7distanceFromOsc1: square7distance11FromOsc1,\n          square7distanceFromOsc2: square7distance11FromOsc2,\n          square7distanceFromOsc3: square7distance11FromOsc3,\n          square7distanceFromOsc4: square7distance11FromOsc4,\n        });\n\n        this.updateCanvas();\n\n        this.updateOSC1moogFilterCutoff(square7distance11FromOsc1)\n        this.updateOSC1moogFilterBufferSize(square7distance11FromOsc1)\n        this.updateOSC1moogFilterResonance(square7distance11FromOsc1)\n\n        this.updateOSC2moogFilterCutoff(square7distance11FromOsc2)\n        this.updateOSC2moogFilterBufferSize(square7distance11FromOsc2)\n        this.updateOSC2moogFilterResonance(square7distance11FromOsc2)\n\n        this.updateOSC3moogFilterCutoff(square7distance11FromOsc3)\n        this.updateOSC3moogFilterBufferSize(square7distance11FromOsc3)\n        this.updateOSC3moogFilterResonance(square7distance11FromOsc3)\n\n        this.updateOSC4moogFilterCutoff(square7distance11FromOsc4)\n        this.updateOSC4moogFilterBufferSize(square7distance11FromOsc4)\n        this.updateOSC4moogFilterResonance(square7distance11FromOsc4)\n      }\n\n      if (this.state.start12Move) {\n        this.state.prevSquare8Pos = this.state.square8Pos;\n        let square8distance12FromOsc1 = Math.sqrt(((this.state.circle1Pos[0] - this.state.square8Pos[0]) * (this.state.circle1Pos[0] - this.state.square8Pos[0])) + ((this.state.circle1Pos[1] - this.state.square8Pos[1]) * (this.state.circle1Pos[1] - this.state.square8Pos[1])))\n        let square8distance12FromOsc2 = Math.sqrt(((this.state.circle2Pos[0] - this.state.square8Pos[0]) * (this.state.circle2Pos[0] - this.state.square8Pos[0])) + ((this.state.circle2Pos[1] - this.state.square8Pos[1]) * (this.state.circle2Pos[1] - this.state.square8Pos[1])))\n        let square8distance12FromOsc3 = Math.sqrt(((this.state.circle3Pos[0] - this.state.square8Pos[0]) * (this.state.circle3Pos[0] - this.state.square8Pos[0])) + ((this.state.circle3Pos[1] - this.state.square8Pos[1]) * (this.state.circle3Pos[1] - this.state.square8Pos[1])))\n        let square8distance12FromOsc4 = Math.sqrt(((this.state.circle4Pos[0] - this.state.square8Pos[0]) * (this.state.circle4Pos[0] - this.state.square8Pos[0])) + ((this.state.circle4Pos[1] - this.state.square8Pos[1]) * (this.state.circle4Pos[1] - this.state.square8Pos[1])))\n        var posX = event.layerX;\n        var posY = event.layerY;\n         if (posX < 0) {\n          posX = 0;\n        }\n\n        if (posY < 0) {\n          posY = 0;\n        }\n\n        if (posX > this.props.width) {\n          posX = this.props.width;\n        }\n\n        if (posY > this.props.height) {\n          posY = this.props.height;\n        }\n\n        this.setState({\n          square8Pos: [posX, posY],\n          square8distanceFromOsc1: square8distance12FromOsc1,\n          square8distanceFromOsc2: square8distance12FromOsc2,\n          square8distanceFromOsc3: square8distance12FromOsc3,\n          square8distanceFromOsc4: square8distance12FromOsc4,\n        });\n        this.updateOSC1moogFilter2Cutoff(square8distance12FromOsc1)\n        this.updateOSC1moogFilter2BufferSize(square8distance12FromOsc1)\n        this.updateOSC1moogFilter2Resonance(square8distance12FromOsc1)\n\n        this.updateOSC2moogFilter2Cutoff(square8distance12FromOsc2)\n        this.updateOSC2moogFilter2BufferSize(square8distance12FromOsc2)\n        this.updateOSC2moogFilter2Resonance(square8distance12FromOsc2)\n\n        this.updateOSC3moogFilter2Cutoff(square8distance12FromOsc3)\n        this.updateOSC3moogFilter2BufferSize(square8distance12FromOsc3)\n        this.updateOSC3moogFilter2Resonance(square8distance12FromOsc3)\n\n        this.updateOSC4moogFilter2Cutoff(square8distance12FromOsc4)\n        this.updateOSC4moogFilter2BufferSize(square8distance12FromOsc4)\n        this.updateOSC4moogFilter2Resonance(square8distance12FromOsc4)\n        this.updateCanvas();\n      }\n\n      if (this.state.start13Move) {\n        this.state.prevSquare9Pos = this.state.square9Pos;\n        let square9distance13FromOsc1 = Math.sqrt(((this.state.circle1Pos[0] - this.state.square9Pos[0]) * (this.state.circle1Pos[0] - this.state.square9Pos[0])) + ((this.state.circle1Pos[1] - this.state.square9Pos[1]) * (this.state.circle1Pos[1] - this.state.square9Pos[1])))\n        let square9distance13FromOsc2 = Math.sqrt(((this.state.circle2Pos[0] - this.state.square9Pos[0]) * (this.state.circle2Pos[0] - this.state.square9Pos[0])) + ((this.state.circle2Pos[1] - this.state.square9Pos[1]) * (this.state.circle2Pos[1] - this.state.square9Pos[1])))\n        let square9distance13FromOsc3 = Math.sqrt(((this.state.circle3Pos[0] - this.state.square9Pos[0]) * (this.state.circle3Pos[0] - this.state.square9Pos[0])) + ((this.state.circle3Pos[1] - this.state.square9Pos[1]) * (this.state.circle3Pos[1] - this.state.square9Pos[1])))\n        let square9distance13FromOsc4 = Math.sqrt(((this.state.circle4Pos[0] - this.state.square9Pos[0]) * (this.state.circle4Pos[0] - this.state.square9Pos[0])) + ((this.state.circle4Pos[1] - this.state.square9Pos[1]) * (this.state.circle4Pos[1] - this.state.square9Pos[1])))\n        var posX = event.layerX;\n        var posY = event.layerY;\n         if (posX < 0) {\n          posX = 0;\n        }\n\n        if (posY < 0) {\n          posY = 0;\n        }\n\n        if (posX > this.props.width) {\n          posX = this.props.width;\n        }\n\n        if (posY > this.props.height) {\n          posY = this.props.height;\n        }\n\n        this.setState({\n          square9Pos: [posX, posY],\n          square9distanceFromOsc1: square9distance13FromOsc1,\n          square9distanceFromOsc2: square9distance13FromOsc2,\n          square9distanceFromOsc3: square9distance13FromOsc3,\n          square9distanceFromOsc4: square9distance13FromOsc4,\n        });\n        this.updateOSC1reverbLevel(square9distance13FromOsc1);\n        this.updateOSC2reverbLevel(square9distance13FromOsc2);\n        this.updateOSC3reverbLevel(square9distance13FromOsc3);\n        this.updateOSC4reverbLevel(square9distance13FromOsc4);\n        this.updateCanvas();\n      }\n\n      if (this.state.start14Move) {\n        this.state.prevSquare10Pos = this.state.square10Pos;\n        let square10distance14FromOsc1 = Math.sqrt(((this.state.circle1Pos[0] - this.state.square10Pos[0]) * (this.state.circle1Pos[0] - this.state.square10Pos[0])) + ((this.state.circle1Pos[1] - this.state.square10Pos[1]) * (this.state.circle1Pos[1] - this.state.square10Pos[1])))\n        let square10distance14FromOsc2 = Math.sqrt(((this.state.circle2Pos[0] - this.state.square10Pos[0]) * (this.state.circle2Pos[0] - this.state.square10Pos[0])) + ((this.state.circle2Pos[1] - this.state.square10Pos[1]) * (this.state.circle2Pos[1] - this.state.square10Pos[1])))\n        let square10distance14FromOsc3 = Math.sqrt(((this.state.circle3Pos[0] - this.state.square10Pos[0]) * (this.state.circle3Pos[0] - this.state.square10Pos[0])) + ((this.state.circle3Pos[1] - this.state.square10Pos[1]) * (this.state.circle3Pos[1] - this.state.square10Pos[1])))\n        let square10distance14FromOsc4 = Math.sqrt(((this.state.circle4Pos[0] - this.state.square10Pos[0]) * (this.state.circle4Pos[0] - this.state.square10Pos[0])) + ((this.state.circle4Pos[1] - this.state.square10Pos[1]) * (this.state.circle4Pos[1] - this.state.square10Pos[1])))\n        var posX = event.layerX;\n        var posX = event.layerX;\n        var posY = event.layerY;\n         if (posX < 0) {\n          posX = 0;\n        }\n\n        if (posY < 0) {\n          posY = 0;\n        }\n\n        if (posX > this.props.width) {\n          posX = this.props.width;\n        }\n\n        if (posY > this.props.height) {\n          posY = this.props.height;\n        }\n\n        this.setState({\n          square10Pos: [posX, posY],\n          square10distanceFromOsc1: square10distance14FromOsc1,\n          square10distanceFromOsc2: square10distance14FromOsc2,\n          square10distanceFromOsc3: square10distance14FromOsc3,\n          square10distanceFromOsc4: square10distance14FromOsc4,\n        });\n        this.updateOSC1pannerPan(square10distance14FromOsc1)\n        this.updateOSC2pannerPan(square10distance14FromOsc2)\n        this.updateOSC3pannerPan(square10distance14FromOsc3)\n        this.updateOSC4pannerPan(square10distance14FromOsc4)\n        this.updateCanvas();\n      }\n\n      if (this.state.start15Move) {\n        this.state.prevSquare11Pos = this.state.square11Pos;\n        let square11distance15FromOsc1 = Math.sqrt(((this.state.circle1Pos[0] - this.state.square11Pos[0]) * (this.state.circle1Pos[0] - this.state.square11Pos[0])) + ((this.state.circle1Pos[1] - this.state.square11Pos[1]) * (this.state.circle1Pos[1] - this.state.square11Pos[1])))\n        let square11distance15FromOsc2 = Math.sqrt(((this.state.circle2Pos[0] - this.state.square11Pos[0]) * (this.state.circle2Pos[0] - this.state.square11Pos[0])) + ((this.state.circle2Pos[1] - this.state.square11Pos[1]) * (this.state.circle2Pos[1] - this.state.square11Pos[1])))\n        let square11distance15FromOsc3 = Math.sqrt(((this.state.circle3Pos[0] - this.state.square11Pos[0]) * (this.state.circle3Pos[0] - this.state.square11Pos[0])) + ((this.state.circle3Pos[1] - this.state.square11Pos[1]) * (this.state.circle3Pos[1] - this.state.square11Pos[1])))\n        let square11distance15FromOsc4 = Math.sqrt(((this.state.circle4Pos[0] - this.state.square11Pos[0]) * (this.state.circle4Pos[0] - this.state.square11Pos[0])) + ((this.state.circle4Pos[1] - this.state.square11Pos[1]) * (this.state.circle4Pos[1] - this.state.square11Pos[1])))\n        var posX = event.layerX;\n        var posY = event.layerY;\n         if (posX < 0) {\n          posX = 0;\n        }\n\n        if (posY < 0) {\n          posY = 0;\n        }\n\n        if (posX > this.props.width) {\n          posX = this.props.width;\n        }\n\n        if (posY > this.props.height) {\n          posY = this.props.height;\n        }\n\n        this.setState({\n          square11Pos: [posX, posY],\n          square11distanceFromOsc1: square11distance15FromOsc1,\n          square11distanceFromOsc2: square11distance15FromOsc2,\n          square11distanceFromOsc3: square11distance15FromOsc3,\n          square11distanceFromOsc4: square11distance15FromOsc4,\n        });\n        this.updateOSC1phaserDepth(square11distance15FromOsc1)\n        this.updateOSC1phaserRate(square11distance15FromOsc1)\n        this.updateOSC1phaserFeedback(square11distance15FromOsc1)\n\n        this.updateOSC2phaserDepth(square11distance15FromOsc2)\n        this.updateOSC2phaserRate(square11distance15FromOsc2)\n        this.updateOSC2phaserFeedback(square11distance15FromOsc2)\n\n        this.updateOSC3phaserDepth(square11distance15FromOsc3)\n        this.updateOSC3phaserRate(square11distance15FromOsc3)\n        this.updateOSC3phaserFeedback(square11distance15FromOsc3)\n\n        this.updateOSC4phaserDepth(square11distance15FromOsc4)\n        this.updateOSC4phaserRate(square11distance15FromOsc4)\n        this.updateOSC4phaserFeedback(square11distance15FromOsc4)\n\n        this.updateCanvas();\n      }\n\n      if (this.state.start16Move) {\n        this.state.prevSquare12Pos = this.state.square12Pos;\n        let square12distance16FromOsc1 = Math.sqrt(((this.state.circle1Pos[0] - this.state.square12Pos[0]) * (this.state.circle1Pos[0] - this.state.square12Pos[0])) + ((this.state.circle1Pos[1] - this.state.square12Pos[1]) * (this.state.circle1Pos[1] - this.state.square12Pos[1])))\n        let square12distance16FromOsc2 = Math.sqrt(((this.state.circle2Pos[0] - this.state.square12Pos[0]) * (this.state.circle2Pos[0] - this.state.square12Pos[0])) + ((this.state.circle2Pos[1] - this.state.square12Pos[1]) * (this.state.circle2Pos[1] - this.state.square12Pos[1])))\n        let square12distance16FromOsc3 = Math.sqrt(((this.state.circle3Pos[0] - this.state.square12Pos[0]) * (this.state.circle3Pos[0] - this.state.square12Pos[0])) + ((this.state.circle3Pos[1] - this.state.square12Pos[1]) * (this.state.circle3Pos[1] - this.state.square12Pos[1])))\n        let square12distance16FromOsc4 = Math.sqrt(((this.state.circle4Pos[0] - this.state.square12Pos[0]) * (this.state.circle4Pos[0] - this.state.square12Pos[0])) + ((this.state.circle4Pos[1] - this.state.square12Pos[1]) * (this.state.circle4Pos[1] - this.state.square12Pos[1])))\n        var posX = event.layerX;\n        var posY = event.layerY;\n         if (posX < 0) {\n          posX = 0;\n        }\n\n        if (posY < 0) {\n          posY = 0;\n        }\n\n        if (posX > this.props.width) {\n          posX = this.props.width;\n        }\n\n        if (posY > this.props.height) {\n          posY = this.props.height;\n        }\n\n        this.setState({\n          square12Pos: [posX, posY],\n          square12distanceFromOsc1: square12distance16FromOsc1,\n          square12distanceFromOsc2: square12distance16FromOsc2,\n          square12distanceFromOsc3: square12distance16FromOsc3,\n          square12distanceFromOsc4: square12distance16FromOsc4,\n        });\n        this.updateOSC1overdriveDrive(square12distance16FromOsc1)\n        this.updateOSC1overdriveGain(square12distance16FromOsc1)\n        this.updateOSC2overdriveDrive(square12distance16FromOsc2)\n        this.updateOSC2overdriveGain(square12distance16FromOsc2)\n        this.updateOSC3overdriveDrive(square12distance16FromOsc3)\n        this.updateOSC3overdriveGain(square12distance16FromOsc3)\n        this.updateOSC4overdriveDrive(square12distance16FromOsc4)\n        this.updateOSC4overdriveGain(square12distance16FromOsc4)\n        this.updateCanvas();\n      }\n\n      if (this.state.start17Move) {\n        this.state.prevSquare13Pos = this.state.square13Pos;\n        let square13distance17FromOsc1 = Math.sqrt(((this.state.circle1Pos[0] - this.state.square13Pos[0]) * (this.state.circle1Pos[0] - this.state.square13Pos[0])) + ((this.state.circle1Pos[1] - this.state.square13Pos[1]) * (this.state.circle1Pos[1] - this.state.square13Pos[1])))\n        let square13distance17FromOsc2 = Math.sqrt(((this.state.circle2Pos[0] - this.state.square13Pos[0]) * (this.state.circle2Pos[0] - this.state.square13Pos[0])) + ((this.state.circle2Pos[1] - this.state.square13Pos[1]) * (this.state.circle2Pos[1] - this.state.square13Pos[1])))\n        let square13distance17FromOsc3 = Math.sqrt(((this.state.circle3Pos[0] - this.state.square13Pos[0]) * (this.state.circle3Pos[0] - this.state.square13Pos[0])) + ((this.state.circle3Pos[1] - this.state.square13Pos[1]) * (this.state.circle3Pos[1] - this.state.square13Pos[1])))\n        let square13distance17FromOsc4 = Math.sqrt(((this.state.circle4Pos[0] - this.state.square13Pos[0]) * (this.state.circle4Pos[0] - this.state.square13Pos[0])) + ((this.state.circle4Pos[1] - this.state.square13Pos[1]) * (this.state.circle4Pos[1] - this.state.square13Pos[1])))\n        \n        var posX = event.layerX;\n        var posY = event.layerY;\n         if (posX < 0) {\n          posX = 0;\n        }\n\n        if (posY < 0) {\n          posY = 0;\n        }\n\n        if (posX > this.props.width) {\n          posX = this.props.width;\n        }\n\n        if (posY > this.props.height) {\n          posY = this.props.height;\n        }\n\n        this.setState({\n          square13Pos: [posX, posY],\n          square13distanceFromOsc1: square13distance17FromOsc1,\n          square13distanceFromOsc2: square13distance17FromOsc2,\n          square13distanceFromOsc3: square13distance17FromOsc3,\n          square13distanceFromOsc4: square13distance17FromOsc4,\n        });\n\n        this.updateCanvas();\n      }\n\n      if (this.state.start18Move) {\n        this.state.prevSquare14Pos = this.state.square14Pos;\n        let square14distance18FromOsc1 = Math.sqrt(((this.state.circle1Pos[0] - this.state.square14Pos[0]) * (this.state.circle1Pos[0] - this.state.square14Pos[0])) + ((this.state.circle1Pos[1] - this.state.square14Pos[1]) * (this.state.circle1Pos[1] - this.state.square14Pos[1])))\n        let square14distance18FromOsc2 = Math.sqrt(((this.state.circle2Pos[0] - this.state.square14Pos[0]) * (this.state.circle2Pos[0] - this.state.square14Pos[0])) + ((this.state.circle2Pos[1] - this.state.square14Pos[1]) * (this.state.circle2Pos[1] - this.state.square14Pos[1])))\n        let square14distance18FromOsc3 = Math.sqrt(((this.state.circle3Pos[0] - this.state.square14Pos[0]) * (this.state.circle3Pos[0] - this.state.square14Pos[0])) + ((this.state.circle3Pos[1] - this.state.square14Pos[1]) * (this.state.circle3Pos[1] - this.state.square14Pos[1])))\n        let square14distance18FromOsc4 = Math.sqrt(((this.state.circle4Pos[0] - this.state.square14Pos[0]) * (this.state.circle4Pos[0] - this.state.square14Pos[0])) + ((this.state.circle4Pos[1] - this.state.square14Pos[1]) * (this.state.circle4Pos[1] - this.state.square14Pos[1])))\n        var posX = event.layerX;\n        var posY = event.layerY;\n         if (posX < 0) {\n          posX = 0;\n        }\n\n        if (posY < 0) {\n          posY = 0;\n        }\n\n        if (posX > this.props.width) {\n          posX = this.props.width;\n        }\n\n        if (posY > this.props.height) {\n          posY = this.props.height;\n        }\n\n        this.setState({\n          square14Pos: [posX, posY],\n          square14distanceFromOsc1: square14distance18FromOsc1,\n          square14distanceFromOsc2: square14distance18FromOsc2,\n          square14distanceFromOsc3: square14distance18FromOsc3,\n          square14distanceFromOsc4: square14distance18FromOsc4,\n        });\n\n        this.updateCanvas();\n      }\n\n      if (this.state.start19Move) {\n        this.state.prevSquare15Pos = this.state.square15Pos;\n        let square15distance19FromOsc1 = Math.sqrt(((this.state.circle1Pos[0] - this.state.square15Pos[0]) * (this.state.circle1Pos[0] - this.state.square15Pos[0])) + ((this.state.circle1Pos[1] - this.state.square15Pos[1]) * (this.state.circle1Pos[1] - this.state.square15Pos[1])))\n        let square15distance19FromOsc2 = Math.sqrt(((this.state.circle2Pos[0] - this.state.square15Pos[0]) * (this.state.circle2Pos[0] - this.state.square15Pos[0])) + ((this.state.circle2Pos[1] - this.state.square15Pos[1]) * (this.state.circle2Pos[1] - this.state.square15Pos[1])))\n        let square15distance19FromOsc3 = Math.sqrt(((this.state.circle3Pos[0] - this.state.square15Pos[0]) * (this.state.circle3Pos[0] - this.state.square15Pos[0])) + ((this.state.circle3Pos[1] - this.state.square15Pos[1]) * (this.state.circle3Pos[1] - this.state.square15Pos[1])))\n        let square15distance19FromOsc4 = Math.sqrt(((this.state.circle4Pos[0] - this.state.square15Pos[0]) * (this.state.circle4Pos[0] - this.state.square15Pos[0])) + ((this.state.circle4Pos[1] - this.state.square15Pos[1]) * (this.state.circle4Pos[1] - this.state.square15Pos[1])))\n        var posX = event.layerX;\n        var posY = event.layerY;\n         if (posX < 0) {\n          posX = 0;\n        }\n\n        if (posY < 0) {\n          posY = 0;\n        }\n\n        if (posX > this.props.width) {\n          posX = this.props.width;\n        }\n\n        if (posY > this.props.height) {\n          posY = this.props.height;\n        }\n\n        this.setState({\n          square15Pos: [posX, posY],\n          square15distanceFromOsc1: square15distance19FromOsc1,\n          square15distanceFromOsc2: square15distance19FromOsc2,\n          square15distanceFromOsc3: square15distance19FromOsc3,\n          square15distanceFromOsc4: square15distance19FromOsc4,\n        });\n\n        this.updateCanvas();\n      }\n\n      if (this.state.start20Move) {\n        this.state.prevSquare15Pos = this.state.square15Pos;\n        let square16distance20FromOsc1 = Math.sqrt(((this.state.circle1Pos[0] - this.state.square16Pos[0]) * (this.state.circle1Pos[0] - this.state.square16Pos[0])) + ((this.state.circle1Pos[1] - this.state.square16Pos[1]) * (this.state.circle1Pos[1] - this.state.square16Pos[1])))\n        let square16distance20FromOsc2 = Math.sqrt(((this.state.circle2Pos[0] - this.state.square16Pos[0]) * (this.state.circle2Pos[0] - this.state.square16Pos[0])) + ((this.state.circle2Pos[1] - this.state.square16Pos[1]) * (this.state.circle2Pos[1] - this.state.square16Pos[1])))\n        let square16distance20FromOsc3 = Math.sqrt(((this.state.circle3Pos[0] - this.state.square16Pos[0]) * (this.state.circle3Pos[0] - this.state.square16Pos[0])) + ((this.state.circle3Pos[1] - this.state.square16Pos[1]) * (this.state.circle3Pos[1] - this.state.square16Pos[1])))\n        let square16distance20FromOsc4 = Math.sqrt(((this.state.circle4Pos[0] - this.state.square16Pos[0]) * (this.state.circle4Pos[0] - this.state.square16Pos[0])) + ((this.state.circle4Pos[1] - this.state.square16Pos[1]) * (this.state.circle4Pos[1] - this.state.square16Pos[1])))\n        var posX = event.layerX;\n        var posY = event.layerY;\n         if (posX < 0) {\n          posX = 0;\n        }\n\n        if (posY < 0) {\n          posY = 0;\n        }\n\n        if (posX > this.props.width) {\n          posX = this.props.width;\n        }\n\n        if (posY > this.props.height) {\n          posY = this.props.height;\n        }\n\n        this.setState({\n          square16Pos: [posX, posY],\n          square16distanceFromOsc1: square16distance20FromOsc1,\n          square16distanceFromOsc2: square16distance20FromOsc2,\n          square16distanceFromOsc3: square16distance20FromOsc3,\n          square16distanceFromOsc4: square16distance20FromOsc4,\n        });\n\n        this.updateCanvas();\n      }\n\n      this.updateCanvas();\n    }\n\n    //////GET DISTANCE FUNCTION/////////\n   \n\n\n/////////OSC1 FUNCTIONS///////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////\n    updateFrequencyOSC(posY) {\n      console.log(this.state.oscFreq, this.state.circle1Pos)\n      let oscFreq = posY * Math.floor(Math.random() * (7) - 1 + 1) + 20\n      this.setState({oscFreq: oscFreq})\n      this.props.changeOSCFreq(oscFreq);\n      console.log(oscFreq)\n    }\n\n    turnOnLFO() {\n      console.log( this.props.isLFOOn)\n      console.log(this.state.isLFOstarted)\n      this.props.turnOnLFO(!this.props.isLFOOn);\n      console.log(this.props.isLFOOn)\n    }\n\n    updateLFOType() {\n      let lfoWaveTypes = ['sine', 'square', 'triangle', 'sawtooth']\n      let randomType = Math.floor(Math.random()*lfoWaveTypes.length)\n      this.setState({lfoType: randomType})\n      this.props.changeLFO2Type(randomType)\n    }\n\n    updateLFOFreq(anotherSquare1distance5FromOsc1) {\n      let lfoFreq = Math.floor((anotherSquare1distance5FromOsc1 * .002) * Math.floor(Math.random() * (12) - 1 + 1) + 1)\n      this.props.changeLFOFreq(lfoFreq)\n      console.log(lfoFreq)\n    }\n\n    updateOSC1chorusBypass(){\n      console.log(this.state)\n      this.props.toggleOSC1chorusBypass(!this.props.osc1chorusBypass)\n      console.log(this.props.osc1chorusBypass)\n    }\n\n    updateOSC1chorusDepth(anotherSquare2distance6FromOsc1) {\n      let osc1chorusDepth = (1000 - anotherSquare2distance6FromOsc1) * .001\n      this.setState({osc1chorusDepth: osc1chorusDepth})\n      this.props.changeOSC1chorusDepth(osc1chorusDepth)\n    }\n\n    updateOSC1chorusRate(anotherSquare2distance6FromOsc1) {\n   \n      let osc1chorusRate = Math.floor(anotherSquare2distance6FromOsc1 * .008)\n      this.setState({osc1chorusRate: osc1chorusRate})\n      this.props.changeOSC1chorusRate(osc1chorusRate)\n    }\n\n    updateOSC1filterBypass() {\n      this.props.toggleOSC1filterBypass(!this.props.osc1filterBypass)\n      console.log(this.props.osc1filterBypass)\n    }\n\n    updateOSC1filterDepth(square3distance7FromOsc1) {\n      let osc1filterDepth = (1000 - square3distance7FromOsc1) * .001\n      this.setState({osc1filterDepth: osc1filterDepth})\n      this.props.changeOSC1filterDepth(osc1filterDepth)\n    }\n\n    updateOSC1filterRate(square3distance7FromOsc1) {\n      let osc1filterRate = Math.floor(square3distance7FromOsc1 * .008)\n      this.setState({osc1filterRate: osc1filterRate})\n      this.props.changeOSC1filterRate(osc1filterRate)\n    }\n\n    updateOSC1filter2Bypass() {\n      this.props.toggleOSC1filter2Bypass(!this.props.osc1filter2Bypass)\n      console.log(this.props.osc1filter2Bypass)\n    }\n\n    updateOSC1filter2Depth(square4distance1FromOsc1) {\n      let osc1filter2Depth =  Math.floor((1000 - square4distance1FromOsc1) * .008)\n      this.setState({osc1filter2Depth: osc1filter2Depth})\n      this.props.changeOSC1filter2Depth(osc1filter2Depth)\n    }\n\n    updateOSC1filter2Rate(square4distance1FromOsc1) {\n      let osc1filter2Rate = square4distance1FromOsc1 * .001\n      this.setState({osc1filter2Rate: osc1filter2Rate})\n      this.props.changeOSC1filter2Rate(osc1filter2Rate)  \n    }\n\n    updateOSC1tremoloBypass() {\n      this.props.toggleOSC1tremoloBypass(!this.props.osc1tremoloBypass)\n      console.log(this.props.osc1tremoloBypass)\n    }\n\n    updateOSC1tremoloIntensity(square5distance9FromOsc1) {\n      let osc1tremoloIntensity = (1000 - square5distance9FromOsc1) * .001\n      this.setState({osc1tremoloIntensity: osc1tremoloIntensity})\n      this.props.changeOSC1tremoloIntensity(osc1tremoloIntensity)\n    }\n\n    updateOSC1tremoloRate(square5distance9FromOsc1) {\n      let osc1tremoloRate = square5distance9FromOsc1 * .011\n      this.setState({osc1tremoloRate: osc1tremoloRate})\n      this.props.changeOSC1tremoloRate(osc1tremoloRate)\n    }\n\n    updateOSC1bitcrusherBypass() {\n      this.props.toggleOSC1bitcrusherBypass(!this.props.osc1bitcrusherBypass)\n      console.log(this.props.osc1bitcrusherBypass)\n    }\n\n    updateOSC1bitcrusherBits(square6distance10FromOsc1) {\n      let osc1bitcrusherBits = Math.floor((1000 - square6distance10FromOsc1) * .016)\n      this.setState({osc1bitcrusherBits: osc1bitcrusherBits})\n      this.props.changeOSC1bitcrusherBits(osc1bitcrusherBits)\n    }\n\n    updateOSC1bitcrusherBufferSize(square6distance10FromOsc1) {\n      let osc1bitcrusherBufferSize = square6distance10FromOsc1 * Math.floor(Math.random() * (16) -1 + 1) + 256\n      this.setState({osc1bitcrusherBufferSize: osc1bitcrusherBufferSize})\n      this.props.changeOSC1bitcrusherBufferSize(osc1bitcrusherBufferSize)\n    }\n\n    updateOSC1moogFilterBypass() {\n      this.props.toggleOSC1moogFilterBypass(!this.props.osc1moogFilterBypass)\n      console.log(this.props.osc1moogFilterBypass)\n    }\n\n    updateOSC1moogFilterCutoff(square7distance11FromOsc1) {\n      let osc1moogFilterCutoff = (1000 - square7distance11FromOsc1) * .001\n      this.setState({osc1moogFilterCutoff: osc1moogFilterCutoff})\n      this.props.changeOSC1moogFilterCutoff(osc1moogFilterCutoff)\n    }\n\n    updateOSC1moogFilterBufferSize(square7distance11FromOsc1) {\n      let osc1moogFilterBufferSize = square7distance11FromOsc1 * Math.floor(Math.random() * (16) -1 + 1) + 256\n      this.setState({osc1moogFilterBufferSize: osc1moogFilterBufferSize})\n      this.props.changeOSC1moogFilterBufferSize(osc1moogFilterBufferSize)\n    }\n\n    updateOSC1moogFilterResonance(square7distance11FromOsc1) {\n      let osc1moogFilterResonance = Math.floor(square7distance11FromOsc1 * .004)\n      this.setState({osc1moogFilterResonance: osc1moogFilterResonance})\n      this.props.changeOSC1moogFilterResonance(osc1moogFilterResonance)\n    }\n\n    updateOSC1moogFilter2Bypass() {\n      this.props.toggleOSC1moogFilter2Bypass(!this.props.osc1moogFilter2Bypass)\n      console.log(this.props.osc1moogFilter2Bypass)\n    }\n\n    updateOSC1moogFilter2Cutoff(square8distance12FromOsc1) {\n      let osc1moogFilter2Cutoff = (1000 - square8distance12FromOsc1) * .001\n      this.setState({osc1moogFilter2Cutoff: osc1moogFilter2Cutoff})\n      this.props.changeOSC1moogFilter2Cutoff(osc1moogFilter2Cutoff)\n    }\n\n    updateOSC1moogFilter2BufferSize(square8distance12FromOsc1) {\n      let osc1moogFilter2BufferSize = square8distance12FromOsc1 * Math.floor(Math.random() * (16) -1 + 1) + 256\n      this.setState({osc1moogFilter2BufferSize: osc1moogFilter2BufferSize})\n      this.props.changeOSC1moogFilter2BufferSize(osc1moogFilter2BufferSize)\n    }\n\n    updateOSC1moogFilter2Resonance(square8distance12FromOsc1) {\n      let osc1moogFilter2Resonance = Math.floor(square8distance12FromOsc1 * .004)\n      this.setState({osc1moogFilter2Resonance: osc1moogFilter2Resonance})\n      this.props.changeOSC1moogFilter2Resonance(osc1moogFilter2Resonance)\n    }\n\n    updateOSC1reverbBypass() {\n      this.props.toggleOSC1reverbBypass(!this.props.osc1reverbBypass)\n      console.log(this.props.osc1reverbBypass)\n    }\n\n    updateOSC1reverbLevel(square9distance13FromOsc1) {\n      let osc1reverbLevel = (1000 - square9distance13FromOsc1) * .001\n      this.setState({osc1reverbLevel: osc1reverbLevel})\n      this.props.changeOSC1reverbLevel(osc1reverbLevel)\n    }\n\n    updateOSC1pannerBypass() {\n      this.props.toggleOSC1pannerBypass(!this.props.osc1pannerBypass)\n      console.log(this.props.osc1pannerBypass)\n    }\n\n    updateOSC1pannerPan(square10distance14FromOsc1) {\n      let osc1pannerPan = 1 - ((1000 - square10distance14FromOsc1) * .002)\n      this.setState({osc1pannerPan: osc1pannerPan})\n      this.props.changeOSC1pannerPan(osc1pannerPan)\n    }\n\n    updateOSC1phaserBypass() {\n      this.props.toggleOSC1phaserBypass(!this.props.osc1phaserBypass)\n      console.log(this.props.osc1phaserBypass)\n    }\n\n    updateOSC1phaserRate(square11distance15FromOsc1) {\n      let osc1phaserRate = Math.floor(square11distance15FromOsc1 * .008)\n      this.setState({osc1phaserRate: osc1phaserRate})\n      this.props.changeOSC1phaserRate(osc1phaserRate)\n    }\n\n    updateOSC1phaserDepth(square11distance15FromOsc1) {\n      let osc1phaserDepth = (1000 - square11distance15FromOsc1) * .001\n      this.setState({osc1phaserDepth: osc1phaserDepth})\n      this.props.changeOSC1phaserDepth(osc1phaserDepth)\n    }\n\n    updateOSC1phaserFeedback(square11distance15FromOsc1) {\n       let osc1phaserFeedback = square11distance15FromOsc1 * .001\n       this.setState({osc1phaserFeedback: osc1phaserFeedback})\n       this.props.changeOSC1phaserFeedback(osc1phaserFeedback)\n    }\n\n    updateOSC1overdriveBypass() {\n      this.props.toggleOSC1overdriveBypass(!this.props.osc1overdriveBypass)\n      console.log(this.props.osc1overdriveBypass)\n    }\n\n    updateOSC1overdriveDrive(square12distance16FromOsc1) {\n      let osc1overdriveDrive = (1000 - square12distance16FromOsc1) * .001\n      this.setState({osc1overdriveDrive: osc1overdriveDrive})\n      this.props.changeOSC1overdriveDrive(osc1overdriveDrive)\n    }\n\n    updateOSC1overdriveGain(square12distance16FromOsc1) {\n      let osc1overdriveGain = Math.floor(46 - ((1000 - square12distance16FromOsc1) * .046)) * -1\n      this.setState({osc1overdriveGain: osc1overdriveGain})\n      this.props.changeOSC1overdriveGain(osc1overdriveGain)\n    }\n\n/////////OSC2 FUNCTIONS/////////////\n    updateFrequencyOSC2(posY) {\n      let osc2Freq = posY * Math.floor(Math.random() * (7) - 1 + 1) + 20\n      this.setState({osc2Freq: osc2Freq})\n      this.props.changeOSC2Freq(osc2Freq);\n      console.log(osc2Freq)\n    }\n    \n\n\n    turnOnLFO2() {\n      console.log( this.props.isLFO2On)\n      console.log(this.state.isLFOstarted)\n      this.props.turnOnLFO2(!this.props.isLFO2On);\n      console.log(this.props.isLFO2On)\n    }\n\n    updateLFO2Type() {\n      let lfoWaveTypes = ['sine', 'square', 'triangle', 'sawtooth']\n      let randomType = Math.floor(Math.random()*lfoWaveTypes.length)\n      this.setState({lfo2Type: randomType})\n      this.props.changeLFO2Type(randomType)\n    }\n\n    updateLFO2Freq(anotherSquare1distance5FromOsc2) {\n      let lfo2Freq = Math.floor((anotherSquare1distance5FromOsc2 * .002) * Math.floor(Math.random() * (12) - 1 + 1) + 1)\n      this.props.changeLFO2Freq(lfo2Freq)\n      console.log(lfo2Freq)\n    }\n\n    updateOSC2chorusBypass(){\n      console.log(this.state)\n      this.props.toggleOSC2chorusBypass(!this.props.osc2chorusBypass)\n      console.log(this.props.osc2chorusBypass)\n    }\n\n    updateOSC2chorusDepth(anotherSquare2distance6FromOsc2) {\n      let osc2chorusDepth = (1000 - anotherSquare2distance6FromOsc2) * .001\n      this.setState({osc2chorusDepth: osc2chorusDepth})\n      this.props.changeOSC2chorusDepth(osc2chorusDepth)\n    }\n\n    updateOSC2chorusRate(anotherSquare2distanceFromOsc2) {\n      let osc2chorusRate = Math.floor(anotherSquare2distanceFromOsc2 * .008)\n      this.setState({osc2chorusRate: osc2chorusRate})\n      this.props.changeOSC2chorusRate(osc2chorusRate)\n    }\n\n    updateOSC2filterBypass() {\n      this.props.toggleOSC2filterBypass(!this.props.osc2filterBypass)\n      console.log(this.props.osc2filterBypass)\n    }\n\n    updateOSC2filterDepth(square3distance7FromOsc2) {\n      let osc2filterDepth = (1000 - square3distance7FromOsc2) * .001\n      this.setState({osc2filterDepth: osc2filterDepth})\n      this.props.changeOSC2filterDepth(osc2filterDepth)\n    }\n\n    updateOSC2filterRate(square3distance7FromOsc2) {\n      let osc2filterRate = Math.floor(square3distance7FromOsc2 * .008)\n      this.setState({osc2filterRate: osc2filterRate})\n      this.props.changeOSC2filterRate(osc2filterRate)\n    }\n\n    updateOSC2filter2Bypass() {\n      console.log(this.props.osc2filter2Bypass)\n      this.props.toggleOSC2filter2Bypass(!this.props.osc2filter2Bypass)\n      console.log(this.props.osc2filter2Bypass)\n    }\n\n    updateOSC2filter2Depth(square4distance8FromOsc2) {\n      let osc2filter2Depth =  Math.floor((1000 - square4distance8FromOsc2) * .008)\n      this.setState({osc2filter2Depth: osc2filter2Depth})\n      this.props.changeOSC2filter2Depth(osc2filter2Depth)\n    }\n\n    updateOSC2filter2Rate(square4distance8FromOsc2) {\n      let osc2filter2Rate = square4distance8FromOsc2 * .001\n      this.setState({osc2filter2Rate: osc2filter2Rate})\n      this.props.changeOSC2filter2Rate(osc2filter2Rate)  \n    }\n\n    updateOSC2tremoloBypass() {\n      console.log(this.props.osc2tremoloBypass)\n      this.props.toggleOSC2tremoloBypass(!this.props.osc2tremoloBypass)\n      console.log(this.props.osc2tremoloBypass)\n    }\n\n    updateOSC2tremoloIntensity(square5distance9FromOsc2) {\n      let osc2tremoloIntensity = (1000 - square5distance9FromOsc2) * .001\n      this.setState({osc2tremoloIntensity: osc2tremoloIntensity})\n      this.props.changeOSC2tremoloIntensity(osc2tremoloIntensity)\n      console.log(osc2tremoloIntensity)\n    }\n\n    updateOSC2tremoloRate(square5distance9FromOsc2) {\n      let osc2tremoloRate = square5distance9FromOsc2 * .011\n      this.setState({osc2tremoloRate: osc2tremoloRate})\n      this.props.changeOSC2tremoloRate(osc2tremoloRate)\n    }\n\n    updateOSC2bitcrusherBypass() {\n      console.log(this.props.osc2bitcrusherBypass)\n      this.props.toggleOSC2bitcrusherBypass(!this.props.osc2bitcrusherBypass)\n      console.log(this.props.osc2bitcrusherBypass)\n    }\n\n    updateOSC2bitcrusherBits(square6distance10FromOsc2) {\n      let osc2bitcrusherBits = Math.floor((1000 - square6distance10FromOsc2) * .016)\n      this.setState({osc2bitcrusherBits: osc2bitcrusherBits})\n      this.props.changeOSC2bitcrusherBits(osc2bitcrusherBits)\n      console.log(osc2bitcrusherBits)\n    }\n\n    updateOSC2bitcrusherBufferSize(square6distance10FromOsc2) {\n      let osc2bitcrusherBufferSize = square6distance10FromOsc2 * Math.floor(Math.random() * (16) -1 + 1) + 256\n      this.setState({osc2bitcrusherBufferSize: osc2bitcrusherBufferSize})\n      this.props.changeOSC2bitcrusherBufferSize(osc2bitcrusherBufferSize)\n    }\n\n    updateOSC2moogFilterBypass() {\n      console.log(this.props.osc2moogFilterBypass)\n      this.props.toggleOSC2moogFilterBypass(!this.props.osc2moogFilterBypass)\n      console.log(this.props.osc2moogFilterBypass)\n    }\n\n    updateOSC2moogFilterCutoff(square7distance11FromOsc2) {\n      let osc2moogFilterCutoff = (1000 - square7distance11FromOsc2) * .001\n      this.setState({osc2moogFilterCutoff: osc2moogFilterCutoff})\n      this.props.changeOSC2moogFilterCutoff(osc2moogFilterCutoff)\n    }\n\n    updateOSC2moogFilterBufferSize(square7distance11FromOsc2) {\n      let osc2moogFilterBufferSize = square7distance11FromOsc2 * Math.floor(Math.random() * (16) -1 + 1) + 256\n      this.setState({osc2moogFilterBufferSize: osc2moogFilterBufferSize})\n      this.props.changeOSC2moogFilterBufferSize(osc2moogFilterBufferSize)\n    }\n\n    updateOSC2moogFilterResonance(square7distance11FromOsc2) {\n      let osc2moogFilterResonance = Math.floor(square7distance11FromOsc2 * .004)\n      this.setState({osc2moogFilterResonance: osc2moogFilterResonance})\n      this.props.changeOSC2moogFilterResonance(osc2moogFilterResonance)\n    }\n\n    updateOSC2moogFilter2Bypass() {\n      console.log(this.props.osc2moogFilter2Bypass)\n      this.props.toggleOSC2moogFilter2Bypass(!this.props.osc2moogFilter2Bypass)\n      console.log(this.props.osc2moogFilter2Bypass)\n    }\n\n    updateOSC2moogFilter2Cutoff(square8distance12FromOsc2) {\n      let osc2moogFilter2Cutoff = (1000 - square8distance12FromOsc2) * .001\n      this.setState({osc2moogFilter2Cutoff: osc2moogFilter2Cutoff})\n      this.props.changeOSC2moogFilter2Cutoff(osc2moogFilter2Cutoff)\n    }\n\n    updateOSC2moogFilter2BufferSize(square8distance12FromOsc2) {\n      let osc2moogFilter2BufferSize = square8distance12FromOsc2 * Math.floor(Math.random() * (16) -1 + 1) + 256\n      this.setState({osc2moogFilter2BufferSize: osc2moogFilter2BufferSize})\n      this.props.changeOSC2moogFilter2BufferSize(osc2moogFilter2BufferSize)\n    }\n\n    updateOSC2moogFilter2Resonance(square8distance12FromOsc2) {\n      let osc2moogFilter2Resonance = Math.floor(square8distance12FromOsc2 * .004)\n      this.setState({osc2moogFilter2Resonance: osc2moogFilter2Resonance})\n      this.props.changeOSC2moogFilter2Resonance(osc2moogFilter2Resonance)\n    }\n\n    updateOSC2reverbBypass() {\n      this.props.toggleOSC2reverbBypass(!this.props.osc2reverbBypass)\n      console.log(this.props.osc2reverbBypass)\n    }\n\n    updateOSC2reverbLevel(square9distance13FromOsc2) {\n      let osc2reverbLevel = (1000 - square9distance13FromOsc2) * .001\n      this.setState({osc2reverbLevel: osc2reverbLevel})\n      this.props.changeOSC2reverbLevel(osc2reverbLevel)\n    }\n\n    updateOSC2pannerBypass() {\n      this.props.toggleOSC2pannerBypass(!this.props.osc2pannerBypass)\n      console.log(this.props.osc2pannerBypass)\n    }\n\n    updateOSC2pannerPan(square10distance14FromOsc2) {\n      let osc2pannerPan = 1 - ((1000 - square10distance14FromOsc2) * .002)\n      this.setState({osc2pannerPan: osc2pannerPan})\n      this.props.changeOSC2pannerPan(osc2pannerPan)\n    }\n\n    updateOSC2phaserBypass() {\n      this.props.toggleOSC2phaserBypass(!this.props.osc2phaserBypass)\n      console.log(this.props.osc2phaserBypass)\n    }\n\n    updateOSC2phaserRate(square11distance15FromOsc2) {\n      let osc2phaserRate = Math.floor(square11distance15FromOsc2 * .008)\n      this.setState({osc2phaserRate: osc2phaserRate})\n      this.props.changeOSC2phaserRate(osc2phaserRate)\n    }\n\n    updateOSC2phaserDepth(square11distance15FromOsc2) {\n      let osc2phaserDepth = (1000 - square11distance15FromOsc2) * .001\n      this.setState({osc2phaserDepth: osc2phaserDepth})\n      this.props.changeOSC2phaserDepth(osc2phaserDepth)\n    }\n\n    updateOSC2phaserFeedback(square11distance15FromOsc2) {\n       let osc2phaserFeedback = square11distance15FromOsc2 * .001\n       this.setState({osc2phaserFeedback: osc2phaserFeedback})\n       this.props.changeOSC2phaserFeedback(osc2phaserFeedback)\n    }\n\n    updateOSC2overdriveBypass() {\n      this.props.toggleOSC2overdriveBypass(!this.props.osc2overdriveBypass)\n      console.log(this.props.osc2overdriveBypass)\n    }\n\n    updateOSC2overdriveDrive(square12distance16FromOsc2) {\n      let osc2overdriveDrive = (1000 - square12distance16FromOsc2) * .001\n      this.setState({osc2overdriveDrive: osc2overdriveDrive})\n      this.props.changeOSC2overdriveDrive(osc2overdriveDrive)\n    }\n\n    updateOSC2overdriveGain(square12distance16FromOsc2) {\n      let osc2overdriveGain = Math.floor(46 - ((1000 - square12distance16FromOsc2) * .046)) * -1\n      this.setState({osc2overdriveGain: osc2overdriveGain})\n      this.props.changeOSC2overdriveGain(osc2overdriveGain)\n    }\n\n\n\n/////////OSC3 FUNCTIONS///////////////////////////\n    updateFrequencyOSC3(posY) {\n      console.log(this.state.osc3Freq)\n      let osc3Freq = (1000 - posY * .1)\n      this.props.changeOSC3Freq(osc3Freq);\n    }\n\n\n    turnOnLFO3() {\n      this.props.turnOnLFO3(!this.props.isLFO3On);\n      console.log(this.props.isLFO3On)\n    }\n\n    updateLFO3Type() {\n      let lfoWaveTypes = ['sine', 'square', 'triangle', 'sawtooth']\n      let randomType = Math.floor(Math.random()*lfoWaveTypes.length)\n      this.setState({lfo3Type: randomType})\n      this.props.changeLFO3Type(randomType)\n    }\n\n    updateLFO3Freq(square1distance5FromOsc3) {\n      let lfo3Freq = Math.floor((square1distance5FromOsc3 * .002) * Math.floor(Math.random() * (12) - 1 + 1) + 1)\n      this.props.changeLFO3Freq(lfo3Freq)\n      console.log(lfo3Freq)\n    }\n\n    updateOSC3chorusBypass(){\n      this.props.toggleOSC3chorusBypass(!this.props.osc3chorusBypass)\n      console.log(this.props.osc3chorusBypass)\n    }\n\n    updateOSC3chorusDepth(square2distance6FromOsc3) {\n      let osc3chorusDepth = (1000 - square2distance6FromOsc3) * .001\n      this.setState({osc3chorusDepth: osc3chorusDepth})\n      this.props.changeOSC3chorusDepth(osc3chorusDepth)\n    }\n\n    updateOSC3chorusRate(square2distance6FromOsc3) {\n      console.log(square2distance6FromOsc3)\n      let osc3chorusRate = Math.floor(square2distance6FromOsc3 * .008)\n      this.setState({osc3chorusRate: osc3chorusRate})\n      this.props.changeOSC3chorusRate(osc3chorusRate)\n    }\n\n    updateOSC3filterBypass() {\n      this.props.toggleOSC3filterBypass(!this.props.osc3filterBypass)\n      console.log(this.props.osc3filterBypass)\n    }\n\n    updateOSC3filterDepth(square3distance7FromOsc3) {\n      let osc3filterDepth = (1000 - square3distance7FromOsc3) * .001\n      this.setState({osc3filterDepth: osc3filterDepth})\n      this.props.changeOSC3filterDepth(osc3filterDepth)\n    }\n\n    updateOSC3filterRate(square3distance7FromOsc3) {\n      let osc3filterRate = Math.floor(square3distance7FromOsc3 * .008)\n      this.setState({osc3filterRate: osc3filterRate})\n      this.props.changeOSC3filterRate(osc3filterRate)\n    }\n\n    updateOSC3filter2Bypass() {\n      this.props.toggleOSC3filter2Bypass(!this.props.osc3filter2Bypass)\n      console.log(this.props.osc3filter2Bypass)\n    }\n\n    updateOSC3filter2Depth(square4distance8FromOsc3) {\n      let osc3filter2Depth =  Math.floor((1000 - square4distance8FromOsc3) * .008)\n      this.setState({osc3filter2Depth: osc3filter2Depth})\n      this.props.changeOSC3filter2Depth(osc3filter2Depth)\n    }\n\n    updateOSC3filter2Rate(square4distance8FromOsc3) {\n      let osc3filter2Rate = square4distance8FromOsc3 * .001\n      this.setState({osc3filter2Rate: osc3filter2Rate})\n      this.props.changeOSC3filter2Rate(osc3filter2Rate)  \n    }\n\n    updateOSC3tremoloBypass() {\n      console.log(this.props.osc3tremoloBypass)\n      this.props.toggleOSC3tremoloBypass(!this.props.osc3tremoloBypass)\n      console.log(this.props.osc3tremoloBypass)\n    }\n\n    updateOSC3tremoloIntensity(square5distance9FromOsc3) {\n      let osc3tremoloIntensity = (1000 - square5distance9FromOsc3) * .001\n      this.setState({osc3tremoloIntensity: osc3tremoloIntensity})\n      this.props.changeOSC3tremoloIntensity(osc3tremoloIntensity)\n    }\n\n    updateOSC3tremoloRate(square5distance9FromOsc3) {\n      let osc3tremoloRate = square5distance9FromOsc3 * .011\n      this.setState({osc3tremoloRate: osc3tremoloRate})\n      this.props.changeOSC3tremoloRate(osc3tremoloRate)\n    }\n\n    updateOSC3bitcrusherBypass() {\n      this.props.toggleOSC3bitcrusherBypass(!this.props.osc3bitcrusherBypass)\n      console.log(this.props.osc3bitcrusherBypass)\n    }\n\n    updateOSC3bitcrusherBits(square6distance10FromOsc3) {\n      let osc3bitcrusherBits = Math.floor((1000 - square6distance10FromOsc3) * .016)\n      this.setState({osc3bitcrusherBits: osc3bitcrusherBits})\n      this.props.changeOSC3bitcrusherBits(osc3bitcrusherBits)\n    }\n\n    updateOSC3bitcrusherBufferSize(square6distance10FromOsc3) {\n      let osc3bitcrusherBufferSize = square6distance10FromOsc3 * Math.floor(Math.random() * (16) -1 + 1) + 256\n      this.setState({osc3bitcrusherBufferSize: osc3bitcrusherBufferSize})\n      this.props.changeOSC3bitcrusherBufferSize(osc3bitcrusherBufferSize)\n    }\n\n    updateOSC3moogFilterBypass() {\n      this.props.toggleOSC3moogFilterBypass(!this.props.osc3moogFilterBypass)\n      console.log(this.props.osc3moogFilterBypass)\n    }\n\n    updateOSC3moogFilterCutoff(square7distance11FromOsc3) {\n      let osc3moogFilterCutoff = (1000 - square7distance11FromOsc3) * .001\n      this.setState({osc3moogFilterCutoff: osc3moogFilterCutoff})\n      this.props.changeOSC3moogFilterCutoff(osc3moogFilterCutoff)\n    }\n\n    updateOSC3moogFilterBufferSize(square7distance11FromOsc3) {\n      let osc3moogFilterBufferSize = square7distance11FromOsc3 * Math.floor(Math.random() * (16) -1 + 1) + 256\n      this.setState({osc3moogFilterBufferSize: osc3moogFilterBufferSize})\n      this.props.changeOSC3moogFilterBufferSize(osc3moogFilterBufferSize)\n    }\n\n    updateOSC3moogFilterResonance(square7distance11FromOsc3) {\n      let osc3moogFilterResonance = Math.floor(square7distance11FromOsc3 * .004)\n      this.setState({osc3moogFilterResonance: osc3moogFilterResonance})\n      this.props.changeOSC3moogFilterResonance(osc3moogFilterResonance)\n    }\n\n    updateOSC3moogFilter2Bypass() {\n      this.props.toggleOSC3moogFilter2Bypass(!this.props.osc3moogFilter2Bypass)\n      console.log(this.props.osc3moogFilter2Bypass)\n    }\n\n    updateOSC3moogFilter2Cutoff(square8distance12FromOsc3) {\n      let osc3moogFilter2Cutoff = (1000 - square8distance12FromOsc3) * .001\n      this.setState({osc3moogFilter2Cutoff: osc3moogFilter2Cutoff})\n      this.props.changeOSC3moogFilter2Cutoff(osc3moogFilter2Cutoff)\n    }\n\n    updateOSC3moogFilter2BufferSize(square8distance12FromOsc3) {\n      let osc3moogFilter2BufferSize = square8distance12FromOsc3 * Math.floor(Math.random() * (16) -1 + 1) + 256\n      this.setState({osc3moogFilter2BufferSize: osc3moogFilter2BufferSize})\n      this.props.changeOSC3moogFilter2BufferSize(osc3moogFilter2BufferSize)\n    }\n\n    updateOSC3moogFilter2Resonance(square8distance12FromOsc3) {\n      let osc3moogFilter2Resonance = Math.floor(square8distance12FromOsc3 * .004)\n      this.setState({osc3moogFilter2Resonance: osc3moogFilter2Resonance})\n      this.props.changeOSC3moogFilter2Resonance(osc3moogFilter2Resonance)\n    }\n\n    updateOSC3reverbBypass() {\n      this.props.toggleOSC3reverbBypass(!this.props.osc3reverbBypass)\n      console.log(this.props.osc3reverbBypass)\n    }\n\n    updateOSC3reverbLevel(square9distance13FromOsc3) {\n      let osc3reverbLevel = (1000 - square9distance13FromOsc3) * .001\n      this.setState({osc3reverbLevel: osc3reverbLevel})\n      this.props.changeOSC3reverbLevel(osc3reverbLevel)\n    }\n\n    updateOSC3pannerBypass() {\n      this.props.toggleOSC3pannerBypass(!this.props.osc3pannerBypass)\n      console.log(this.props.osc3pannerBypass)\n    }\n\n    updateOSC3pannerPan(square10distance14FromOsc3) {\n      let osc3pannerPan = 1 - ((1000 - square10distance14FromOsc3) * .002)\n      this.setState({osc3pannerPan: osc3pannerPan})\n      this.props.changeOSC3pannerPan(osc3pannerPan)\n    }\n\n    updateOSC3phaserBypass() {\n      this.props.toggleOSC3phaserBypass(!this.props.osc3phaserBypass)\n      console.log(this.props.osc3phaserBypass)\n    }\n\n    updateOSC3phaserRate(square11distance15FromOsc3) {\n      let osc3phaserRate = Math.floor(square11distance15FromOsc3 * .008)\n      this.setState({osc3phaserRate: osc3phaserRate})\n      this.props.changeOSC3phaserRate(osc3phaserRate)\n    }\n\n    updateOSC3phaserDepth(square11distance15FromOsc3) {\n      let osc3phaserDepth = (1000 - square11distance15FromOsc3) * .001\n      this.setState({osc3phaserDepth: osc3phaserDepth})\n      this.props.changeOSC3phaserDepth(osc3phaserDepth)\n    }\n\n    updateOSC3phaserFeedback(square11distance15FromOsc3) {\n       let osc3phaserFeedback = square11distance15FromOsc3 * .001\n       this.setState({osc3phaserFeedback: osc3phaserFeedback})\n       this.props.changeOSC3phaserFeedback(osc3phaserFeedback)\n    }\n\n    updateOSC3overdriveBypass() {\n      this.props.toggleOSC3overdriveBypass(!this.props.osc3overdriveBypass)\n      console.log(this.props.osc3overdriveBypass)\n    }\n\n    updateOSC3overdriveDrive(square12distance16FromOsc3) {\n      let osc3overdriveDrive = (1000 - square12distance16FromOsc3) * .001\n      this.setState({osc3overdriveDrive: osc3overdriveDrive})\n      this.props.changeOSC3overdriveDrive(osc3overdriveDrive)\n    }\n\n    updateOSC3overdriveGain(square12distance16FromOsc3) {\n      let osc3overdriveGain = Math.floor(46 - ((1000 - square12distance16FromOsc3) * .046)) * -1\n      this.setState({osc3overdriveGain: osc3overdriveGain})\n      this.props.changeOSC3overdriveGain(osc3overdriveGain)\n    }\n\n\n/////////OSC4 FUNCTIONS/////////////\n    updateFrequencyOSC4() {\n    \n      let osc4Freq = this.state.circle4Pos[1] * Math.floor(Math.random() * (7) - 1 + 1) + 20\n      this.props.changeOSC4Freq(osc4Freq);\n    }\n\n\n\n    turnOnLFO4() {\n      this.props.turnOnLFO4(!this.props.isLFO4On);\n      console.log(this.props.isLFO2On)\n    }\n\n    updateLFO4Type() {\n      let lfoWaveTypes = ['sine', 'square', 'triangle', 'sawtooth']\n      let randomType = Math.floor(Math.random()*lfoWaveTypes.length)\n      this.setState({lfo4Type: randomType})\n      this.props.changeLFO4Type(randomType)\n    }\n\n    updateLFO4Freq(square1distance5FromOsc4) {\n      let lfo4Freq = Math.floor((square1distance5FromOsc4 * .002) * Math.floor(Math.random() * (12) - 1 + 1) + 1)\n      this.props.changeLFO4Freq(lfo4Freq)\n      console.log(lfo4Freq)\n    }\n\n    updateOSC4chorusBypass(){\n      this.props.toggleOSC4chorusBypass(!this.props.osc4chorusBypass)\n      console.log(this.props.osc4chorusBypass)\n    }\n\n    updateOSC4chorusDepth(square2distance6FromOsc4) {\n      let osc4chorusDepth = (1000 - square2distance6FromOsc4) * .001\n      this.setState({osc4chorusDepth: osc4chorusDepth})\n      this.props.changeOSC4chorusDepth(osc4chorusDepth)\n    }\n\n    updateOSC4chorusRate(square2distanceFromOsc4) {\n      console.log(square2distanceFromOsc4)\n      let osc4chorusRate = Math.floor(square2distanceFromOsc4 * .008)\n      this.setState({osc4chorusRate: osc4chorusRate})\n      this.props.changeOSC4chorusRate(osc4chorusRate)\n    }\n\n    updateOSC4filterBypass() {\n      this.props.toggleOSC4filterBypass(!this.props.osc4filterBypass)\n      console.log(this.props.osc4filterBypass)\n    }\n\n    updateOSC4filterDepth(square3distance7FromOsc4) {\n      let osc4filterDepth = (1000 - square3distance7FromOsc4) * .001\n      this.setState({osc4filterDepth: osc4filterDepth})\n      this.props.changeOSC4filterDepth(osc4filterDepth)\n    }\n\n    updateOSC4filterRate(square3distance7FromOsc4) {\n      let osc4filterRate = Math.floor(square3distance7FromOsc4 * .008)\n      this.setState({osc4filterRate: osc4filterRate})\n      this.props.changeOSC4filterRate(osc4filterRate)\n    }\n\n    updateOSC4filter2Bypass() {\n      this.props.toggleOSC4filter2Bypass(!this.props.osc4filter2Bypass)\n      console.log(this.props.osc4filter2Bypass)\n    }\n\n    updateOSC4filter2Depth(square4distance8FromOsc4) {\n      let osc4filter2Depth =  Math.floor((1000 - square4distance8FromOsc4) * .008)\n      this.setState({osc4filter2Depth: osc4filter2Depth})\n      this.props.changeOSC4filter2Depth(osc4filter2Depth)\n    }\n\n    updateOSC4filter2Rate(square4distance8FromOsc4) {\n      let osc4filter2Rate = square4distance8FromOsc4 * .001\n      this.setState({osc4filter2Rate: osc4filter2Rate})\n      this.props.changeOSC4filter2Rate(osc4filter2Rate)  \n    }\n\n    updateOSC4tremoloBypass() {\n      console.log(this.props.osc4tremoloBypass)\n      this.props.toggleOSC4tremoloBypass(!this.props.osc4tremoloBypass)\n      console.log(this.props.osc4tremoloBypass)\n    }\n\n    updateOSC4tremoloIntensity(square5distance9FromOsc4) {\n      let osc4tremoloIntensity = (1000 - square5distance9FromOsc4) * .001\n      this.setState({osc4tremoloIntensity: osc4tremoloIntensity})\n      this.props.changeOSC4tremoloIntensity(osc4tremoloIntensity)\n      console.log(osc4tremoloIntensity)\n    }\n\n    updateOSC4tremoloRate(square5distance9FromOsc4) {\n      let osc4tremoloRate = square5distance9FromOsc4 * .011\n      this.setState({osc4tremoloRate: osc4tremoloRate})\n      this.props.changeOSC4tremoloRate(osc4tremoloRate)\n    }\n\n    updateOSC4bitcrusherBypass() {\n      this.props.toggleOSC4bitcrusherBypass(!this.props.osc4bitcrusherBypass)\n      console.log(this.props.osc4bitcrusherBypass)\n    }\n\n    updateOSC4bitcrusherBits(square6distance10FromOsc4) {\n      let osc4bitcrusherBits = Math.floor((1000 - square6distance10FromOsc4) * .016)\n      this.setState({osc4bitcrusherBits: osc4bitcrusherBits})\n      this.props.changeOSC4bitcrusherBits(osc4bitcrusherBits)\n    }\n\n    updateOSC4bitcrusherBufferSize(square6distance10FromOsc4) {\n       let osc4bitcrusherBufferSize = square6distance10FromOsc4 * Math.floor(Math.random() * (16) -1 + 1) + 256\n      this.setState({osc4bitcrusherBufferSize: osc4bitcrusherBufferSize})\n      this.props.changeOSC4bitcrusherBufferSize(osc4bitcrusherBufferSize)\n    }\n\n    updateOSC4moogFilterBypass() {\n      this.props.toggleOSC4moogFilterBypass(!this.props.osc4moogFilterBypass)\n      console.log(this.props.osc4moogFilterBypass)\n    }\n\n    updateOSC4moogFilterCutoff(square7distance11FromOsc4) {\n      let osc4moogFilterCutoff = (1000 - square7distance11FromOsc4) * .001\n      this.setState({osc4moogFilterCutoff: osc4moogFilterCutoff})\n      this.props.changeOSC4moogFilterCutoff(osc4moogFilterCutoff)\n    }\n\n    updateOSC4moogFilterBufferSize(square7distance11FromOsc4) {\n      let osc4moogFilterBufferSize = square7distance11FromOsc4 * Math.floor(Math.random() * (16) -1 + 1) + 256\n      this.setState({osc4moogFilterBufferSize: osc4moogFilterBufferSize})\n      this.props.changeOSC4moogFilterBufferSize(osc4moogFilterBufferSize)\n    }\n\n    updateOSC4moogFilterResonance(square7distance11FromOsc4) {\n      let osc4moogFilterResonance = Math.floor(square7distance11FromOsc4 * .004)\n      this.setState({osc4moogFilterResonance: osc4moogFilterResonance})\n      this.props.changeOSC4moogFilterResonance(osc4moogFilterResonance)\n    }\n\n    updateOSC4moogFilter2Bypass() {\n      this.props.toggleOSC4moogFilter2Bypass(!this.props.osc4moogFilter2Bypass)\n      console.log(this.props.osc4moogFilter2Bypass)\n    }\n\n    updateOSC4moogFilter2Cutoff(square8distance12FromOsc4) {\n      let osc4moogFilter2Cutoff = (1000 - square8distance12FromOsc4) * .001\n      this.setState({osc4moogFilter2Cutoff: osc4moogFilter2Cutoff})\n      this.props.changeOSC4moogFilter2Cutoff(osc4moogFilter2Cutoff)\n    }\n\n    updateOSC4moogFilter2BufferSize(square8distance12FromOsc4) {\n      let osc4moogFilter2BufferSize = square8distance12FromOsc4 * Math.floor(Math.random() * (16) -1 + 1) + 256\n      this.setState({osc4moogFilter2BufferSize: osc4moogFilter2BufferSize})\n      this.props.changeOSC4moogFilter2BufferSize(osc4moogFilter2BufferSize)\n    }\n\n    updateOSC4moogFilter2Resonance(square8distance12FromOsc4) {\n      let osc4moogFilter2Resonance = Math.floor(square8distance12FromOsc4 * .004)\n      this.setState({osc4moogFilter2Resonance: osc4moogFilter2Resonance})\n      this.props.changeOSC4moogFilter2Resonance(osc4moogFilter2Resonance)\n    }\n\n    updateOSC4reverbBypass() {\n      this.props.toggleOSC4reverbBypass(!this.props.osc4reverbBypass)\n      console.log(this.props.osc4reverbBypass)\n    }\n\n    updateOSC4reverbLevel(square9distance13FromOsc4) {\n      let osc4reverbLevel = (1000 - square9distance13FromOsc4) * .001\n      this.setState({osc4reverbLevel: osc4reverbLevel})\n      this.props.changeOSC4reverbLevel(osc4reverbLevel)\n    }\n\n    updateOSC4pannerBypass() {\n      this.props.toggleOSC4pannerBypass(!this.props.osc4pannerBypass)\n      console.log(this.props.osc4pannerBypass)\n    }\n\n    updateOSC4pannerPan(square10distance14FromOsc4) {\n      let osc4pannerPan = 1 - ((1000 - square10distance14FromOsc4) * .002)\n      this.setState({osc4pannerPan: osc4pannerPan})\n      this.props.changeOSC4pannerPan(osc4pannerPan)\n    }\n\n    updateOSC4phaserBypass() {\n      this.props.toggleOSC4phaserBypass(!this.props.osc4phaserBypass)\n      console.log(this.props.osc4phaserBypass)\n    }\n\n    updateOSC4phaserRate(square11distance15FromOsc4) {\n      let osc4phaserRate = Math.floor(square11distance15FromOsc4 * .008)\n      this.setState({osc4phaserRate: osc4phaserRate})\n      this.props.changeOSC4phaserRate(osc4phaserRate)\n    }\n\n    updateOSC4phaserDepth(square11distance15FromOsc4) {\n      let osc4phaserDepth = (1000 - square11distance15FromOsc4) * .001\n      this.setState({osc4phaserDepth: osc4phaserDepth})\n      this.props.changeOSC4phaserDepth(osc4phaserDepth)\n    }\n\n    updateOSC4phaserFeedback(square11distance15FromOsc4) {\n       let osc4phaserFeedback = square11distance15FromOsc4 * .001\n       this.setState({osc4phaserFeedback: osc4phaserFeedback})\n       this.props.changeOSC4phaserFeedback(osc4phaserFeedback)\n    }\n\n    updateOSC4overdriveBypass() {\n      this.props.toggleOSC4overdriveBypass(!this.props.osc4overdriveBypass)\n      console.log(this.props.osc4overdriveBypass)\n    }\n\n    updateOSC4overdriveDrive(square12distance16FromOsc4) {\n      let osc4overdriveDrive = (1000 - square12distance16FromOsc4) * .001\n      this.setState({osc4overdriveDrive: osc4overdriveDrive})\n      this.props.changeOSC4overdriveDrive(osc4overdriveDrive)\n    }\n\n    updateOSC4overdriveGain(square12distance16FromOsc4) {\n      let osc4overdriveGain = Math.floor(46 - ((1000 - square12distance16FromOsc4) * .046)) * -1\n      this.setState({osc4overdriveGain: osc4overdriveGain})\n      this.props.changeOSC4overdriveGain(osc4overdriveGain)\n    }\n\n    \n\n    // updateOsc1Overdrive() {\n      // let Osc1Overdrive = this.state.\n    \n\n    render() {\n        const { color, width, height} = this.props;\n\n        return (\n          <div>\n          {/* {this.props.oscFreq} */}\n          <canvas ref=\"canvas\" width={ width } height={ height }></canvas>   \n            \n\n          </div>        \n        );\n    }\n\n}\n\nfunction mapStateToProps(state){\n  console.log(state.oscFreq, state.osc2Freq)\n  return {\n    oscFreq: state.oscFreq,\n\n    isLFOOn: state.isLFOOn,\n\t\tlfoFreq: state.lfoFreq,\n\t\tlfoType: state.lfoType,\n\n    osc1chorusBypass: state.osc1chorusBypass,\n\t\tosc1chorusDepth: state.osc1chorusDepth,\n\t\tosc1chorusRate: state.osc1chorusRate,\n\n\t\tosc1filterBypass: state.osc1filterBypass,\n\t\tosc1filterRate: state.osc1filterRate,\n\t\tosc1filterDepth: state.osc1filterDepth,\n\n\t\tosc1filter2Bypass: state.osc1filter2Bypass,\n\t\tosc1filter2Rate: state.osc1filter2Rate,\n\t\tosc1filter2Depth: state.osc1filter2Depth,\n\n\t\tosc1tremoloBypass: state.osc1tremoloBypass,\n\t\tosc1tremoloIntensity: state.osc1tremoloIntensity,\n\t\tosc1tremoloRate: state.osc1tremoloRate,\n\n\t\tosc1bitcrusherBypass: state.osc1bitcrusherBypass,\n\t\tosc1bitcrusherBits: state.osc1bitcrusherBits,\n\t\tosc1bitcrusherBufferSize: state.osc1bitcrusherBufferSize,\n\n\t\tosc1moogFilterBypass: state.osc1moogFilterBypass,\n\t\tosc1moogFilterBufferSize: state.osc1moogFilterBufferSize,\n\t\tosc1moogFilterCutoff: state.osc1moogFilterCutoff,\n\t\tosc1moogFilterResonance: state.osc1moogFilterResonance,\n\n\t\tosc1moogFilter2Bypass: state.osc1moogFilter2Bypass,\n\t\tosc1moogFilter2BufferSize: state.osc1moogFilter2BufferSize,\n\t\tosc1moogFilter2Cutoff: state.osc1moogFilter2Cutoff,\n\t\tosc1moogFilter2Resonance: state.osc1moogFilter2Resonance,\n\n\t\tosc1reverbBypass: state.osc1reverbBypass,\n\t\tosc1reverbLevel: state.osc1reverbLevel,\n\n\t\tosc1pannerBypass: state.osc1pannerBypass,\n\t\tosc1pannerPan: state.osc1pannerPan,\n\n\t\tosc1phaserBypass: state.osc1phaserBypass,\n\t\tosc1phaserRate: state.osc1phaserRate,\n\t\tosc1phaserDepth: state.osc1phaserDepth,\n\t\tosc1phaserFeedback: state.osc1phaserFeedback,\n\n\t\tosc1overdriveBypass: state.osc1overdriveBypass,\n\t\tosc1overdriveDrive: state.osc1overdriveDrive,\n\t\tosc1overdriveGain: state.osc1overdriveGain,\n\n\n\n\n    osc2Freq: state.osc2Freq,\n\n    isLFO2On: state.isLFO2On,\n\t\tlfo2Freq: state.lfo2Freq,\n\t\tlfo2Type: state.lfo2Type,\n\n    osc2chorusBypass: state.osc2chorusBypass,\n\t\tosc2chorusDepth: state.osc2chorusDepth,\n\t\tosc2chorusRate: state.osc2chorusRate,\n\n\t\tosc2filterBypass: state.osc2filterBypass,\n\t\tosc2filterRate: state.osc2filterRate,\n\t\tosc2filterDepth: state.osc2filterDepth,\n\n\t\tosc2filter2Bypass: state.osc2filter2Bypass,\n\t\tosc2filter2Rate: state.osc2filter2Rate,\n\t\tosc2filter2Depth: state.osc2filter2Depth,\n\n\t\tosc2tremoloBypass: state.osc2tremoloBypass,\n\t\tosc2tremoloIntensity: state.osc2tremoloIntensity,\n\t\tosc2tremoloRate: state.osc2tremoloRate,\n\n\t\tosc2bitcrusherBypass: state.osc2bitcrusherBypass,\n\t\tosc2bitcrusherBits: state.osc2bitcrusherBits,\n\t\tosc2bitcrusherBufferSize: state.osc2bitcrusherBufferSize,\n\n\t\tosc2moogFilterBypass: state.osc2moogFilterBypass,\n\t\tosc2moogFilterBufferSize: state.osc2moogFilterBufferSize,\n\t\tosc2moogFilterCutoff: state.osc2moogFilterCutoff,\n\t\tosc2moogFilterResonance: state.osc2moogFilterResonance,\n\n\t\tosc2moogFilter2Bypass: state.osc2moogFilter2Bypass,\n\t\tosc2moogFilter2BufferSize: state.osc2moogFilter2BufferSize,\n\t\tosc2moogFilter2Cutoff: state.osc2moogFilter2Cutoff,\n\t\tosc2moogFilter2Resonance: state.osc2moogFilter2Resonance,\n\n\t\tosc2reverbBypass: state.osc2reverbBypass,\n\t\tosc2reverbLevel: state.osc2reverbLevel,\n\n\t\tosc2pannerBypass: state.osc2pannerBypass,\n\t\tosc2pannerPan: state.osc2pannerPan,\n\n\t\tosc2phaserBypass: state.osc2phaserBypass,\n\t\tosc2phaserRate: state.osc2phaserRate,\n\t\tosc2phaserDepth: state.osc2phaserDepth,\n\t\tosc2phaserFeedback: state.osc2phaserFeedback,\n\n\t\tosc2overdriveBypass: state.osc2overdriveBypass,\n\t\tosc2overdriveDrive: state.osc2overdriveDrive,\n\t\tosc2overdriveGain: state.osc2overdriveGain,\n\n    osc3Freq: state.osc3Freq,\n\n    isLFO3On: state.isLFO3On,\n\t\tlfo3Freq: state.lfo3Freq,\n\t\tlfo3Type: state.lfo3Type,\n\n    osc3chorusBypass: state.osc3chorusBypass,\n\t\tosc3chorusDepth: state.osc3chorusDepth,\n\t\tosc3chorusRate: state.osc3chorusRate,\n\n\t\tosc3filterBypass: state.osc3filterBypass,\n\t\tosc3filterRate: state.osc3filterRate,\n\t\tosc3filterDepth: state.osc3filterDepth,\n\n\t\tosc3filter2Bypass: state.osc3filter2Bypass,\n\t\tosc3filter2Rate: state.osc3filter2Rate,\n\t\tosc3filter2Depth: state.osc3filter2Depth,\n\n\t\tosc3tremoloBypass: state.osc3tremoloBypass,\n\t\tosc3tremoloIntensity: state.osc3tremoloIntensity,\n\t\tosc3tremoloRate: state.osc3tremoloRate,\n\n\t\tosc3bitcrusherBypass: state.osc3bitcrusherBypass,\n\t\tosc3bitcrusherBits: state.osc3bitcrusherBits,\n\t\tosc3bitcrusherBufferSize: state.osc3bitcrusherBufferSize,\n\n\t\tosc3moogFilterBypass: state.osc3moogFilterBypass,\n\t\tosc3moogFilterBufferSize: state.osc3moogFilterBufferSize,\n\t\tosc3moogFilterCutoff: state.osc3moogFilterCutoff,\n\t\tosc3moogFilterResonance: state.osc3moogFilterResonance,\n\n\t\tosc3moogFilter2Bypass: state.osc3moogFilter2Bypass,\n\t\tosc3moogFilter2BufferSize: state.osc3moogFilter2BufferSize,\n\t\tosc3moogFilter2Cutoff: state.osc3moogFilter2Cutoff,\n\t\tosc3moogFilter2Resonance: state.osc3moogFilter2Resonance,\n\n\t\tosc3reverbBypass: state.osc3reverbBypass,\n\t\tosc3reverbLevel: state.osc3reverbLevel,\n\n\t\tosc3pannerBypass: state.osc3pannerBypass,\n\t\tosc3pannerPan: state.osc3pannerPan,\n\n\t\tosc3phaserBypass: state.osc3phaserBypass,\n\t\tosc3phaserRate: state.osc3phaserRate,\n\t\tosc3phaserDepth: state.osc3phaserDepth,\n\t\tosc3phaserFeedback: state.osc3phaserFeedback,\n\n\t\tosc3overdriveBypass: state.osc3overdriveBypass,\n\t\tosc3overdriveDrive: state.osc3overdriveDrive,\n\t\tosc3overdriveGain: state.osc3overdriveGain,\n\n    osc4Freq: state.osc4Freq,\n\n    isLFO4On: state.isLFO4On,\n\t\tlfo4Freq: state.lfo4Freq,\n\t\tlfo4Type: state.lfo4Type,\n\n    osc4chorusBypass: state.osc4chorusBypass,\n\t\tosc4chorusDepth: state.osc4chorusDepth,\n\t\tosc4chorusRate: state.osc4chorusRate,\n\n\t\tosc4filterBypass: state.osc4filterBypass,\n\t\tosc4filterRate: state.osc4filterRate,\n\t\tosc4filterDepth: state.osc4filterDepth,\n\n\t\tosc4filter2Bypass: state.osc4filter2Bypass,\n\t\tosc4filter2Rate: state.osc4filter2Rate,\n\t\tosc4filter2Depth: state.osc4filter2Depth,\n\n\t\tosc4tremoloBypass: state.osc4tremoloBypass,\n\t\tosc4tremoloIntensity: state.osc4tremoloIntensity,\n\t\tosc4tremoloRate: state.osc4tremoloRate,\n\n\t\tosc4bitcrusherBypass: state.osc4bitcrusherBypass,\n\t\tosc4bitcrusherBits: state.osc4bitcrusherBits,\n\t\tosc4bitcrusherBufferSize: state.osc4bitcrusherBufferSize,\n\n\t\tosc4moogFilterBypass: state.osc4moogFilterBypass,\n\t\tosc4moogFilterBufferSize: state.osc4moogFilterBufferSize,\n\t\tosc4moogFilterCutoff: state.osc4moogFilterCutoff,\n\t\tosc4moogFilterResonance: state.osc4moogFilterResonance,\n\n\t\tosc4moogFilter2Bypass: state.osc4moogFilter2Bypass,\n\t\tosc4moogFilter2BufferSize: state.osc4moogFilter2BufferSize,\n\t\tosc4moogFilter2Cutoff: state.osc4moogFilter2Cutoff,\n\t\tosc4moogFilter2Resonance: state.osc4moogFilter2Resonance,\n\n\t\tosc4reverbBypass: state.osc4reverbBypass,\n\t\tosc4reverbLevel: state.osc4reverbLevel,\n\n\t\tosc4pannerBypass: state.osc4pannerBypass,\n\t\tosc4pannerPan: state.osc4pannerPan,\n\n\t\tosc4phaserBypass: state.osc4phaserBypass,\n\t\tosc4phaserRate: state.osc4phaserRate,\n\t\tosc4phaserDepth: state.osc4phaserDepth,\n\t\tosc4phaserFeedback: state.osc4phaserFeedback,\n\n\t\tosc4overdriveBypass: state.osc4overdriveBypass,\n\t\tosc4overdriveDrive: state.osc4overdriveDrive,\n\t\tosc4overdriveGain: state.osc4overdriveGain,\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  console.log(dispatch)\n  return {\n    changeOSCFreq: (value) => dispatch(changeOSCFreq(value)),\n\n    turnOnLFO: () => dispatch(turnOnLFO()),\n    changeLFOType: (wave) => dispatch(changeLFOType(wave)),\n    changeLFOFreq: (value) => dispatch(changeLFOFreq(value)),\n\n    toggleOSC1chorusBypass: () => dispatch(toggleOSC1chorusBypass()),\n    changeOSC1chorusDepth: (value) => dispatch(changeOSC1chorusDepth(value)),\n    changeOSC1chorusRate: (value) => dispatch(changeOSC1chorusRate(value)),\n\n    toggleOSC1filterBypass: () => dispatch(toggleOSC1filterBypass()),\n    changeOSC1filterDepth: (value) => dispatch(changeOSC1filterDepth(value)),\n    changeOSC1filterRate: (value) => dispatch(changeOSC1filterRate(value)),\n\n    toggleOSC1filter2Bypass: () => dispatch(toggleOSC1filter2Bypass()),\n    changeOSC1filter2Depth: (value) => dispatch(changeOSC1filter2Depth(value)),\n    changeOSC1filter2Rate: (value) => dispatch(changeOSC1filter2Rate(value)),\n\n    toggleOSC1tremoloBypass: () => dispatch(toggleOSC1tremoloBypass()),\n    changeOSC1tremoloIntensity: (value) => dispatch(changeOSC1tremoloIntensity(value)),\n    changeOSC1tremoloRate: (value) => dispatch(changeOSC1tremoloRate(value)),\n\n    toggleOSC1bitcrusherBypass: () => dispatch(toggleOSC1bitcrusherBypass()),\n    changeOSC1bitcrusherBits: (value) => dispatch(changeOSC1bitcrusherBits(value)),\n    changeOSC1bitcrusherBufferSize: (value) => dispatch(changeOSC1bitcrusherBufferSize(value)),\n\n    toggleOSC1moogFilterBypass: () => dispatch(toggleOSC1moogFilterBypass()),\n    changeOSC1moogFilterCutoff: (value) => dispatch(changeOSC1moogFilterCutoff(value)),\n    changeOSC1moogFilterBufferSize: (value) => dispatch(changeOSC1moogFilterBufferSize(value)),\n    changeOSC1moogFilterResonance: (value) => dispatch(changeOSC1moogFilterResonance(value)),\n\n    toggleOSC1moogFilter2Bypass: () => dispatch(toggleOSC1moogFilter2Bypass()),\n    changeOSC1moogFilter2Cutoff: (value) => dispatch(changeOSC1moogFilter2Cutoff(value)),\n    changeOSC1moogFilter2BufferSize: (value) => dispatch(changeOSC1moogFilter2BufferSize(value)),\n    changeOSC1moogFilter2Resonance: (value) => dispatch(changeOSC1moogFilter2Resonance(value)),\n\n    toggleOSC1reverbBypass: () => dispatch(toggleOSC1reverbBypass()),\n    changeOSC1reverbLevel: (value) => dispatch(changeOSC1reverbLevel(value)),\n\n    toggleOSC1pannerBypass: () => dispatch(toggleOSC1pannerBypass()),\n    changeOSC1pannerPan: (value) => dispatch(changeOSC1pannerPan(value)),\n\n    toggleOSC1phaserBypass: () => dispatch(toggleOSC1phaserBypass()),\n    changeOSC1phaserRate: (value) => dispatch(changeOSC1phaserRate(value)),\n    changeOSC1phaserDepth: (value) => dispatch(changeOSC1phaserDepth(value)),\n    changeOSC1phaserFeedback: (value) => dispatch(changeOSC1phaserFeedback(value)),\n\n    toggleOSC1overdriveBypass: () => dispatch(toggleOSC1overdriveBypass()),\n    changeOSC1overdriveDrive: (value) => dispatch(changeOSC1overdriveDrive(value)),\n    changeOSC1overdriveGain: (value) => dispatch(changeOSC1overdriveGain(value)),\n\n\n\n\n    changeOSC2Freq: (value) => dispatch(changeOSC2Freq(value)),\n\n    turnOnLFO2: () => dispatch(turnOnLFO2()),\n    changeLFO2Type: (wave) => dispatch(changeLFO2Type(wave)),\n    changeLFO2Freq: (value) => dispatch(changeLFO2Freq(value)),\n\n    toggleOSC2chorusBypass: () => dispatch(toggleOSC2chorusBypass()),\n    changeOSC2chorusDepth: (value) => dispatch(changeOSC2chorusDepth(value)),\n    changeOSC2chorusRate: (value) => dispatch(changeOSC2chorusRate(value)),\n\n    toggleOSC2filterBypass: () => dispatch(toggleOSC2filterBypass()),\n    changeOSC2filterDepth: (value) => dispatch(changeOSC2filterDepth(value)),\n    changeOSC2filterRate: (value) => dispatch(changeOSC2filterRate(value)),\n\n    toggleOSC2filter2Bypass: () => dispatch(toggleOSC2filter2Bypass()),\n    changeOSC2filter2Depth: (value) => dispatch(changeOSC2filter2Depth(value)),\n    changeOSC2filter2Rate: (value) => dispatch(changeOSC2filter2Rate(value)),\n\n    toggleOSC2tremoloBypass: () => dispatch(toggleOSC2tremoloBypass()),\n    changeOSC2tremoloIntensity: (value) => dispatch(changeOSC2tremoloIntensity(value)),\n    changeOSC2tremoloRate: (value) => dispatch(changeOSC2tremoloRate(value)),\n\n    toggleOSC2bitcrusherBypass: () => dispatch(toggleOSC2bitcrusherBypass()),\n    changeOSC2bitcrusherBits: (value) => dispatch(changeOSC2bitcrusherBits(value)),\n    changeOSC2bitcrusherBufferSize: (value) => dispatch(changeOSC2bitcrusherBufferSize(value)),\n\n    toggleOSC2moogFilterBypass: () => dispatch(toggleOSC2moogFilterBypass()),\n    changeOSC2moogFilterCutoff: (value) => dispatch(changeOSC2moogFilterCutoff(value)),\n    changeOSC2moogFilterBufferSize: (value) => dispatch(changeOSC2moogFilterBufferSize(value)),\n    changeOSC2moogFilterResonance: (value) => dispatch(changeOSC2moogFilterResonance(value)),\n\n    toggleOSC2moogFilter2Bypass: () => dispatch(toggleOSC2moogFilter2Bypass()),\n    changeOSC2moogFilter2Cutoff: (value) => dispatch(changeOSC2moogFilter2Cutoff(value)),\n    changeOSC2moogFilter2BufferSize: (value) => dispatch(changeOSC2moogFilter2BufferSize(value)),\n    changeOSC2moogFilter2Resonance: (value) => dispatch(changeOSC2moogFilter2Resonance(value)),\n\n    toggleOSC2reverbBypass: () => dispatch(toggleOSC2reverbBypass()),\n    changeOSC2reverbLevel: (value) => dispatch(changeOSC2reverbLevel(value)),\n\n    toggleOSC2pannerBypass: () => dispatch(toggleOSC2pannerBypass()),\n    changeOSC2pannerPan: (value) => dispatch(changeOSC2pannerPan(value)),\n\n    toggleOSC2phaserBypass: () => dispatch(toggleOSC2phaserBypass()),\n    changeOSC2phaserRate: (value) => dispatch(changeOSC2phaserRate(value)),\n    changeOSC2phaserDepth: (value) => dispatch(changeOSC2phaserDepth(value)),\n    changeOSC2phaserFeedback: (value) => dispatch(changeOSC2phaserFeedback(value)),\n\n    toggleOSC2overdriveBypass: () => dispatch(toggleOSC2overdriveBypass()),\n    changeOSC2overdriveDrive: (value) => dispatch(changeOSC2overdriveDrive(value)),\n    changeOSC2overdriveGain: (value) => dispatch(changeOSC2overdriveGain(value)),\n\n\n\n    changeOSC3Freq: (value) => dispatch(changeOSC3Freq(value)),\n\n    turnOnLFO3: () => dispatch(turnOnLFO3()),\n    changeLFO3Type: (wave) => dispatch(changeLFO3Type(wave)),\n    changeLFO3Freq: (value) => dispatch(changeLFO3Freq(value)),\n\n    toggleOSC3chorusBypass: () => dispatch(toggleOSC3chorusBypass()),\n    changeOSC3chorusDepth: (value) => dispatch(changeOSC3chorusDepth(value)),\n    changeOSC3chorusRate: (value) => dispatch(changeOSC3chorusRate(value)),\n\n    toggleOSC3filterBypass: () => dispatch(toggleOSC3filterBypass()),\n    changeOSC3filterDepth: (value) => dispatch(changeOSC3filterDepth(value)),\n    changeOSC3filterRate: (value) => dispatch(changeOSC3filterRate(value)),\n\n    toggleOSC3filter2Bypass: () => dispatch(toggleOSC3filter2Bypass()),\n    changeOSC3filter2Depth: (value) => dispatch(changeOSC3filter2Depth(value)),\n    changeOSC3filter2Rate: (value) => dispatch(changeOSC3filter2Rate(value)),\n\n    toggleOSC3tremoloBypass: () => dispatch(toggleOSC3tremoloBypass()),\n    changeOSC3tremoloIntensity: (value) => dispatch(changeOSC3tremoloIntensity(value)),\n    changeOSC3tremoloRate: (value) => dispatch(changeOSC3tremoloRate(value)),\n\n    toggleOSC3bitcrusherBypass: () => dispatch(toggleOSC3bitcrusherBypass()),\n    changeOSC3bitcrusherBits: (value) => dispatch(changeOSC3bitcrusherBits(value)),\n    changeOSC3bitcrusherBufferSize: (value) => dispatch(changeOSC3bitcrusherBufferSize(value)),\n\n    toggleOSC3moogFilterBypass: () => dispatch(toggleOSC3moogFilterBypass()),\n    changeOSC3moogFilterCutoff: (value) => dispatch(changeOSC3moogFilterCutoff(value)),\n    changeOSC3moogFilterBufferSize: (value) => dispatch(changeOSC3moogFilterBufferSize(value)),\n    changeOSC3moogFilterResonance: (value) => dispatch(changeOSC3moogFilterResonance(value)),\n\n    toggleOSC3moogFilter2Bypass: () => dispatch(toggleOSC3moogFilter2Bypass()),\n    changeOSC3moogFilter2Cutoff: (value) => dispatch(changeOSC3moogFilter2Cutoff(value)),\n    changeOSC3moogFilter2BufferSize: (value) => dispatch(changeOSC3moogFilter2BufferSize(value)),\n    changeOSC3moogFilter2Resonance: (value) => dispatch(changeOSC3moogFilter2Resonance(value)),\n\n    toggleOSC3reverbBypass: () => dispatch(toggleOSC3reverbBypass()),\n    changeOSC3reverbLevel: (value) => dispatch(changeOSC3reverbLevel(value)),\n\n    toggleOSC3pannerBypass: () => dispatch(toggleOSC3pannerBypass()),\n    changeOSC3pannerPan: (value) => dispatch(changeOSC3pannerPan(value)),\n\n    toggleOSC3phaserBypass: () => dispatch(toggleOSC3phaserBypass()),\n    changeOSC3phaserRate: (value) => dispatch(changeOSC3phaserRate(value)),\n    changeOSC3phaserDepth: (value) => dispatch(changeOSC3phaserDepth(value)),\n    changeOSC3phaserFeedback: (value) => dispatch(changeOSC3phaserFeedback(value)),\n\n    toggleOSC3overdriveBypass: () => dispatch(toggleOSC3overdriveBypass()),\n    changeOSC3overdriveDrive: (value) => dispatch(changeOSC3overdriveDrive(value)),\n    changeOSC3overdriveGain: (value) => dispatch(changeOSC3overdriveGain(value)),\n\n    changeOSC4Freq: (value) => dispatch(changeOSC4Freq(value)),\n\n    turnOnLFO4: () => dispatch(turnOnLFO4()),\n    changeLFO4Type: (wave) => dispatch(changeLFO4Type(wave)),\n    changeLFO4Freq: (value) => dispatch(changeLFO4Freq(value)),\n\n    toggleOSC4chorusBypass: () => dispatch(toggleOSC4chorusBypass()),\n    changeOSC4chorusDepth: (value) => dispatch(changeOSC4chorusDepth(value)),\n    changeOSC4chorusRate: (value) => dispatch(changeOSC4chorusRate(value)),\n\n    toggleOSC4filterBypass: () => dispatch(toggleOSC4filterBypass()),\n    changeOSC4filterDepth: (value) => dispatch(changeOSC4filterDepth(value)),\n    changeOSC4filterRate: (value) => dispatch(changeOSC4filterRate(value)),\n\n    toggleOSC4filter2Bypass: () => dispatch(toggleOSC4filter2Bypass()),\n    changeOSC4filter2Depth: (value) => dispatch(changeOSC4filter2Depth(value)),\n    changeOSC4filter2Rate: (value) => dispatch(changeOSC4filter2Rate(value)),\n\n    toggleOSC4tremoloBypass: () => dispatch(toggleOSC4tremoloBypass()),\n    changeOSC4tremoloIntensity: (value) => dispatch(changeOSC4tremoloIntensity(value)),\n    changeOSC4tremoloRate: (value) => dispatch(changeOSC4tremoloRate(value)),\n\n    toggleOSC4bitcrusherBypass: () => dispatch(toggleOSC4bitcrusherBypass()),\n    changeOSC4bitcrusherBits: (value) => dispatch(changeOSC4bitcrusherBits(value)),\n    changeOSC4bitcrusherBufferSize: (value) => dispatch(changeOSC4bitcrusherBufferSize(value)),\n\n    toggleOSC4moogFilterBypass: () => dispatch(toggleOSC4moogFilterBypass()),\n    changeOSC4moogFilterCutoff: (value) => dispatch(changeOSC4moogFilterCutoff(value)),\n    changeOSC4moogFilterBufferSize: (value) => dispatch(changeOSC4moogFilterBufferSize(value)),\n    changeOSC4moogFilterResonance: (value) => dispatch(changeOSC4moogFilterResonance(value)),\n\n    toggleOSC4moogFilter2Bypass: () => dispatch(toggleOSC4moogFilter2Bypass()),\n    changeOSC4moogFilter2Cutoff: (value) => dispatch(changeOSC4moogFilter2Cutoff(value)),\n    changeOSC4moogFilter2BufferSize: (value) => dispatch(changeOSC4moogFilter2BufferSize(value)),\n    changeOSC4moogFilter2Resonance: (value) => dispatch(changeOSC4moogFilter2Resonance(value)),\n\n    toggleOSC4reverbBypass: () => dispatch(toggleOSC4reverbBypass()),\n    changeOSC4reverbLevel: (value) => dispatch(changeOSC4reverbLevel(value)),\n\n    toggleOSC4pannerBypass: () => dispatch(toggleOSC4pannerBypass()),\n    changeOSC4pannerPan: (value) => dispatch(changeOSC4pannerPan(value)),\n\n    toggleOSC4phaserBypass: () => dispatch(toggleOSC4phaserBypass()),\n    changeOSC4phaserRate: (value) => dispatch(changeOSC4phaserRate(value)),\n    changeOSC4phaserDepth: (value) => dispatch(changeOSC4phaserDepth(value)),\n    changeOSC4phaserFeedback: (value) => dispatch(changeOSC4phaserFeedback(value)),\n\n    toggleOSC4overdriveBypass: () => dispatch(toggleOSC4overdriveBypass()),\n    changeOSC4overdriveDrive: (value) => dispatch(changeOSC4overdriveDrive(value)),\n    changeOSC4overdriveGain: (value) => dispatch(changeOSC4overdriveGain(value)),\n\n  \n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(XYPad);\n"]},"metadata":{},"sourceType":"module"}