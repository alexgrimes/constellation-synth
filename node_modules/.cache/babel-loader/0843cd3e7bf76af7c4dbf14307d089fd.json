{"ast":null,"code":"import store from './store';\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nclass OSC2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      context: [],\n      isStarted: false\n    };\n  }\n\n  componentWillMount() {\n    var contextClass = window.AudioContext || window.webkitAudioContext;\n\n    if (contextClass) {\n      // Web Audio API is available.\n      this.state.context = new contextClass();\n    } else {\n      alert('Web Audio API is not supported in this browser.');\n    }\n  }\n\n  turnOnOSC2() {\n    console.log(this.props, '<---PROPS', this.state, '<-----STATE');\n\n    if (this.props.isOSC2On) {\n      if (!this.state.isStarted) {\n        this.osc = new OscillatorNode(this.state.context);\n        let oscGain = this.state.context.createGain();\n        let masterGain = this.state.context.createGain();\n        this.osc.connect(oscGain);\n        oscGain.connect(masterGain); // let frequency = this.osc.frequency.value / 2\n        // this.osc.frequency.value = frequency;\n\n        console.log(this.osc.frequency.value, masterGain.value);\n        masterGain.gain.value = this.props.masterGainValue;\n        masterGain.connect(this.state.context.destination);\n        this.osc.start(0);\n        this.state.isStarted = true;\n      }\n\n      console.log(this.state.isStarted, this.state.context, this.osc.frequency);\n    } else {\n      if (typeof this.osc !== \"undefined\") {\n        if (this.state.isStarted) {\n          this.osc.stop(0);\n          this.state.isStarted = false;\n        }\n      }\n    }\n  }\n\n  OSC2TypeChanged(typeName) {\n    console.log(this.state.isStarted);\n\n    if (typeof this.osc !== \"undefined\") {\n      this.osc.type = typeName;\n    }\n  }\n\n  OSC2FrequencyChanged(value) {\n    console.log(value, this.state.context.currentTime, this.osc);\n\n    if (typeof this.osc !== \"undefined\") {\n      this.osc.frequency.setValueAtTime(value, this.state.context.currentTime);\n    }\n  }\n\n  render() {\n    console.log(this.state.isStarted);\n\n    if (typeof this.osc !== \"undefined\") {\n      this.osc.onended = function () {\n        console.log(\"hey\");\n      };\n    }\n\n    console.log(this.props.osc2Freq, this.osc);\n    this.turnOnOSC2(this.props.isOSC2On);\n    this.OSC2TypeChanged(this.props.osc2Type);\n    this.OSC2FrequencyChanged(this.props.osc2Freq);\n    return null;\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isOSC2On: state.isOSC2On,\n    osc2Freq: state.osc2Freq,\n    osc2Type: state.osc2Type,\n    masterGainValue: state.masterGainValue\n  };\n}\n\nexport default connect(mapStateToProps)(OSC2);","map":{"version":3,"sources":["/Users/Nanis/Flatiron/code/mod5/synth-builder/synth-builder/src/components/OSC2.js"],"names":["store","React","connect","OSC2","Component","constructor","props","state","context","isStarted","componentWillMount","contextClass","window","AudioContext","webkitAudioContext","alert","turnOnOSC2","console","log","isOSC2On","osc","OscillatorNode","oscGain","createGain","masterGain","frequency","value","gain","masterGainValue","destination","start","stop","OSC2TypeChanged","typeName","type","OSC2FrequencyChanged","currentTime","setValueAtTime","render","onended","osc2Freq","osc2Type","mapStateToProps"],"mappings":"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","sourcesContent":["import store from './store'\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nclass OSC2 extends React.Component {\n  constructor(props) {\n  \tsuper(props);\n    this.state = {\n      context: [],\n      isStarted: false,\n    };\n  }\n\n  componentWillMount() {\n\tvar contextClass = (window.AudioContext || window.webkitAudioContext)\n\n\tif (contextClass) \n\t{\n\t  // Web Audio API is available.\n\t  this.state.context = new contextClass();\n\t} \n\telse \n\t{\n\t  alert('Web Audio API is not supported in this browser.')\n\t}\n\n  }\n\n  turnOnOSC2() {\n    console.log(this.props, '<---PROPS', this.state, '<-----STATE')\n    if (this.props.isOSC2On) {\n      if (!this.state.isStarted) {\n        this.osc = new OscillatorNode(this.state.context);\n        let oscGain = this.state.context.createGain();\n        let masterGain = this.state.context.createGain();\n        this.osc.connect(oscGain);\n        oscGain.connect(masterGain);\n        // let frequency = this.osc.frequency.value / 2\n        // this.osc.frequency.value = frequency;\n        console.log(this.osc.frequency.value, masterGain.value)\n        masterGain.gain.value = this.props.masterGainValue;\n        masterGain.connect(this.state.context.destination)\n        this.osc.start(0);\n        this.state.isStarted = true;\n      }\n      console.log(this.state.isStarted, this.state.context, this.osc.frequency)\n    }\n    else {\n      if(typeof this.osc !== \"undefined\") {\n        if (this.state.isStarted) {\n          this.osc.stop(0);\n          this.state.isStarted = false;\n        }\n      }\n    }\n  }\n\n  OSC2TypeChanged(typeName) {\n    console.log(this.state.isStarted)\n\tif (typeof this.osc !== \"undefined\") {\n\t  this.osc.type = typeName;\n\t}\n  }\n\n  OSC2FrequencyChanged(value) {\n    console.log(value, this.state.context.currentTime, this.osc)\n    if (typeof this.osc !== \"undefined\") {\n\t  this.osc.frequency.setValueAtTime(value, this.state.context.currentTime);\n  }\n  }\n  \n\n  render() {\n    console.log(this.state.isStarted)\n  \tif(typeof this.osc !== \"undefined\") {\n  \t\tthis.osc.onended = function() {\n  \t\t\tconsole.log(\"hey\")\n  \t\t}\n  \t}\n    console.log(this.props.osc2Freq, this.osc)\n    this.turnOnOSC2(this.props.isOSC2On);\n    this.OSC2TypeChanged(this.props.osc2Type);\n    this.OSC2FrequencyChanged(this.props.osc2Freq);\n\n    return (null)\n  }\n}\n\nfunction mapStateToProps(state){\n  return{\n    isOSC2On: state.isOSC2On,\n    osc2Freq: state.osc2Freq,\n    osc2Type: state.osc2Type,\n    masterGainValue: state.masterGainValue,\n  }\n}\n\nexport default connect(mapStateToProps)(OSC2);"]},"metadata":{},"sourceType":"module"}